// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
(function ($hx_exports, $global) { "use strict";
$hx_exports["troshx"] = $hx_exports["troshx"] || {};
$hx_exports["troshx"]["sos"] = $hx_exports["troshx"]["sos"] || {};
$hx_exports["troshx"]["sos"]["vue"] = $hx_exports["troshx"]["sos"]["vue"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			l.add(x1);
		}
	}
	return l;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var MainSOS = function() {
	this.boot = new haxevx_vuex_core_VxBoot();
	var urlSplit = window.location.href.split("#")[0].split("?");
	var params = haxe_web_Request.getParams();
	if((__map_reserved["inventories"] != null ? params.getReserved("inventories") : params.h["inventories"]) != null) {
		troshx_sos_vue_Globals.DOMAIN_INVENTORY = __map_reserved["inventories"] != null ? params.getReserved("inventories") : params.h["inventories"];
	}
	if((__map_reserved["characters"] != null ? params.getReserved("characters") : params.h["characters"]) != null) {
		troshx_sos_vue_Globals.DOMAIN_CHARACTER = __map_reserved["characters"] != null ? params.getReserved("characters") : params.h["characters"];
	}
	if((__map_reserved["autoload"] != null ? params.getReserved("autoload") : params.h["autoload"]) != null) {
		troshx_sos_vue_Globals.AUTO_LOAD = __map_reserved["autoload"] != null ? params.getReserved("autoload") : params.h["autoload"];
	}
	var url = urlSplit[0];
	var hash = urlSplit.pop();
	hash = hash.split("&")[0];
	if(hash == "chargen") {
		this.boot.startVueWithRootComponent("#app",new troshx_sos_vue_CharGen());
		haxevx_vuex_core_VxBoot.notifyStarted();
	} else if(hash == "charsheet") {
		this.boot.startVueWithRootComponent("#app",new troshx_sos_vue_CharSheetVue());
		haxevx_vuex_core_VxBoot.notifyStarted();
	} else if(hash == "inventory") {
		this.boot.startVueWithRootComponent("#app",new troshx_sos_vue_InventoryStandalone(new troshx_sos_vue_InventoryManager()));
		haxevx_vuex_core_VxBoot.notifyStarted();
	} else {
		var templateStr = "<div>\r\n\t\t\t\t\t<h1>Song of Swords Utilities</h1>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"" + url + "?chargen\">Create a Character</a></li>\r\n\t\t\t\t\t\t<li><a href=\"" + url + "?charsheet\">Load a Character</a></li>\r\n\t\t\t\t\t\t<li><a href=\"" + url + "?inventory\">Inventory Manager</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<h2>General TROSLike Utilities</h2>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"http://glidias.github.io/Asharena/demos/trosdev/probability.html\" target=\"_blank\">Dice Pool Probability Calculator</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>";
		var mock = { template : templateStr};
		this.boot.startVueWithRootComponent("#app",mock);
	}
};
$hxClasses["MainSOS"] = MainSOS;
MainSOS.__name__ = ["MainSOS"];
MainSOS.main = function() {
	new MainSOS();
};
MainSOS.prototype = {
	__class__: MainSOS
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
$hxClasses["haxe.Http"] = haxe_Http;
haxe_Http.__name__ = ["haxe","Http"];
haxe_Http.prototype = {
	setParameter: function(param,value) {
		this.params = Lambda.filter(this.params,function(p) {
			return p.param != param;
		});
		this.params.push({ param : param, value : value});
		return this;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				var s1 = p.param;
				var uri1 = encodeURIComponent(s1) + "=";
				var s2 = p.value;
				uri += uri1 + encodeURIComponent(s2);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_Http
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null ? "null" : "" + v2;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case List:
				this.buf.b += "l";
				var v3 = v;
				var _g_head = v3.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i1 = val;
					this.serialize(i1);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v4 = v;
				var k = v4.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v4.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var k2 = v5.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					var id = Reflect.field(k3,"__id__");
					Reflect.deleteField(k3,"__id__");
					this.serialize(k3);
					k3["__id__"] = id;
					this.serialize(v5.h[k3.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var k4 = v6.keys();
				while(k4.hasNext()) {
					var k5 = k4.next();
					this.serializeString(k5);
					this.serialize(__map_reserved[k5] != null ? v6.getReserved(k5) : v6.h[k5]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i2 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var length = haxe_Serializer.BASE64.length;
					var this1 = new Array(length);
					b64 = this1;
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i3 = _g11++;
						b64[i3] = HxOverrides.cca(haxe_Serializer.BASE64,i3);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i2 < max) {
					var b1 = v7.b[i2++];
					var b2 = v7.b[i2++];
					var b3 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i2 == max) {
					var b11 = v7.b[i2++];
					var b21 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i2 == max + 1) {
					var b12 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g[2];
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(Type.getEnumName(e));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else {
				this.serializeString(v[0]);
			}
			this.buf.b += ":";
			var l1 = v["length"];
			this.buf.b += Std.string(l1 - 2);
			var _g12 = 2;
			var _g4 = l1;
			while(_g12 < _g4) {
				var i4 = _g12++;
				this.serialize(v[i4]);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g1 = from + 1;
		var _g = to;
		while(_g1 < _g) {
			var i = _g1++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) {
		return;
	}
	n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	__class__: haxe_io_Bytes
};
var haxe_web_Request = function() { };
$hxClasses["haxe.web.Request"] = haxe_web_Request;
haxe_web_Request.__name__ = ["haxe","web","Request"];
haxe_web_Request.getParams = function() {
	var get = HxOverrides.substr(window.location.search,1,null);
	var params = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = new EReg("[&;]","g").split(get);
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		var pl = p.split("=");
		if(pl.length < 2) {
			continue;
		}
		var name = pl.shift();
		var key = decodeURIComponent(name.split("+").join(" "));
		var s = pl.join("=");
		var value = decodeURIComponent(s.split("+").join(" "));
		if(__map_reserved[key] != null) {
			params.setReserved(key,value);
		} else {
			params.h[key] = value;
		}
	}
	return params;
};
var haxevx_vuex_core_IBuildListed = function() { };
$hxClasses["haxevx.vuex.core.IBuildListed"] = haxevx_vuex_core_IBuildListed;
haxevx_vuex_core_IBuildListed.__name__ = ["haxevx","vuex","core","IBuildListed"];
var haxevx_vuex_core_IPayload = function() { };
$hxClasses["haxevx.vuex.core.IPayload"] = haxevx_vuex_core_IPayload;
haxevx_vuex_core_IPayload.__name__ = ["haxevx","vuex","core","IPayload"];
haxevx_vuex_core_IPayload.prototype = {
	__class__: haxevx_vuex_core_IPayload
};
var haxevx_vuex_core_NoneT = function() { };
$hxClasses["haxevx.vuex.core.NoneT"] = haxevx_vuex_core_NoneT;
haxevx_vuex_core_NoneT.__name__ = ["haxevx","vuex","core","NoneT"];
haxevx_vuex_core_NoneT.prototype = {
	toString: function() {
		return "NoneT";
	}
	,__class__: haxevx_vuex_core_NoneT
};
var haxevx_vuex_core_VComponent = function() {
	this._Init();
};
$hxClasses["haxevx.vuex.core.VComponent"] = haxevx_vuex_core_VComponent;
haxevx_vuex_core_VComponent.__name__ = ["haxevx","vuex","core","VComponent"];
haxevx_vuex_core_VComponent.__super__ = Object;
haxevx_vuex_core_VComponent.prototype = $extend(Object.prototype,{
	_Init: function() {
	}
	,get__props: function() {
		return this;
	}
	,get__vData: function() {
		return this.$data;
	}
	,PropsData: function() {
		return null;
	}
	,Data: function() {
		return null;
	}
	,Created: function() {
	}
	,BeforeCreate: function() {
	}
	,BeforeDestroy: function() {
	}
	,Destroy: function() {
	}
	,BeforeMount: function() {
	}
	,Mounted: function() {
	}
	,BeforeUpdate: function() {
	}
	,Updated: function() {
	}
	,Activated: function() {
	}
	,Deactivated: function() {
	}
	,El: function() {
		return null;
	}
	,Render: function(c) {
		return null;
	}
	,Template: function() {
		return null;
	}
	,Components: function() {
		return null;
	}
	,GetDefaultPropSettings: function() {
		return null;
	}
	,GetDefaultPropValues: function() {
		return null;
	}
	,__class__: haxevx_vuex_core_VComponent
});
var haxevx_vuex_core_VxBoot = function() {
};
$hxClasses["haxevx.vuex.core.VxBoot"] = haxevx_vuex_core_VxBoot;
haxevx_vuex_core_VxBoot.__name__ = ["haxevx","vuex","core","VxBoot"];
haxevx_vuex_core_VxBoot.registerModuleWithStore = function(name,mod,store) {
	mod._Init(name + "/");
	store[name] = mod;
	store.registerModule(name,mod);
	haxevx_vuex_core_VxBoot.clearModuleInjStack(store);
};
haxevx_vuex_core_VxBoot.clearModuleInjStack = function(store) {
	var storeGetters = store.getters;
	var stack = haxevx_vuex_core_ModuleStack.stack;
	var i = stack.length;
	while(--i > -1) stack[i]._InjNative(storeGetters);
	haxevx_vuex_core_ModuleStack.stack = [];
};
haxevx_vuex_core_VxBoot.notifyStarted = function() {
};
haxevx_vuex_core_VxBoot.getRenderComponentMethod = function(nativeComp) {
	return function(h) {
		return h(nativeComp,null,null);
	};
};
haxevx_vuex_core_VxBoot.prototype = {
	startStore: function(storeParams) {
		if(this.STORE != null) {
			throw new js__$Boot_HaxeError("Vuex store already started! Only 1 store is allowed");
		}
		var metaFields;
		var md;
		var noNamespaceGetterProps;
		var store = new Vuex.Store(storeParams);
		var o;
		var storeGetters = store.getters;
		var stack = haxevx_vuex_core_ModuleStack.stack;
		var i = stack.length;
		while(--i > -1) stack[i]._InjNative(storeGetters);
		stack = [];
		if(storeParams.modules != null) {
			var _g = 0;
			o = storeParams.modules;
			var _g1 = Reflect.fields(o);
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				var m = Reflect.field(o,p);
				md = storeParams[p];
				store[p] = md;
			}
		}
		this.STORE = store;
		return store;
	}
	,startVueWithRootComponent: function(el,rootComponent) {
		var bootVueParams = { };
		bootVueParams.el = el;
		if(this.STORE != null) {
			bootVueParams["store"] = this.STORE;
		}
		bootVueParams.render = haxevx_vuex_core_VxBoot.getRenderComponentMethod(rootComponent);
		var vm = new Vue(bootVueParams);
		haxevx_vuex_core_VxBoot.notifyStarted();
		return vm;
	}
	,__class__: haxevx_vuex_core_VxBoot
};
var haxevx_vuex_core_ModuleStack = function() { };
$hxClasses["haxevx.vuex.core.ModuleStack"] = haxevx_vuex_core_ModuleStack;
haxevx_vuex_core_ModuleStack.__name__ = ["haxevx","vuex","core","ModuleStack"];
var haxevx_vuex_core_VxMacroUtil = function() { };
$hxClasses["haxevx.vuex.core.VxMacroUtil"] = haxevx_vuex_core_VxMacroUtil;
haxevx_vuex_core_VxMacroUtil.__name__ = ["haxevx","vuex","core","VxMacroUtil"];
haxevx_vuex_core_VxMacroUtil.dynamicSet = function(dyn,key,value) {
	dyn[key] = value;
};
haxevx_vuex_core_VxMacroUtil.dynamicSetPropValueInto = function(into,propSettingField,from) {
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		var curSetting = Reflect.field(into,f);
		if(curSetting == null) {
			curSetting = { };
			into[f] = curSetting;
		}
		curSetting[propSettingField] = Reflect.field(from,f);
	}
};
haxevx_vuex_core_VxMacroUtil.dynamicSetPropSettingInto = function(into,from) {
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		var setting = Reflect.field(from,f);
		var curSetting = Reflect.field(into,f);
		if(curSetting != null) {
			var _g2 = 0;
			var _g3 = Reflect.fields(setting);
			while(_g2 < _g3.length) {
				var d = _g3[_g2];
				++_g2;
				curSetting[d] = Reflect.field(setting,d);
			}
		} else {
			into[f] = setting;
		}
	}
};
haxevx_vuex_core_VxMacroUtil.dynamicSetOverwrite = function(into,from) {
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		into[f] = Reflect.field(from,f);
	}
};
var haxevx_vuex_native_ActionContext = function() { };
$hxClasses["haxevx.vuex.native.ActionContext"] = haxevx_vuex_native_ActionContext;
haxevx_vuex_native_ActionContext.__name__ = ["haxevx","vuex","native","ActionContext"];
haxevx_vuex_native_ActionContext.prototype = {
	__class__: haxevx_vuex_native_ActionContext
};
var haxevx_vuex_util_VHTMacros = function() { };
$hxClasses["haxevx.vuex.util.VHTMacros"] = haxevx_vuex_util_VHTMacros;
haxevx_vuex_util_VHTMacros.__name__ = ["haxevx","vuex","util","VHTMacros"];
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var msignal_Signal = function(valueClasses) {
	if(valueClasses == null) {
		valueClasses = [];
	}
	this.valueClasses = valueClasses;
	this.slots = msignal_SlotList.NIL;
	this.priorityBased = false;
};
$hxClasses["msignal.Signal"] = msignal_Signal;
msignal_Signal.__name__ = ["msignal","Signal"];
msignal_Signal.prototype = {
	add: function(listener) {
		return this.registerListener(listener);
	}
	,addOnce: function(listener) {
		return this.registerListener(listener,true);
	}
	,addWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,false,priority);
	}
	,addOnceWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,true,priority);
	}
	,remove: function(listener) {
		var slot = this.slots.find(listener);
		if(slot == null) {
			return null;
		}
		this.slots = this.slots.filterNot(listener);
		return slot;
	}
	,removeAll: function() {
		this.slots = msignal_SlotList.NIL;
	}
	,registerListener: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		if(this.registrationPossible(listener,once)) {
			var newSlot = this.createSlot(listener,once,priority);
			if(!this.priorityBased && priority != 0) {
				this.priorityBased = true;
			}
			if(!this.priorityBased && priority == 0) {
				this.slots = this.slots.prepend(newSlot);
			} else {
				this.slots = this.slots.insertWithPriority(newSlot);
			}
			return newSlot;
		}
		return this.slots.find(listener);
	}
	,registrationPossible: function(listener,once) {
		if(!this.slots.nonEmpty) {
			return true;
		}
		var existingSlot = this.slots.find(listener);
		if(existingSlot == null) {
			return true;
		}
		return false;
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return null;
	}
	,get_numListeners: function() {
		return this.slots.get_length();
	}
	,__class__: msignal_Signal
};
var msignal_Signal0 = function() {
	msignal_Signal.call(this);
};
$hxClasses["msignal.Signal0"] = msignal_Signal0;
msignal_Signal0.__name__ = ["msignal","Signal0"];
msignal_Signal0.__super__ = msignal_Signal;
msignal_Signal0.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function() {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute();
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot0(this,listener,once,priority);
	}
	,__class__: msignal_Signal0
});
var msignal_Signal1 = function(type) {
	msignal_Signal.call(this,[type]);
};
$hxClasses["msignal.Signal1"] = msignal_Signal1;
msignal_Signal1.__name__ = ["msignal","Signal1"];
msignal_Signal1.__super__ = msignal_Signal;
msignal_Signal1.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot1(this,listener,once,priority);
	}
	,__class__: msignal_Signal1
});
var msignal_Signal2 = function(type1,type2) {
	msignal_Signal.call(this,[type1,type2]);
};
$hxClasses["msignal.Signal2"] = msignal_Signal2;
msignal_Signal2.__name__ = ["msignal","Signal2"];
msignal_Signal2.__super__ = msignal_Signal;
msignal_Signal2.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value1,value2) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value1,value2);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot2(this,listener,once,priority);
	}
	,__class__: msignal_Signal2
});
var msignal_Slot = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	this.signal = signal;
	this.set_listener(listener);
	this.once = once;
	this.priority = priority;
	this.enabled = true;
};
$hxClasses["msignal.Slot"] = msignal_Slot;
msignal_Slot.__name__ = ["msignal","Slot"];
msignal_Slot.prototype = {
	remove: function() {
		this.signal.remove(this.listener);
	}
	,set_listener: function(value) {
		return this.listener = value;
	}
	,__class__: msignal_Slot
};
var msignal_Slot0 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot0"] = msignal_Slot0;
msignal_Slot0.__name__ = ["msignal","Slot0"];
msignal_Slot0.__super__ = msignal_Slot;
msignal_Slot0.prototype = $extend(msignal_Slot.prototype,{
	execute: function() {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		this.listener();
	}
	,__class__: msignal_Slot0
});
var msignal_Slot1 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot1"] = msignal_Slot1;
msignal_Slot1.__name__ = ["msignal","Slot1"];
msignal_Slot1.__super__ = msignal_Slot;
msignal_Slot1.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param != null) {
			value1 = this.param;
		}
		this.listener(value1);
	}
	,__class__: msignal_Slot1
});
var msignal_Slot2 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot2"] = msignal_Slot2;
msignal_Slot2.__name__ = ["msignal","Slot2"];
msignal_Slot2.__super__ = msignal_Slot;
msignal_Slot2.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1,value2) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param1 != null) {
			value1 = this.param1;
		}
		if(this.param2 != null) {
			value2 = this.param2;
		}
		this.listener(value1,value2);
	}
	,__class__: msignal_Slot2
});
var msignal_SlotList = function(head,tail) {
	this.nonEmpty = false;
	if(head == null && tail == null) {
		this.nonEmpty = false;
	} else if(head != null) {
		this.head = head;
		this.tail = tail == null ? msignal_SlotList.NIL : tail;
		this.nonEmpty = true;
	}
};
$hxClasses["msignal.SlotList"] = msignal_SlotList;
msignal_SlotList.__name__ = ["msignal","SlotList"];
msignal_SlotList.prototype = {
	get_length: function() {
		if(!this.nonEmpty) {
			return 0;
		}
		if(this.tail == msignal_SlotList.NIL) {
			return 1;
		}
		var result = 0;
		var p = this;
		while(p.nonEmpty) {
			++result;
			p = p.tail;
		}
		return result;
	}
	,prepend: function(slot) {
		return new msignal_SlotList(slot,this);
	}
	,append: function(slot) {
		if(slot == null) {
			return this;
		}
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		if(this.tail == msignal_SlotList.NIL) {
			return new msignal_SlotList(slot).prepend(this.head);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,insertWithPriority: function(slot) {
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		var priority = slot.priority;
		if(priority >= this.head.priority) {
			return this.prepend(slot);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(priority > current.head.priority) {
				subClone.tail = current.prepend(slot);
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,filterNot: function(listener) {
		if(!this.nonEmpty || listener == null) {
			return this;
		}
		if(Reflect.compareMethods(this.head.listener,listener)) {
			return this.tail;
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(Reflect.compareMethods(current.head.listener,listener)) {
				subClone.tail = current.tail;
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		return this;
	}
	,contains: function(listener) {
		if(!this.nonEmpty) {
			return false;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return true;
			}
			p = p.tail;
		}
		return false;
	}
	,find: function(listener) {
		if(!this.nonEmpty) {
			return null;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return p.head;
			}
			p = p.tail;
		}
		return null;
	}
	,__class__: msignal_SlotList
};
var troshx_core_IUid = function() { };
$hxClasses["troshx.core.IUid"] = troshx_core_IUid;
troshx_core_IUid.__name__ = ["troshx","core","IUid"];
troshx_core_IUid.prototype = {
	__class__: troshx_core_IUid
};
var troshx_ds_IMatchArray = function() { };
$hxClasses["troshx.ds.IMatchArray"] = troshx_ds_IMatchArray;
troshx_ds_IMatchArray.__name__ = ["troshx","ds","IMatchArray"];
troshx_ds_IMatchArray.prototype = {
	__class__: troshx_ds_IMatchArray
};
var troshx_ds_HashedArray = function() {
	this.hash = { };
	this.list = [];
};
$hxClasses["troshx.ds.HashedArray"] = troshx_ds_HashedArray;
troshx_ds_HashedArray.__name__ = ["troshx","ds","HashedArray"];
troshx_ds_HashedArray.__interfaces__ = [troshx_ds_IMatchArray];
troshx_ds_HashedArray.prototype = {
	filter: function(handler) {
		this.list = this.list.filter(handler);
		this.rehash();
	}
	,rehash: function() {
		var theHash = { };
		var _g1 = 0;
		var _g = this.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			var item = this.list[i];
			theHash[item.get_uid()] = item;
		}
		this.hash = theHash;
	}
	,add: function(item) {
		var uid = item.get_uid();
		if(!this.hashContains(item)) {
			this.hash[uid] = item;
			this.list.push(item);
		} else {
			var fw = this.hash[uid];
			fw.updateAgainst(item);
		}
	}
	,indexOf: function(item) {
		var _g1 = 0;
		var _g = this.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.list[i].get_uid() == item.get_uid()) {
				return i;
			}
		}
		return -1;
	}
	,'delete': function(item) {
		var uid = item.get_uid();
		if(this.hashContains(item)) {
			Reflect.deleteField(this.hash,uid);
		} else {
			console.log("Warning: No item found to be removed for uid:" + item.get_uid());
		}
		var index = this.indexOf(item);
		if(index >= 0) {
			this.list.splice(index,1);
		} else {
			console.log("Warning: No item found to be removed for array index:" + index);
		}
	}
	,contains: function(item) {
		return this.hashContains(item);
	}
	,containsId: function(ider) {
		return Object.prototype.hasOwnProperty.call(this.hash,ider);
	}
	,hashContains: function(item) {
		var o = this.hash;
		var field = item.get_uid();
		return Object.prototype.hasOwnProperty.call(o,field);
	}
	,findById: function(id) {
		return Reflect.field(this.hash,id);
	}
	,listContains: function(item) {
		return this.indexOf(item) >= 0;
	}
	,__class__: troshx_ds_HashedArray
};
var troshx_ds_IDMatchArray = function() {
	this.list = [];
};
$hxClasses["troshx.ds.IDMatchArray"] = troshx_ds_IDMatchArray;
troshx_ds_IDMatchArray.__name__ = ["troshx","ds","IDMatchArray"];
troshx_ds_IDMatchArray.__interfaces__ = [troshx_ds_IMatchArray];
troshx_ds_IDMatchArray.prototype = {
	filter: function(handler) {
		this.list = this.list.filter(handler);
	}
	,add: function(item) {
		var uid = item.get_uid();
		var matchingItem = this.getMatchingItem(item);
		if(matchingItem == null) {
			this.list.push(item);
		} else {
			matchingItem.updateAgainst(item);
			var testIndex;
			var tmp;
			if(item != matchingItem) {
				testIndex = this.list.indexOf(item);
				tmp = testIndex >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				this.list.splice(testIndex,1);
			}
		}
	}
	,'delete': function(item) {
		var uid = item.get_uid();
		if(!this.contains(item)) {
			console.log("Warning: No item found to be removed for uid:" + item.get_uid());
		}
		var index = this.list.indexOf(item);
		if(index >= 0) {
			this.list.splice(index,1);
		} else {
			console.log("Warning: No item found to be removed for array index:" + index);
		}
	}
	,contains: function(item) {
		var _g1 = 0;
		var _g = this.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.list[i].get_uid() == item.get_uid()) {
				return true;
			}
		}
		return false;
	}
	,splicedAgainst: function(item) {
		var spliceIndex = -1;
		var spliceItem = null;
		var _g1 = 0;
		var _g = this.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = this.list[i];
			if(a.get_uid() == item.get_uid()) {
				spliceItem = a;
				spliceIndex = i;
				break;
			}
		}
		if(spliceItem != null) {
			if(spliceItem.spliceAgainst(item) <= 0) {
				this.list.splice(spliceIndex,1);
			}
			return true;
		}
		return false;
	}
	,getMatchingItem: function(item) {
		var _g1 = 0;
		var _g = this.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = this.list[i];
			if(a.get_uid() == item.get_uid()) {
				return a;
			}
		}
		return null;
	}
	,listContains: function(item) {
		return this.list.indexOf(item) >= 0;
	}
	,get_length: function() {
		return this.list.length;
	}
	,__class__: troshx_ds_IDMatchArray
};
var troshx_ds_IUpdateWith = function() { };
$hxClasses["troshx.ds.IUpdateWith"] = troshx_ds_IUpdateWith;
troshx_ds_IUpdateWith.__name__ = ["troshx","ds","IUpdateWith"];
troshx_ds_IUpdateWith.prototype = {
	__class__: troshx_ds_IUpdateWith
};
var troshx_ds_IValidable = function() { };
$hxClasses["troshx.ds.IValidable"] = troshx_ds_IValidable;
troshx_ds_IValidable.__name__ = ["troshx","ds","IValidable"];
troshx_ds_IValidable.prototype = {
	__class__: troshx_ds_IValidable
};
var troshx_ds_ValueHolder = function(v) {
	this.value = v;
};
$hxClasses["troshx.ds.ValueHolder"] = troshx_ds_ValueHolder;
troshx_ds_ValueHolder.__name__ = ["troshx","ds","ValueHolder"];
troshx_ds_ValueHolder.prototype = {
	__class__: troshx_ds_ValueHolder
};
var troshx_ds_ValueHolder_$Int = function(v) {
	this.value = v;
};
$hxClasses["troshx.ds.ValueHolder_Int"] = troshx_ds_ValueHolder_$Int;
troshx_ds_ValueHolder_$Int.__name__ = ["troshx","ds","ValueHolder_Int"];
troshx_ds_ValueHolder_$Int.prototype = {
	__class__: troshx_ds_ValueHolder_$Int
};
var troshx_sos_core_BoonBane = function(name,costs) {
	this.name = name;
	this.costs = costs;
	this.flags = 0;
	this.clampRank = false;
	this.multipleTimes = 0;
	this.channels = 0;
	this.superChannels = 0;
};
$hxClasses["troshx.sos.core.BoonBane"] = troshx_sos_core_BoonBane;
troshx_sos_core_BoonBane.__name__ = ["troshx","sos","core","BoonBane"];
troshx_sos_core_BoonBane.prototype = {
	isAvailableCharacterCreation: function() {
		return this.costs != troshx_sos_core_BoonBane.COSTLESS_ARRAY;
	}
	,get_uid: function() {
		return this.name;
	}
	,__class__: troshx_sos_core_BoonBane
};
var troshx_sos_core_Boon = function(name,costs) {
	troshx_sos_core_BoonBane.call(this,name,costs);
};
$hxClasses["troshx.sos.core.Boon"] = troshx_sos_core_Boon;
troshx_sos_core_Boon.__name__ = ["troshx","sos","core","Boon"];
troshx_sos_core_Boon.__super__ = troshx_sos_core_BoonBane;
troshx_sos_core_Boon.prototype = $extend(troshx_sos_core_BoonBane.prototype,{
	getEmptyAssignInstance: function($char) {
		return new troshx_sos_core_BoonAssign();
	}
	,getAssign: function(rank,$char) {
		var me = this.getEmptyAssignInstance($char);
		me.boon = this;
		me.rank = rank;
		return me;
	}
	,__class__: troshx_sos_core_Boon
});
var troshx_sos_bnb_Allies = function() {
	troshx_sos_core_Boon.call(this,"Allies",[1,5,10]);
	this.clampRank = true;
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.Allies"] = troshx_sos_bnb_Allies;
troshx_sos_bnb_Allies.__name__ = ["troshx","sos","bnb","Allies"];
troshx_sos_bnb_Allies.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Allies.prototype = $extend(troshx_sos_core_Boon.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_AlliesAssign();
	}
	,__class__: troshx_sos_bnb_Allies
});
var troshx_sos_bnb_IBuildUIFields = function() { };
$hxClasses["troshx.sos.bnb.IBuildUIFields"] = troshx_sos_bnb_IBuildUIFields;
troshx_sos_bnb_IBuildUIFields.__name__ = ["troshx","sos","bnb","IBuildUIFields"];
var troshx_sos_core_BoonBaneAssign = function() {
	this._minRequired = 0;
	this._canceled = false;
	this._forcePermanent = false;
	this.discount = 0;
};
$hxClasses["troshx.sos.core.BoonBaneAssign"] = troshx_sos_core_BoonBaneAssign;
troshx_sos_core_BoonBaneAssign.__name__ = ["troshx","sos","core","BoonBaneAssign"];
troshx_sos_core_BoonBaneAssign.__interfaces__ = [troshx_core_IUid];
troshx_sos_core_BoonBaneAssign.prototype = {
	freeze: function() {
	}
	,unfreezeAll: function() {
	}
	,dontCountCost: function() {
		if(!this._canceled) {
			return this._forcePermanent;
		} else {
			return true;
		}
	}
	,cleanup: function() {
	}
	,cleanupUIArrays: function() {
	}
	,onFurtherAdded: function($char) {
	}
	,onRemoved: function($char) {
	}
	,onInited: function($char) {
	}
	,getQty: function() {
		return 1;
	}
	,getCost: function(rank) {
		return 0;
	}
	,getCosting: function(bb,rank) {
		return bb.costs[rank - 1];
	}
	,isValid: function() {
		return true;
	}
	,getBoonOrBane: function() {
		return null;
	}
	,getUIFields: function() {
		return null;
	}
	,get_uid: function() {
		return "";
	}
	,__class__: troshx_sos_core_BoonBaneAssign
};
var troshx_sos_core_BoonAssign = function() {
	troshx_sos_core_BoonBaneAssign.call(this);
};
$hxClasses["troshx.sos.core.BoonAssign"] = troshx_sos_core_BoonAssign;
troshx_sos_core_BoonAssign.__name__ = ["troshx","sos","core","BoonAssign"];
troshx_sos_core_BoonAssign.__interfaces__ = [troshx_ds_IUpdateWith];
troshx_sos_core_BoonAssign.__super__ = troshx_sos_core_BoonBaneAssign;
troshx_sos_core_BoonAssign.prototype = $extend(troshx_sos_core_BoonBaneAssign.prototype,{
	getMaxLength: function(costBase,curLength) {
		return (this._remainingCached + curLength * costBase) / costBase | 0;
	}
	,clampLength: function(length,minClamp) {
		if(minClamp == null) {
			minClamp = 1;
		}
		if(length >= minClamp) {
			return length;
		} else {
			return minClamp;
		}
	}
	,bitmaskIndexCanBeToggledAtCost: function(index,value,cost) {
		var curChecked = (value & 1 << index) != 0;
		var b = this._remainingCached >= cost;
		if(!curChecked) {
			return b;
		} else {
			return true;
		}
	}
	,updateRemainingCache: function(totalRemaining) {
		this._remainingCached = totalRemaining;
	}
	,get_uid: function() {
		return this.boon.name;
	}
	,getCost: function(rank) {
		return this.boon.costs[(rank < 2 ? 1 : rank) - 1];
	}
	,getBaseCost: function(rank) {
		return this.boon.costs[(rank < 2 ? 1 : rank) - 1];
	}
	,getBoonOrBane: function() {
		return this.boon;
	}
	,getUIFields: function() {
		return null;
	}
	,toString: function() {
		return "[BoonAssign: " + this.boon.name + "]";
	}
	,updateAgainst: function(ref) {
	}
	,spliceAgainst: function(ref) {
		return 0;
	}
	,__class__: troshx_sos_core_BoonAssign
});
var troshx_sos_bnb_AlliesAssign = function() {
	this.__hasUIFields__ = true;
	this.majorPowerList = [];
	this.moderatePowerList = [];
	this.minorPowerList = [""];
	troshx_sos_core_BoonAssign.call(this);
};
$hxClasses["troshx.sos.bnb.AlliesAssign"] = troshx_sos_bnb_AlliesAssign;
troshx_sos_bnb_AlliesAssign.__name__ = ["troshx","sos","bnb","AlliesAssign"];
troshx_sos_bnb_AlliesAssign.__super__ = troshx_sos_core_BoonAssign;
troshx_sos_bnb_AlliesAssign.prototype = $extend(troshx_sos_core_BoonAssign.prototype,{
	getQty: function() {
		return this.minorPowerList.length + this.moderatePowerList.length + this.majorPowerList.length;
	}
	,getMaxLengthCost: function(costBase,length) {
		var b = length * costBase;
		return b;
	}
	,getCost: function(rank) {
		return this.getMaxLengthCost(1,this.minorPowerList.length) + this.getMaxLengthCost(5,this.moderatePowerList.length) + this.getMaxLengthCost(10,this.majorPowerList.length);
	}
	,cleanupUIArrays: function() {
		var length = this.minorPowerList.length;
		this.minorPowerList = this.minorPowerList.slice(0,(this._remainingCached + (length >= 1 ? length : 1)) / 1 | 0);
		this.moderatePowerList = this.moderatePowerList.slice(0,(this._remainingCached + this.moderatePowerList.length * 5) / 5 | 0);
		this.majorPowerList = this.majorPowerList.slice(0,(this._remainingCached + this.majorPowerList.length * 10) / 10 | 0);
	}
	,getUIFields: function() {
		var length = this.minorPowerList.length;
		return [{ prop : "minorPowerList", minLength : 0, maxLength : (this._remainingCached + (length >= 1 ? length : 1)) / 1 | 0, of : "String", defaultValue : "", type : "Array", label : "Minor Power List"},{ prop : "moderatePowerList", minLength : 0, maxLength : (this._remainingCached + this.moderatePowerList.length * 5) / 5 | 0, of : "String", defaultValue : "", type : "Array", label : "Moderate Power List"},{ prop : "majorPowerList", minLength : 0, maxLength : (this._remainingCached + this.majorPowerList.length * 10) / 10 | 0, of : "String", defaultValue : "", type : "Array", label : "Major Power List"},{ prop : "notes", type : "textarea", label : "Notes"}];
	}
	,__class__: troshx_sos_bnb_AlliesAssign
});
var troshx_sos_core_Bane = function(name,costs) {
	troshx_sos_core_BoonBane.call(this,name,costs);
	this.isBane = true;
};
$hxClasses["troshx.sos.core.Bane"] = troshx_sos_core_Bane;
troshx_sos_core_Bane.__name__ = ["troshx","sos","core","Bane"];
troshx_sos_core_Bane.__super__ = troshx_sos_core_BoonBane;
troshx_sos_core_Bane.prototype = $extend(troshx_sos_core_BoonBane.prototype,{
	getEmptyAssignInstance: function($char) {
		return new troshx_sos_core_BaneAssign();
	}
	,getAssign: function(rank,$char) {
		var me = this.getEmptyAssignInstance($char);
		me.bane = this;
		me.rank = rank;
		return me;
	}
	,__class__: troshx_sos_core_Bane
});
var troshx_sos_bnb_BadEyes = function() {
	troshx_sos_core_Bane.call(this,"Bad Eyes",[4,6]);
	this.channels = 1;
	this.flags = 2;
};
$hxClasses["troshx.sos.bnb.BadEyes"] = troshx_sos_bnb_BadEyes;
troshx_sos_bnb_BadEyes.__name__ = ["troshx","sos","bnb","BadEyes"];
troshx_sos_bnb_BadEyes.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_BadEyes.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_BadEyes
});
var troshx_sos_bnb_Banes = function() {
};
$hxClasses["troshx.sos.bnb.Banes"] = troshx_sos_bnb_Banes;
troshx_sos_bnb_Banes.__name__ = ["troshx","sos","bnb","Banes"];
troshx_sos_bnb_Banes.getList = function() {
	return [new troshx_sos_bnb_ArrowMagnet(),new troshx_sos_bnb_BadEars(),new troshx_sos_bnb_BadEyes(),new troshx_sos_bnb_BadReputation(),new troshx_sos_bnb_BarrenOrSterility(),new troshx_sos_bnb_Bigoted(),new troshx_sos_bnb_Blind(),new troshx_sos_bnb_Braggart(),new troshx_sos_bnb_BrainDamage(),new troshx_sos_bnb_BrokenLimb(),new troshx_sos_bnb_CompleteMonster(),new troshx_sos_bnb_Craven(),new troshx_sos_bnb_CrippledLimb(),new troshx_sos_bnb_Debt(),new troshx_sos_bnb_DirePast(),new troshx_sos_bnb_Enemies(),new troshx_sos_bnb_FacialDeformity(),new troshx_sos_bnb_Fat(),new troshx_sos_bnb_Frail(),new troshx_sos_bnb_Haemophilia(),new troshx_sos_bnb_Honorable(),new troshx_sos_bnb_Hothead(),new troshx_sos_bnb_LastingPain(),new troshx_sos_bnb_Mute(),new troshx_sos_bnb_Oath(),new troshx_sos_bnb_OldWound(),new troshx_sos_bnb_OneEyed(),new troshx_sos_bnb_Poor(),new troshx_sos_bnb_SeveredLimb(),new troshx_sos_bnb_Sheltered(),new troshx_sos_bnb_Short(),new troshx_sos_bnb_Skinny(),new troshx_sos_bnb_TechnologicallyImpaired(),new troshx_sos_bnb_UnhappilyMarried(),new troshx_sos_bnb_Virtuous(),new troshx_sos_bnb_Wanted()];
};
troshx_sos_bnb_Banes.prototype = {
	__class__: troshx_sos_bnb_Banes
};
var troshx_sos_core_BaneAssign = function() {
	troshx_sos_core_BoonBaneAssign.call(this);
};
$hxClasses["troshx.sos.core.BaneAssign"] = troshx_sos_core_BaneAssign;
troshx_sos_core_BaneAssign.__name__ = ["troshx","sos","core","BaneAssign"];
troshx_sos_core_BaneAssign.__interfaces__ = [troshx_ds_IUpdateWith];
troshx_sos_core_BaneAssign.__super__ = troshx_sos_core_BoonBaneAssign;
troshx_sos_core_BaneAssign.prototype = $extend(troshx_sos_core_BoonBaneAssign.prototype,{
	get_uid: function() {
		return this.bane.name;
	}
	,getCost: function(rank) {
		return this.bane.costs[(rank < 2 ? 1 : rank) - 1];
	}
	,getBaseCost: function(rank) {
		return this.bane.costs[(rank < 2 ? 1 : rank) - 1];
	}
	,getBoonOrBane: function() {
		return this.bane;
	}
	,getUIFields: function() {
		return null;
	}
	,toString: function() {
		return "[BaneAssign: " + this.bane.name + "]";
	}
	,updateAgainst: function(ref) {
	}
	,spliceAgainst: function(ref) {
		return 0;
	}
	,__class__: troshx_sos_core_BaneAssign
});
var troshx_sos_bnb_BaneNotesAssign = function() {
	this.__hasUIFields__ = true;
	this.notes = "";
	troshx_sos_core_BaneAssign.call(this);
};
$hxClasses["troshx.sos.bnb.BaneNotesAssign"] = troshx_sos_bnb_BaneNotesAssign;
troshx_sos_bnb_BaneNotesAssign.__name__ = ["troshx","sos","bnb","BaneNotesAssign"];
troshx_sos_bnb_BaneNotesAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_BaneNotesAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	getUIFields: function() {
		return [{ prop : "notes", type : "textarea", label : "Notes"}];
	}
	,__class__: troshx_sos_bnb_BaneNotesAssign
});
var troshx_sos_bnb_ArrowMagnet = function() {
	troshx_sos_core_Bane.call(this,"Arrow Magnet",[3]);
};
$hxClasses["troshx.sos.bnb.ArrowMagnet"] = troshx_sos_bnb_ArrowMagnet;
troshx_sos_bnb_ArrowMagnet.__name__ = ["troshx","sos","bnb","ArrowMagnet"];
troshx_sos_bnb_ArrowMagnet.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_ArrowMagnet.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_ArrowMagnet
});
var troshx_sos_bnb_BadEars = function() {
	troshx_sos_core_Bane.call(this,"Bad Ears",[2,4]);
	this.channels = 2;
	this.flags = 2;
};
$hxClasses["troshx.sos.bnb.BadEars"] = troshx_sos_bnb_BadEars;
troshx_sos_bnb_BadEars.__name__ = ["troshx","sos","bnb","BadEars"];
troshx_sos_bnb_BadEars.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_BadEars.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_BadEars
});
var troshx_sos_bnb_BadReputation = function() {
	troshx_sos_core_Bane.call(this,"Bad Reputation",[3,6,9]);
};
$hxClasses["troshx.sos.bnb.BadReputation"] = troshx_sos_bnb_BadReputation;
troshx_sos_bnb_BadReputation.__name__ = ["troshx","sos","bnb","BadReputation"];
troshx_sos_bnb_BadReputation.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_BadReputation.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_BadReputation
});
var troshx_sos_bnb_Bigoted = function() {
	troshx_sos_core_Bane.call(this,"Bigoted",[5]);
};
$hxClasses["troshx.sos.bnb.Bigoted"] = troshx_sos_bnb_Bigoted;
troshx_sos_bnb_Bigoted.__name__ = ["troshx","sos","bnb","Bigoted"];
troshx_sos_bnb_Bigoted.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Bigoted.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Bigoted
});
var troshx_sos_bnb_Blind = function() {
	troshx_sos_core_Bane.call(this,"Blind",[20]);
	this.flags = 2;
	this.superChannels = 65;
};
$hxClasses["troshx.sos.bnb.Blind"] = troshx_sos_bnb_Blind;
troshx_sos_bnb_Blind.__name__ = ["troshx","sos","bnb","Blind"];
troshx_sos_bnb_Blind.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Blind.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Blind
});
var troshx_sos_bnb_Braggart = function() {
	troshx_sos_core_Bane.call(this,"Braggart",[3]);
};
$hxClasses["troshx.sos.bnb.Braggart"] = troshx_sos_bnb_Braggart;
troshx_sos_bnb_Braggart.__name__ = ["troshx","sos","bnb","Braggart"];
troshx_sos_bnb_Braggart.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Braggart.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Braggart
});
var troshx_sos_bnb_CompleteMonster = function() {
	troshx_sos_core_Bane.call(this,"Complete Monster",[10]);
	this.channels = 256;
};
$hxClasses["troshx.sos.bnb.CompleteMonster"] = troshx_sos_bnb_CompleteMonster;
troshx_sos_bnb_CompleteMonster.__name__ = ["troshx","sos","bnb","CompleteMonster"];
troshx_sos_bnb_CompleteMonster.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_CompleteMonster.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_CompleteMonster
});
var troshx_sos_bnb_Craven = function() {
	troshx_sos_core_Bane.call(this,"Craven",[4,8]);
	this.channels = 128;
};
$hxClasses["troshx.sos.bnb.Craven"] = troshx_sos_bnb_Craven;
troshx_sos_bnb_Craven.__name__ = ["troshx","sos","bnb","Craven"];
troshx_sos_bnb_Craven.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Craven.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Craven
});
var troshx_sos_bnb_Enemies = function() {
	troshx_sos_core_Bane.call(this,"Enemies",[3,10,15]);
};
$hxClasses["troshx.sos.bnb.Enemies"] = troshx_sos_bnb_Enemies;
troshx_sos_bnb_Enemies.__name__ = ["troshx","sos","bnb","Enemies"];
troshx_sos_bnb_Enemies.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Enemies.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Enemies
});
var troshx_sos_bnb_FacialDeformity = function() {
	troshx_sos_core_Bane.call(this,"Facial Deformity",[2,4,8]);
	this.flags = 2;
};
$hxClasses["troshx.sos.bnb.FacialDeformity"] = troshx_sos_bnb_FacialDeformity;
troshx_sos_bnb_FacialDeformity.__name__ = ["troshx","sos","bnb","FacialDeformity"];
troshx_sos_bnb_FacialDeformity.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_FacialDeformity.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_FacialDeformity
});
var troshx_sos_bnb_Frail = function() {
	troshx_sos_core_Bane.call(this,"Frail",[8]);
	this.channels = 32;
	this.staticModifiers = [troshx_sos_core_StaticModifier.create(12,"Frail",-1)];
};
$hxClasses["troshx.sos.bnb.Frail"] = troshx_sos_bnb_Frail;
troshx_sos_bnb_Frail.__name__ = ["troshx","sos","bnb","Frail"];
troshx_sos_bnb_Frail.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Frail.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Frail
});
var troshx_sos_bnb_Haemophilia = function() {
	troshx_sos_core_Bane.call(this,"Haemophilia",[8]);
	this.flags = 2;
};
$hxClasses["troshx.sos.bnb.Haemophilia"] = troshx_sos_bnb_Haemophilia;
troshx_sos_bnb_Haemophilia.__name__ = ["troshx","sos","bnb","Haemophilia"];
troshx_sos_bnb_Haemophilia.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Haemophilia.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Haemophilia
});
var troshx_sos_bnb_Hothead = function() {
	troshx_sos_core_Bane.call(this,"Hothead",[3]);
};
$hxClasses["troshx.sos.bnb.Hothead"] = troshx_sos_bnb_Hothead;
troshx_sos_bnb_Hothead.__name__ = ["troshx","sos","bnb","Hothead"];
troshx_sos_bnb_Hothead.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Hothead.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Hothead
});
var troshx_sos_bnb_Honorable = function() {
	troshx_sos_core_Bane.call(this,"Honorable",[5]);
	this.channels = 256;
};
$hxClasses["troshx.sos.bnb.Honorable"] = troshx_sos_bnb_Honorable;
troshx_sos_bnb_Honorable.__name__ = ["troshx","sos","bnb","Honorable"];
troshx_sos_bnb_Honorable.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Honorable.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Honorable
});
var troshx_sos_bnb_Mute = function() {
	troshx_sos_core_Bane.call(this,"Mute",[5,8]);
	this.flags = 2;
};
$hxClasses["troshx.sos.bnb.Mute"] = troshx_sos_bnb_Mute;
troshx_sos_bnb_Mute.__name__ = ["troshx","sos","bnb","Mute"];
troshx_sos_bnb_Mute.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Mute.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Mute
});
var troshx_sos_bnb_OneEyed = function() {
	troshx_sos_core_Bane.call(this,"One-Eyed",[10]);
	this.flags = 2;
	this.channels = 64;
	var m = troshx_sos_core_StaticModifier.create(13,"One-Eyed",-1);
	m.next = troshx_sos_core_StaticModifier.create(15,"One-Eyed",-2);
	this.staticModifiers = [m];
};
$hxClasses["troshx.sos.bnb.OneEyed"] = troshx_sos_bnb_OneEyed;
troshx_sos_bnb_OneEyed.__name__ = ["troshx","sos","bnb","OneEyed"];
troshx_sos_bnb_OneEyed.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_OneEyed.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_OneEyed
});
var troshx_sos_bnb_Sheltered = function() {
	troshx_sos_core_Bane.call(this,"Sheltered",[2,4,6]);
	this.flags = 1;
	this.channels = 16;
	this.staticModifiers = [troshx_sos_core_StaticModifier.create(20,"Sheltered (i)",-1),troshx_sos_core_StaticModifier.create(20,"Sheltered (ii)",-2),troshx_sos_core_StaticModifier.create(20,"Sheltered (iii)",-3)];
};
$hxClasses["troshx.sos.bnb.Sheltered"] = troshx_sos_bnb_Sheltered;
troshx_sos_bnb_Sheltered.__name__ = ["troshx","sos","bnb","Sheltered"];
troshx_sos_bnb_Sheltered.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Sheltered.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Sheltered
});
var troshx_sos_bnb_Short = function() {
	troshx_sos_core_Bane.call(this,"Short",[8,15]);
	this.channels = 512;
	var m = troshx_sos_core_StaticModifier.create(14,"Short (i)",-1);
	m.next = troshx_sos_core_StaticModifier.create(9,"Short (i)",-1);
	var m2 = troshx_sos_core_StaticModifier.create(14,"Short (ii)",-2);
	m2.next = troshx_sos_core_StaticModifier.create(9,"Short (ii)",-2);
	this.staticModifiers = [m,m2];
};
$hxClasses["troshx.sos.bnb.Short"] = troshx_sos_bnb_Short;
troshx_sos_bnb_Short.__name__ = ["troshx","sos","bnb","Short"];
troshx_sos_bnb_Short.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Short.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Short
});
var troshx_sos_bnb_TechnologicallyImpaired = function() {
	troshx_sos_core_Bane.call(this,"Technologically Impaired",[5]);
};
$hxClasses["troshx.sos.bnb.TechnologicallyImpaired"] = troshx_sos_bnb_TechnologicallyImpaired;
troshx_sos_bnb_TechnologicallyImpaired.__name__ = ["troshx","sos","bnb","TechnologicallyImpaired"];
troshx_sos_bnb_TechnologicallyImpaired.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_TechnologicallyImpaired.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_TechnologicallyImpaired
});
var troshx_sos_bnb_UnhappilyMarried = function() {
	troshx_sos_core_Bane.call(this,"Unhappily Married",[1,2,3]);
};
$hxClasses["troshx.sos.bnb.UnhappilyMarried"] = troshx_sos_bnb_UnhappilyMarried;
troshx_sos_bnb_UnhappilyMarried.__name__ = ["troshx","sos","bnb","UnhappilyMarried"];
troshx_sos_bnb_UnhappilyMarried.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_UnhappilyMarried.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_UnhappilyMarried
});
var troshx_sos_bnb_Virtuous = function() {
	troshx_sos_core_Bane.call(this,"Virtuous",[5]);
};
$hxClasses["troshx.sos.bnb.Virtuous"] = troshx_sos_bnb_Virtuous;
troshx_sos_bnb_Virtuous.__name__ = ["troshx","sos","bnb","Virtuous"];
troshx_sos_bnb_Virtuous.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Virtuous.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Virtuous
});
var troshx_sos_bnb_Wanted = function() {
	troshx_sos_core_Bane.call(this,"Wanted",[5,10,15]);
};
$hxClasses["troshx.sos.bnb.Wanted"] = troshx_sos_bnb_Wanted;
troshx_sos_bnb_Wanted.__name__ = ["troshx","sos","bnb","Wanted"];
troshx_sos_bnb_Wanted.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Wanted.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Wanted
});
var troshx_sos_bnb_BarrenOrSterility = function() {
	troshx_sos_core_Bane.call(this,"Barren/Sterility",[1,3]);
	this.flags = 2;
	this.conditions = [null,new troshx_sos_bnb_EunuchCondition()];
};
$hxClasses["troshx.sos.bnb.BarrenOrSterility"] = troshx_sos_bnb_BarrenOrSterility;
troshx_sos_bnb_BarrenOrSterility.__name__ = ["troshx","sos","bnb","BarrenOrSterility"];
troshx_sos_bnb_BarrenOrSterility.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_BarrenOrSterility.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_BarrenOrSterility
});
var troshx_sos_core_BoonBaneCondition = function() {
};
$hxClasses["troshx.sos.core.BoonBaneCondition"] = troshx_sos_core_BoonBaneCondition;
troshx_sos_core_BoonBaneCondition.__name__ = ["troshx","sos","core","BoonBaneCondition"];
troshx_sos_core_BoonBaneCondition.prototype = {
	valid: function($char) {
		return true;
	}
	,__class__: troshx_sos_core_BoonBaneCondition
};
var troshx_sos_bnb_EunuchCondition = function() {
	troshx_sos_core_BoonBaneCondition.call(this);
};
$hxClasses["troshx.sos.bnb.EunuchCondition"] = troshx_sos_bnb_EunuchCondition;
troshx_sos_bnb_EunuchCondition.__name__ = ["troshx","sos","bnb","EunuchCondition"];
troshx_sos_bnb_EunuchCondition.__super__ = troshx_sos_core_BoonBaneCondition;
troshx_sos_bnb_EunuchCondition.prototype = $extend(troshx_sos_core_BoonBaneCondition.prototype,{
	valid: function($char) {
		return $char.gender == 0;
	}
	,__class__: troshx_sos_bnb_EunuchCondition
});
var troshx_sos_bnb_Boons = function() {
};
$hxClasses["troshx.sos.bnb.Boons"] = troshx_sos_bnb_Boons;
troshx_sos_bnb_Boons.__name__ = ["troshx","sos","bnb","Boons"];
troshx_sos_bnb_Boons.getList = function() {
	return [new troshx_sos_bnb_Allies(),new troshx_sos_bnb_Ambidextrous(),new troshx_sos_bnb_AnimalAffinity(),new troshx_sos_bnb_Beautiful(),new troshx_sos_bnb_Berserker(),new troshx_sos_bnb_Bloodthirsty(),new troshx_sos_bnb_Brave(),new troshx_sos_bnb_Contacts(),new troshx_sos_bnb_DirectionSense(),new troshx_sos_bnb_Estate(),new troshx_sos_bnb_Famous(),new troshx_sos_bnb_Favor(),new troshx_sos_bnb_FolksBackHome(),new troshx_sos_bnb_Follower(),new troshx_sos_bnb_GoodEars(),new troshx_sos_bnb_GoodEyes(),new troshx_sos_bnb_GoodNose(),new troshx_sos_bnb_HaleAndHearty(),new troshx_sos_bnb_ImpressiveVoice(),new troshx_sos_bnb_KnownForVirtue(),new troshx_sos_bnb_Language(),new troshx_sos_bnb_Literate(),new troshx_sos_bnb_NaturalBornKiller(),new troshx_sos_bnb_NaturalLeader(),new troshx_sos_bnb_Rich(),new troshx_sos_bnb_Robust(),new troshx_sos_bnb_Tall(),new troshx_sos_bnb_TrueGrit()];
};
troshx_sos_bnb_Boons.prototype = {
	__class__: troshx_sos_bnb_Boons
};
var troshx_sos_bnb_BoonNotesAssign = function() {
	this.notes = "";
	troshx_sos_core_BoonAssign.call(this);
};
$hxClasses["troshx.sos.bnb.BoonNotesAssign"] = troshx_sos_bnb_BoonNotesAssign;
troshx_sos_bnb_BoonNotesAssign.__name__ = ["troshx","sos","bnb","BoonNotesAssign"];
troshx_sos_bnb_BoonNotesAssign.__super__ = troshx_sos_core_BoonAssign;
troshx_sos_bnb_BoonNotesAssign.prototype = $extend(troshx_sos_core_BoonAssign.prototype,{
	getUIFields: function() {
		return [];
	}
	,__class__: troshx_sos_bnb_BoonNotesAssign
});
var troshx_sos_bnb_Ambidextrous = function() {
	troshx_sos_core_Boon.call(this,"Ambidextrous",[3]);
	this.flags = 1;
};
$hxClasses["troshx.sos.bnb.Ambidextrous"] = troshx_sos_bnb_Ambidextrous;
troshx_sos_bnb_Ambidextrous.__name__ = ["troshx","sos","bnb","Ambidextrous"];
troshx_sos_bnb_Ambidextrous.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Ambidextrous.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Ambidextrous
});
var troshx_sos_bnb_AnimalAffinity = function() {
	troshx_sos_core_Boon.call(this,"Animal Affinity",[2,4,6]);
};
$hxClasses["troshx.sos.bnb.AnimalAffinity"] = troshx_sos_bnb_AnimalAffinity;
troshx_sos_bnb_AnimalAffinity.__name__ = ["troshx","sos","bnb","AnimalAffinity"];
troshx_sos_bnb_AnimalAffinity.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_AnimalAffinity.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_AnimalAffinity
});
var troshx_sos_bnb_Beautiful = function() {
	troshx_sos_core_Boon.call(this,"Beautiful",[3,6]);
};
$hxClasses["troshx.sos.bnb.Beautiful"] = troshx_sos_bnb_Beautiful;
troshx_sos_bnb_Beautiful.__name__ = ["troshx","sos","bnb","Beautiful"];
troshx_sos_bnb_Beautiful.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Beautiful.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Beautiful
});
var troshx_sos_bnb_Berserker = function() {
	troshx_sos_core_Boon.call(this,"Berserker",[8,12]);
	var m = troshx_sos_core_StaticModifier.create(13,"Berserker",4);
	this.staticModifiers = [m,m];
};
$hxClasses["troshx.sos.bnb.Berserker"] = troshx_sos_bnb_Berserker;
troshx_sos_bnb_Berserker.__name__ = ["troshx","sos","bnb","Berserker"];
troshx_sos_bnb_Berserker.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Berserker.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Berserker
});
var troshx_sos_bnb_Bloodthirsty = function() {
	troshx_sos_core_Boon.call(this,"Bloodthirsty",[4]);
};
$hxClasses["troshx.sos.bnb.Bloodthirsty"] = troshx_sos_bnb_Bloodthirsty;
troshx_sos_bnb_Bloodthirsty.__name__ = ["troshx","sos","bnb","Bloodthirsty"];
troshx_sos_bnb_Bloodthirsty.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Bloodthirsty.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Bloodthirsty
});
var troshx_sos_bnb_Brave = function() {
	troshx_sos_core_Boon.call(this,"Brave",[3]);
};
$hxClasses["troshx.sos.bnb.Brave"] = troshx_sos_bnb_Brave;
troshx_sos_bnb_Brave.__name__ = ["troshx","sos","bnb","Brave"];
troshx_sos_bnb_Brave.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Brave.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Brave
});
var troshx_sos_bnb_Contacts = function() {
	troshx_sos_core_Boon.call(this,"Contacts",[1,4,6,8]);
};
$hxClasses["troshx.sos.bnb.Contacts"] = troshx_sos_bnb_Contacts;
troshx_sos_bnb_Contacts.__name__ = ["troshx","sos","bnb","Contacts"];
troshx_sos_bnb_Contacts.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Contacts.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Contacts
});
var troshx_sos_bnb_DirectionSense = function() {
	troshx_sos_core_Boon.call(this,"Direction Sense",[3]);
};
$hxClasses["troshx.sos.bnb.DirectionSense"] = troshx_sos_bnb_DirectionSense;
troshx_sos_bnb_DirectionSense.__name__ = ["troshx","sos","bnb","DirectionSense"];
troshx_sos_bnb_DirectionSense.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_DirectionSense.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_DirectionSense
});
var troshx_sos_bnb_Famous = function() {
	troshx_sos_core_Boon.call(this,"Famous",[2,4]);
};
$hxClasses["troshx.sos.bnb.Famous"] = troshx_sos_bnb_Famous;
troshx_sos_bnb_Famous.__name__ = ["troshx","sos","bnb","Famous"];
troshx_sos_bnb_Famous.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Famous.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Famous
});
var troshx_sos_bnb_FolksBackHome = function() {
	troshx_sos_core_Boon.call(this,"Folks Back Home",[3,6,8]);
};
$hxClasses["troshx.sos.bnb.FolksBackHome"] = troshx_sos_bnb_FolksBackHome;
troshx_sos_bnb_FolksBackHome.__name__ = ["troshx","sos","bnb","FolksBackHome"];
troshx_sos_bnb_FolksBackHome.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_FolksBackHome.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_FolksBackHome
});
var troshx_sos_bnb_GoodEars = function() {
	troshx_sos_core_Boon.call(this,"Good Ears",[3]);
	this.channels = 2;
};
$hxClasses["troshx.sos.bnb.GoodEars"] = troshx_sos_bnb_GoodEars;
troshx_sos_bnb_GoodEars.__name__ = ["troshx","sos","bnb","GoodEars"];
troshx_sos_bnb_GoodEars.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_GoodEars.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_GoodEars
});
var troshx_sos_bnb_GoodEyes = function() {
	troshx_sos_core_Boon.call(this,"Good Eyes",[3]);
	this.channels = 1;
};
$hxClasses["troshx.sos.bnb.GoodEyes"] = troshx_sos_bnb_GoodEyes;
troshx_sos_bnb_GoodEyes.__name__ = ["troshx","sos","bnb","GoodEyes"];
troshx_sos_bnb_GoodEyes.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_GoodEyes.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_GoodEyes
});
var troshx_sos_bnb_GoodNose = function() {
	troshx_sos_core_Boon.call(this,"Good Nose",[3]);
	this.channels = 4;
};
$hxClasses["troshx.sos.bnb.GoodNose"] = troshx_sos_bnb_GoodNose;
troshx_sos_bnb_GoodNose.__name__ = ["troshx","sos","bnb","GoodNose"];
troshx_sos_bnb_GoodNose.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_GoodNose.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_GoodNose
});
var troshx_sos_bnb_HaleAndHearty = function() {
	troshx_sos_core_Boon.call(this,"Hale and Hearty",[2,4]);
};
$hxClasses["troshx.sos.bnb.HaleAndHearty"] = troshx_sos_bnb_HaleAndHearty;
troshx_sos_bnb_HaleAndHearty.__name__ = ["troshx","sos","bnb","HaleAndHearty"];
troshx_sos_bnb_HaleAndHearty.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_HaleAndHearty.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_HaleAndHearty
});
var troshx_sos_bnb_KnownForVirtue = function() {
	troshx_sos_core_Boon.call(this,"Known for Virtue",[5]);
};
$hxClasses["troshx.sos.bnb.KnownForVirtue"] = troshx_sos_bnb_KnownForVirtue;
troshx_sos_bnb_KnownForVirtue.__name__ = ["troshx","sos","bnb","KnownForVirtue"];
troshx_sos_bnb_KnownForVirtue.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_KnownForVirtue.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_KnownForVirtue
});
var troshx_sos_bnb_NaturalBornKiller = function() {
	troshx_sos_core_Boon.call(this,"Natural Born Killer",[6,12,18]);
	this.staticModifiers = [troshx_sos_core_StaticModifier.create(13,"Natural Born Killer (i)",1),troshx_sos_core_StaticModifier.create(13,"Natural Born Killer (ii)",2),troshx_sos_core_StaticModifier.create(13,"Natural Born Killer (iii)",3)];
};
$hxClasses["troshx.sos.bnb.NaturalBornKiller"] = troshx_sos_bnb_NaturalBornKiller;
troshx_sos_bnb_NaturalBornKiller.__name__ = ["troshx","sos","bnb","NaturalBornKiller"];
troshx_sos_bnb_NaturalBornKiller.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_NaturalBornKiller.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_NaturalBornKiller
});
var troshx_sos_bnb_NaturalLeader = function() {
	troshx_sos_core_Boon.call(this,"Natural Leader",[3]);
};
$hxClasses["troshx.sos.bnb.NaturalLeader"] = troshx_sos_bnb_NaturalLeader;
troshx_sos_bnb_NaturalLeader.__name__ = ["troshx","sos","bnb","NaturalLeader"];
troshx_sos_bnb_NaturalLeader.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_NaturalLeader.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_NaturalLeader
});
var troshx_sos_bnb_Tall = function() {
	troshx_sos_core_Boon.call(this,"Tall",[8,12]);
	this.flags = 1;
	this.channels = 512;
	this.staticModifiers = [null,troshx_sos_core_StaticModifier.create(14,"Tall",1)];
};
$hxClasses["troshx.sos.bnb.Tall"] = troshx_sos_bnb_Tall;
troshx_sos_bnb_Tall.__name__ = ["troshx","sos","bnb","Tall"];
troshx_sos_bnb_Tall.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Tall.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Tall
});
var troshx_sos_bnb_TrueGrit = function() {
	troshx_sos_core_Boon.call(this,"True Grit",[2,4,6]);
	this.flags = 1;
	this.channels = 16;
	this.staticModifiers = [troshx_sos_core_StaticModifier.create(20,"True Grit (i)",1),troshx_sos_core_StaticModifier.create(20,"True Grit (ii)",2),troshx_sos_core_StaticModifier.create(20,"True Grit (iii)",3)];
};
$hxClasses["troshx.sos.bnb.TrueGrit"] = troshx_sos_bnb_TrueGrit;
troshx_sos_bnb_TrueGrit.__name__ = ["troshx","sos","bnb","TrueGrit"];
troshx_sos_bnb_TrueGrit.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_TrueGrit.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_TrueGrit
});
var troshx_sos_bnb_Rich = function() {
	troshx_sos_core_Boon.call(this,"Rich",[1,3,5]);
	this.channels = 8;
	this.flags = 1;
	this.staticModifiers = [troshx_sos_core_StaticModifier.create(19,"Rich (i)",0,1.1),troshx_sos_core_StaticModifier.create(19,"Rich (ii)",0,1.5),troshx_sos_core_StaticModifier.create(19,"Rich (iii)",0,2)];
};
$hxClasses["troshx.sos.bnb.Rich"] = troshx_sos_bnb_Rich;
troshx_sos_bnb_Rich.__name__ = ["troshx","sos","bnb","Rich"];
troshx_sos_bnb_Rich.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Rich.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Rich
});
var troshx_sos_bnb_Robust = function() {
	troshx_sos_core_Boon.call(this,"Robust",[8]);
	this.channels = 32;
	this.staticModifiers = [troshx_sos_core_StaticModifier.create(12,"Robust",1)];
};
$hxClasses["troshx.sos.bnb.Robust"] = troshx_sos_bnb_Robust;
troshx_sos_bnb_Robust.__name__ = ["troshx","sos","bnb","Robust"];
troshx_sos_bnb_Robust.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Robust.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Robust
});
var troshx_sos_bnb_BrainDamage = function() {
	troshx_sos_core_Bane.call(this,"Brain Damage",[4,8]);
	this.flags = 2;
	this.multipleTimes = -2;
	this.clampRank = true;
};
$hxClasses["troshx.sos.bnb.BrainDamage"] = troshx_sos_bnb_BrainDamage;
troshx_sos_bnb_BrainDamage.__name__ = ["troshx","sos","bnb","BrainDamage"];
troshx_sos_bnb_BrainDamage.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_BrainDamage.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_BrainDamageAssign(charSheet);
	}
	,__class__: troshx_sos_bnb_BrainDamage
});
var troshx_sos_bnb_BrainDamageAssign = function($char) {
	this.__hasUIFields__ = true;
	this.intModifier = troshx_sos_core_StaticModifier.create(6,"Brain Damage",0);
	this.count2 = 0;
	this.count1 = 0;
	troshx_sos_core_BaneAssign.call(this);
	this["char"] = $char;
	this.oldWound = new troshx_sos_bnb_OldWound().getAssign(0,$char);
	this.mute = new troshx_sos_bnb_Mute().getAssign(0,$char);
	this.lastingPain = new troshx_sos_bnb_LastingPain().getAssign(0,$char);
	this.badEyes = new troshx_sos_bnb_BadEyes().getAssign(0,$char);
	this.badEars = new troshx_sos_bnb_BadEars().getAssign(0,$char);
	this.blind = new troshx_sos_bnb_Blind().getAssign(0,$char);
	this.oneEyed = new troshx_sos_bnb_OneEyed().getAssign(0,$char);
};
$hxClasses["troshx.sos.bnb.BrainDamageAssign"] = troshx_sos_bnb_BrainDamageAssign;
troshx_sos_bnb_BrainDamageAssign.__name__ = ["troshx","sos","bnb","BrainDamageAssign"];
troshx_sos_bnb_BrainDamageAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_BrainDamageAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	callbackUITrigger: function(obj,prop) {
		this.execute(prop == "count1" ? 0 : 1);
		return this.baneQueue;
	}
	,gainBane: function(baneAssign,rank) {
		var rankSet = baneAssign.bane.clampRank ? 1 : rank;
		if(baneAssign.rank >= rankSet) {
			rankSet = baneAssign.rank;
		}
		baneAssign.rank = rankSet;
		baneAssign._minRequired = rankSet;
		baneAssign.discount = baneAssign._costCached = baneAssign.getCost(rankSet);
		this.baneQueue.push(baneAssign);
	}
	,execute: function(indexRank) {
		this._minRequired = 1;
		var add2;
		if(indexRank == 0) {
			this.count1++;
			add2 = 0;
		} else {
			this.count2++;
			add2 = 2;
		}
		if(this["char"].ingame) {
			this.intModifier.add -= (Math.random() * (indexRank == 0 ? 2 : 5) | 0) + 1;
			if(this.intModifier.add != 0 && !this["char"].hasStaticModifier(this.intModifier)) {
				var _this = this["char"];
				var modifier = this.intModifier;
				if(modifier != null) {
					var t = _this.staticModifierTable[modifier.index];
					t.push(modifier);
					var m = modifier.next;
					while(m != null) {
						t = _this.staticModifierTable[m.index];
						t.push(m);
						m = m.next;
					}
				}
			}
		}
		var _this1 = this["char"].banes;
		var id = this.oldWound.get_uid();
		var otherOldWounds = Reflect.field(_this1.hash,id);
		var _this2 = this["char"].banes;
		var id1 = this.lastingPain.get_uid();
		var otherLastingPain = Reflect.field(_this2.hash,id1);
		if(otherOldWounds == this.oldWound) {
			otherOldWounds = null;
		}
		if(otherLastingPain == this.lastingPain) {
			otherLastingPain = null;
		}
		this.baneQueue = [];
		var rIndex = (Math.random() * 10 | 0) + add2 + 1;
		switch(rIndex) {
		case 1:
			break;
		case 2:
			break;
		case 3:
			break;
		case 4:
			if(this.blind.rank == 0) {
				this.gainBane(this.badEyes,1);
			}
			break;
		case 5:
			this.gainBane(this.badEars,2);
			break;
		case 6:
			this.gainBane(this.oldWound.inflictRandom(),1);
			if(otherOldWounds != null) {
				this.oldWound.mergeWith(otherOldWounds);
			}
			this.gainBane(this.badEars,1);
			break;
		case 7:
			this.gainBane(this.oldWound.inflictRandom(),1);
			if(otherOldWounds != null) {
				this.oldWound.mergeWith(otherOldWounds);
			}
			this.gainBane(this.badEars,2);
			break;
		case 8:
			this.gainBane(this.oldWound.inflictRandom(),1);
			if(otherOldWounds != null) {
				this.oldWound.mergeWith(otherOldWounds);
			}
			if(this.blind.rank == 0) {
				this.gainBane(this.oneEyed,1);
			}
			break;
		case 9:
			this.gainBane(this.oldWound.inflictRandom(),1);
			if(otherOldWounds != null) {
				this.oldWound.mergeWith(otherOldWounds);
			}
			this.gainBane(this.mute,1);
			break;
		case 10:
			this.gainBane(this.oldWound.inflictRandom(),1);
			if(otherOldWounds != null) {
				this.oldWound.mergeWith(otherOldWounds);
			}
			this.gainBane(this.lastingPain.inflictRandomMinor(),1);
			if(otherLastingPain != null) {
				this.lastingPain.mergeWith(otherLastingPain);
			}
			break;
		case 11:
			this.gainBane(this.oldWound.inflictRandom(),1);
			if(otherOldWounds != null) {
				this.oldWound.mergeWith(otherOldWounds);
			}
			this.gainBane(this.lastingPain.inflictRandomMinor(),1);
			if(otherLastingPain != null) {
				this.lastingPain.mergeWith(otherLastingPain);
			}
			if(this["char"].ingame) {
				this["char"].intelligence -= 2;
			}
			break;
		case 12:
			this.gainBane(this.oldWound.inflictRandom(),1);
			if(otherOldWounds != null) {
				this.oldWound.mergeWith(otherOldWounds);
			}
			this.gainBane(this.lastingPain.inflictRandomMajor(),2);
			if(otherLastingPain != null) {
				this.lastingPain.mergeWith(otherLastingPain);
			}
			this.gainBane(this.blind,1);
			break;
		default:
			console.log("Warning, unforeseen roll index number detected: " + rIndex);
		}
	}
	,getCost: function(rank) {
		return this.count1 * 4 + this.count2 * 8;
	}
	,getUIFields: function() {
		return [{ prop : "count1", label : "Trigger Brain Damage (4)", type : "ButtonCounter", callback : $bind(this,this.callbackUITrigger), preventDefault : true},{ prop : "count2", label : "Trigger Brain Damage (8)", type : "ButtonCounter", callback : $bind(this,this.callbackUITrigger), preventDefault : true}];
	}
	,__class__: troshx_sos_bnb_BrainDamageAssign
});
var troshx_sos_bnb_BrokenLimb = function() {
	troshx_sos_core_Bane.call(this,"Broken Limb",troshx_sos_core_BoonBane.COSTLESS_ARRAY);
	this.flags = 2;
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.BrokenLimb"] = troshx_sos_bnb_BrokenLimb;
troshx_sos_bnb_BrokenLimb.__name__ = ["troshx","sos","bnb","BrokenLimb"];
troshx_sos_bnb_BrokenLimb.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_BrokenLimb.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		var b = new troshx_sos_bnb_BrokenLimbAssign();
		return b;
	}
	,__class__: troshx_sos_bnb_BrokenLimb
});
var troshx_sos_bnb_BrokenLimbAssign = function() {
	this.__hasUIFields__ = true;
	this.affectedLimbs = 0;
	troshx_sos_core_BaneAssign.call(this);
	var m = new troshx_sos_bnb_BrokenLimbMOBModifier(this);
	this.situationalModifiers = [m];
};
$hxClasses["troshx.sos.bnb.BrokenLimbAssign"] = troshx_sos_bnb_BrokenLimbAssign;
troshx_sos_bnb_BrokenLimbAssign.__name__ = ["troshx","sos","bnb","BrokenLimbAssign"];
troshx_sos_bnb_BrokenLimbAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_BrokenLimbAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	isValid: function() {
		return this.affectedLimbs > 0;
	}
	,getCost: function(rank) {
		return this.getQty() * troshx_sos_core_BaneAssign.prototype.getCost.call(this,rank);
	}
	,getQty: function() {
		var c = 0;
		c += (this.affectedLimbs & 1) != 0 ? 1 : 0;
		c += (this.affectedLimbs & 2) != 0 ? 1 : 0;
		c += (this.affectedLimbs & 4) != 0 ? 1 : 0;
		c += (this.affectedLimbs & 8) != 0 ? 1 : 0;
		return c;
	}
	,getUIFields: function() {
		return [{ prop : "affectedLimbs", type : "Bitmask", labels : ["Left Arm","Right Arm","Left Leg","Right Leg"], label : "Affected Limbs"}];
	}
	,__class__: troshx_sos_bnb_BrokenLimbAssign
});
var troshx_sos_core_SituationalCharModifier = function(index,name) {
	this.index = index;
	this.name = name;
};
$hxClasses["troshx.sos.core.SituationalCharModifier"] = troshx_sos_core_SituationalCharModifier;
troshx_sos_core_SituationalCharModifier.__name__ = ["troshx","sos","core","SituationalCharModifier"];
troshx_sos_core_SituationalCharModifier.prototype = {
	get_name: function() {
		return this.name;
	}
	,getModifiedValueMultiply: function($char,base,value) {
		return value;
	}
	,getModifiedValueAdd: function($char,base,value) {
		return value;
	}
	,__class__: troshx_sos_core_SituationalCharModifier
};
var troshx_sos_bnb_BrokenLimbMOBModifier = function(current) {
	troshx_sos_core_SituationalCharModifier.call(this,9,"Broken Limb");
	this.current = current;
};
$hxClasses["troshx.sos.bnb.BrokenLimbMOBModifier"] = troshx_sos_bnb_BrokenLimbMOBModifier;
troshx_sos_bnb_BrokenLimbMOBModifier.__name__ = ["troshx","sos","bnb","BrokenLimbMOBModifier"];
troshx_sos_bnb_BrokenLimbMOBModifier.__super__ = troshx_sos_core_SituationalCharModifier;
troshx_sos_bnb_BrokenLimbMOBModifier.prototype = $extend(troshx_sos_core_SituationalCharModifier.prototype,{
	getModifiedValueMultiply: function($char,base,value) {
		if((this.current.affectedLimbs & 12) != 0) {
			var equipedItems = $char.inventory.wornArmor;
			var crutchesHeld = 0;
			var affected = 0;
			var leftHanded = $char.leftHanded;
			affected |= (this.current.affectedLimbs & 4) != 0 ? $char.leftHanded ? 1 : 2 : 0;
			affected |= (this.current.affectedLimbs & 8) != 0 ? $char.leftHanded ? 2 : 1 : 0;
			var _g1 = 0;
			var _g = equipedItems.length;
			while(_g1 < _g) {
				var i = _g1++;
				var entry = equipedItems[i];
			}
			if(crutchesHeld == 0) {
				if(value < 1) {
					return value;
				} else {
					return 1;
				}
			} else {
				affected &= ~crutchesHeld;
				var mob = base;
				var multiplier = affected == 0 ? 0.25 : 0.125;
				if(mob * multiplier < value) {
					return mob * multiplier;
				} else {
					return value;
				}
			}
		}
		return value;
	}
	,__class__: troshx_sos_bnb_BrokenLimbMOBModifier
});
var troshx_sos_bnb_CrippledLimb = function() {
	troshx_sos_core_Bane.call(this,"Crippled Limb/Appendage",[8]);
	this.flags = 2;
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.CrippledLimb"] = troshx_sos_bnb_CrippledLimb;
troshx_sos_bnb_CrippledLimb.__name__ = ["troshx","sos","bnb","CrippledLimb"];
troshx_sos_bnb_CrippledLimb.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_CrippledLimb.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_CrippledLimbAssign();
	}
	,__class__: troshx_sos_bnb_CrippledLimb
});
var troshx_sos_bnb_CrippledLimbAssign = function() {
	this.__hasUIFields__ = true;
	this.affectedLimbs = 0;
	troshx_sos_core_BaneAssign.call(this);
	var m = new troshx_sos_bnb_CrippedLimbMOBModifier(this);
	this.situationalModifiers = [m];
};
$hxClasses["troshx.sos.bnb.CrippledLimbAssign"] = troshx_sos_bnb_CrippledLimbAssign;
troshx_sos_bnb_CrippledLimbAssign.__name__ = ["troshx","sos","bnb","CrippledLimbAssign"];
troshx_sos_bnb_CrippledLimbAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_CrippledLimbAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	isValid: function() {
		return this.getQty() > 0;
	}
	,getCost: function(rank) {
		return this.getQty() * troshx_sos_core_BaneAssign.prototype.getCost.call(this,rank);
	}
	,getQty: function() {
		var c = 0;
		c += (this.affectedLimbs & 1) != 0 ? 1 : 0;
		c += (this.affectedLimbs & 2) != 0 ? 1 : 0;
		c += (this.affectedLimbs & 4) != 0 ? 1 : 0;
		c += (this.affectedLimbs & 8) != 0 ? 1 : 0;
		return c;
	}
	,getUIFields: function() {
		return [{ prop : "affectedLimbs", type : "Bitmask", labels : ["Left Arm","Right Arm","Left Leg","Right Leg"], label : "Affected Limbs"}];
	}
	,__class__: troshx_sos_bnb_CrippledLimbAssign
});
var troshx_sos_bnb_CrippedLimbMOBModifier = function(current) {
	troshx_sos_core_SituationalCharModifier.call(this,9,"Crippled Limb/Appendage");
	this.current = current;
};
$hxClasses["troshx.sos.bnb.CrippedLimbMOBModifier"] = troshx_sos_bnb_CrippedLimbMOBModifier;
troshx_sos_bnb_CrippedLimbMOBModifier.__name__ = ["troshx","sos","bnb","CrippedLimbMOBModifier"];
troshx_sos_bnb_CrippedLimbMOBModifier.__super__ = troshx_sos_core_SituationalCharModifier;
troshx_sos_bnb_CrippedLimbMOBModifier.prototype = $extend(troshx_sos_core_SituationalCharModifier.prototype,{
	getModifiedValueMultiply: function($char,base,value) {
		if((this.current.affectedLimbs & 12) != 0) {
			var multipler = this.current.affectedLimbs == 12 ? .25 : .5;
			var mob = base;
			if(mob * multipler < value) {
				return mob * multipler;
			} else {
				return value;
			}
		}
		return value;
	}
	,__class__: troshx_sos_bnb_CrippedLimbMOBModifier
});
var troshx_sos_bnb_Debt = function() {
	troshx_sos_core_Bane.call(this,"Debt",[2,4,8]);
};
$hxClasses["troshx.sos.bnb.Debt"] = troshx_sos_bnb_Debt;
troshx_sos_bnb_Debt.__name__ = ["troshx","sos","bnb","Debt"];
troshx_sos_bnb_Debt.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Debt.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_DebtAssign();
	}
	,__class__: troshx_sos_bnb_Debt
});
var troshx_sos_bnb_DebtAssign = function() {
	this.__hasUIFields__ = true;
	this.currentOwed = new troshx_sos_core_Money();
	troshx_sos_core_BaneAssign.call(this);
};
$hxClasses["troshx.sos.bnb.DebtAssign"] = troshx_sos_bnb_DebtAssign;
troshx_sos_bnb_DebtAssign.__name__ = ["troshx","sos","bnb","DebtAssign"];
troshx_sos_bnb_DebtAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_DebtAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	getUIFields: function() {
		return [{ prop : "currentOwed", type : "Money", label : "Current Owed"}];
	}
	,__class__: troshx_sos_bnb_DebtAssign
});
var troshx_sos_bnb_DirePast = function() {
	troshx_sos_core_Bane.call(this,"Dire Past",[0]);
	this.flags = 3;
};
$hxClasses["troshx.sos.bnb.DirePast"] = troshx_sos_bnb_DirePast;
troshx_sos_bnb_DirePast.__name__ = ["troshx","sos","bnb","DirePast"];
troshx_sos_bnb_DirePast.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_DirePast.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_DirePastAssign(charSheet);
	}
	,__class__: troshx_sos_bnb_DirePast
});
var troshx_sos_bnb_DirePastAssign = function($char) {
	this.__hasUIFields__ = true;
	this.notes = "";
	troshx_sos_core_BaneAssign.call(this);
	this["char"] = $char;
	this.uiActivated = this["char"].direPast;
};
$hxClasses["troshx.sos.bnb.DirePastAssign"] = troshx_sos_bnb_DirePastAssign;
troshx_sos_bnb_DirePastAssign.__name__ = ["troshx","sos","bnb","DirePastAssign"];
troshx_sos_bnb_DirePastAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_DirePastAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	execute: function() {
		if(this["char"].direPast) {
			return;
		}
		this._forcePermanent = true;
		this["char"].direPast = true;
		var baneAssigns = this["char"].banes.list;
		var _g1 = 0;
		var _g = baneAssigns.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = baneAssigns[i];
			b._minRequired = b.rank;
			b.discount = b._costCached = b.getCost(b.rank);
			b.freeze();
		}
	}
	,getUIFields: function() {
		return [{ prop : "notes", type : "textarea", label : "Notes"},{ prop : "uiActivated", type : "ButtonPermaPress", label : "Trigger", descriptionDone : "Done!", description : "Warning: For GM use only. Once you trigger Dire Past, all existing banes (assigned by GM based on your given 'story') are baked permanently at their current levels and can no longer be canceled/reduced during character creation! However, you will gain 10 free points to spend on Boons.", callback : $bind(this,this.execute)}];
	}
	,__class__: troshx_sos_bnb_DirePastAssign
});
var troshx_sos_bnb_Estate = function() {
	troshx_sos_core_Boon.call(this,"Estate",[10]);
	this.flags = 1;
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.Estate"] = troshx_sos_bnb_Estate;
troshx_sos_bnb_Estate.__name__ = ["troshx","sos","bnb","Estate"];
troshx_sos_bnb_Estate.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Estate.prototype = $extend(troshx_sos_core_Boon.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_EstateAssign(charSheet);
	}
	,__class__: troshx_sos_bnb_Estate
});
var troshx_sos_bnb_EstateAssign = function($char) {
	this.__hasUIFields__ = true;
	this.notes = "";
	this.estates = [troshx_sos_bnb_EstateAssign.getEmptyWealthAssign()];
	troshx_sos_core_BoonAssign.call(this);
	this["char"] = $char;
};
$hxClasses["troshx.sos.bnb.EstateAssign"] = troshx_sos_bnb_EstateAssign;
troshx_sos_bnb_EstateAssign.__name__ = ["troshx","sos","bnb","EstateAssign"];
troshx_sos_bnb_EstateAssign.getEmptyWealthAssign = function() {
	return { name : "", liquidate : false, uid : troshx_sos_bnb_EstateAssign.COUNT++, worth : 2};
};
troshx_sos_bnb_EstateAssign.__super__ = troshx_sos_core_BoonAssign;
troshx_sos_bnb_EstateAssign.prototype = $extend(troshx_sos_core_BoonAssign.prototype,{
	getQty: function() {
		return this.estates.length;
	}
	,getCost: function(rank) {
		return this.estates.length * 10;
	}
	,cleanupUIArrays: function() {
		this.estates = this.estates.slice(0,(this._remainingCached + this.estates.length * 10) / 10 | 0);
	}
	,getUIFields: function() {
		return [{ prop : "estates", label : "Estates", defaultValue : troshx_sos_bnb_EstateAssign.getEmptyWealthAssign, fixedWorth : true, disableLiquidity : !this["char"].ingame, minLength : 1, maxLength : (this._remainingCached + this.estates.length * 10) / 10 | 0, of : "WealthAssetAssign", type : "Array"},{ prop : "notes", type : "textarea", label : "Notes"}];
	}
	,__class__: troshx_sos_bnb_EstateAssign
});
var troshx_sos_bnb_Fat = function() {
	troshx_sos_core_Bane.call(this,"Fat",[5]);
	var m;
	var _l_ = troshx_sos_core_StaticModifier.create(9,"Fat",-2);
	m = _l_;
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(17,"Fat",-2);
	this.staticModifiers = [m];
};
$hxClasses["troshx.sos.bnb.Fat"] = troshx_sos_bnb_Fat;
troshx_sos_bnb_Fat.__name__ = ["troshx","sos","bnb","Fat"];
troshx_sos_bnb_Fat.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Fat.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Fat
});
var troshx_sos_bnb_Favor = function() {
	troshx_sos_core_Boon.call(this,"Favor",[1,3]);
	this.clampRank = true;
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.Favor"] = troshx_sos_bnb_Favor;
troshx_sos_bnb_Favor.__name__ = ["troshx","sos","bnb","Favor"];
troshx_sos_bnb_Favor.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Favor.prototype = $extend(troshx_sos_core_Boon.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_FavorAssign();
	}
	,__class__: troshx_sos_bnb_Favor
});
var troshx_sos_bnb_FavorAssign = function() {
	this.__hasUIFields__ = true;
	this.notes = "";
	this.greaterFavors = [];
	this.simpleFavors = [""];
	troshx_sos_core_BoonAssign.call(this);
};
$hxClasses["troshx.sos.bnb.FavorAssign"] = troshx_sos_bnb_FavorAssign;
troshx_sos_bnb_FavorAssign.__name__ = ["troshx","sos","bnb","FavorAssign"];
troshx_sos_bnb_FavorAssign.__super__ = troshx_sos_core_BoonAssign;
troshx_sos_bnb_FavorAssign.prototype = $extend(troshx_sos_core_BoonAssign.prototype,{
	isValid: function() {
		return this.getQty() >= 1;
	}
	,getQty: function() {
		return this.simpleFavors.length + this.greaterFavors.length;
	}
	,getCost: function(rank) {
		return this.simpleFavors.length + 3 * this.greaterFavors.length;
	}
	,cleanupUIArrays: function() {
		var length = this.simpleFavors.length;
		this.simpleFavors = this.simpleFavors.slice(0,(this._remainingCached + (length >= 1 ? length : 1)) / 1 | 0);
		this.greaterFavors = this.greaterFavors.slice(0,(this._remainingCached + this.greaterFavors.length * 3) / 3 | 0);
	}
	,getUIFields: function() {
		var length = this.simpleFavors.length;
		return [{ prop : "simpleFavors", minLength : 0, maxLength : (this._remainingCached + (length >= 1 ? length : 1)) / 1 | 0, of : "String", defaultValue : "", type : "Array", label : "Simple Favors"},{ prop : "greaterFavors", minLength : 0, maxLength : (this._remainingCached + this.greaterFavors.length * 3) / 3 | 0, of : "String", defaultValue : "", type : "Array", label : "Greater Favors"},{ prop : "notes", type : "textarea", label : "Notes"}];
	}
	,__class__: troshx_sos_bnb_FavorAssign
});
var troshx_sos_bnb_Follower = function() {
	troshx_sos_core_Boon.call(this,"Follower",[5]);
};
$hxClasses["troshx.sos.bnb.Follower"] = troshx_sos_bnb_Follower;
troshx_sos_bnb_Follower.__name__ = ["troshx","sos","bnb","Follower"];
troshx_sos_bnb_Follower.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Follower.prototype = $extend(troshx_sos_core_Boon.prototype,{
	__class__: troshx_sos_bnb_Follower
});
var troshx_sos_bnb_ImpressiveVoice = function() {
	troshx_sos_core_Boon.call(this,"Impressive Voice",[2]);
	this.multipleTimes = 3;
};
$hxClasses["troshx.sos.bnb.ImpressiveVoice"] = troshx_sos_bnb_ImpressiveVoice;
troshx_sos_bnb_ImpressiveVoice.__name__ = ["troshx","sos","bnb","ImpressiveVoice"];
troshx_sos_bnb_ImpressiveVoice.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_ImpressiveVoice.prototype = $extend(troshx_sos_core_Boon.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_ImpressiveVoiceAssign();
	}
	,__class__: troshx_sos_bnb_ImpressiveVoice
});
var troshx_sos_bnb_ImpressiveVoiceAssign = function() {
	this.__hasUIFields__ = true;
	this.voiceQualities = 0;
	troshx_sos_core_BoonAssign.call(this);
};
$hxClasses["troshx.sos.bnb.ImpressiveVoiceAssign"] = troshx_sos_bnb_ImpressiveVoiceAssign;
troshx_sos_bnb_ImpressiveVoiceAssign.__name__ = ["troshx","sos","bnb","ImpressiveVoiceAssign"];
troshx_sos_bnb_ImpressiveVoiceAssign.__super__ = troshx_sos_core_BoonAssign;
troshx_sos_bnb_ImpressiveVoiceAssign.prototype = $extend(troshx_sos_core_BoonAssign.prototype,{
	isValid: function() {
		return (this.voiceQualities & 7) != 0;
	}
	,canBeToggled: function(index) {
		var curChecked = (this.voiceQualities & 1 << index) != 0;
		var b = this._remainingCached >= 2;
		if(!curChecked) {
			return b;
		} else {
			return true;
		}
	}
	,getQty: function() {
		var c = 0;
		c += (this.voiceQualities & 1) != 0 ? 1 : 0;
		c += (this.voiceQualities & 2) != 0 ? 1 : 0;
		c += (this.voiceQualities & 4) != 0 ? 1 : 0;
		return c;
	}
	,getCost: function(rank) {
		return this.getQty() * 2;
	}
	,getUIFields: function() {
		return [{ prop : "voiceQualities", type : "Bitmask", labels : ["Powerful","Grating","Soothing"], validateOptionFunc : $bind(this,this.canBeToggled), label : "Voice Qualities"}];
	}
	,__class__: troshx_sos_bnb_ImpressiveVoiceAssign
});
var troshx_sos_bnb_Language = function() {
	troshx_sos_core_Boon.call(this,"Language",[1,2,3]);
	this.customCostInnerSlashes = "|/";
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.Language"] = troshx_sos_bnb_Language;
troshx_sos_bnb_Language.__name__ = ["troshx","sos","bnb","Language"];
troshx_sos_bnb_Language.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Language.prototype = $extend(troshx_sos_core_Boon.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_LanguageAssign(charSheet);
	}
	,__class__: troshx_sos_bnb_Language
});
var troshx_sos_bnb_LanguageAssign = function($char) {
	this.__hasUIFields__ = true;
	this.notes = "";
	this.ingameLanguages = [];
	this.polyglotLanguages = [];
	this.secondLanguage = [];
	this.startingLanguages = [""];
	troshx_sos_core_BoonAssign.call(this);
	this["char"] = $char;
};
$hxClasses["troshx.sos.bnb.LanguageAssign"] = troshx_sos_bnb_LanguageAssign;
troshx_sos_bnb_LanguageAssign.__name__ = ["troshx","sos","bnb","LanguageAssign"];
troshx_sos_bnb_LanguageAssign.__super__ = troshx_sos_core_BoonAssign;
troshx_sos_bnb_LanguageAssign.prototype = $extend(troshx_sos_core_BoonAssign.prototype,{
	getQty: function() {
		return this.startingLanguages.length + this.secondLanguage.length + this.polyglotLanguages.length + this.ingameLanguages.length;
	}
	,getRankCost: function(rank) {
		if(rank > 1) {
			if(rank == 3) {
				return 3;
			} else {
				return 2;
			}
		} else {
			return 1;
		}
	}
	,getCost: function(rank) {
		return (this.startingLanguages.length > 1 ? this.startingLanguages.length - 1 : 0) + (rank > 1 ? rank == 3 ? 3 : 2 : 1);
	}
	,cleanupUIArrays: function() {
		this.startingLanguages = this.startingLanguages.slice(0,(this._remainingCached + this.startingLanguages.length) / 1 | 0);
		this.secondLanguage = this.secondLanguage.slice(0,this.rank == 2 ? 1 : 0);
		this.polyglotLanguages = this.polyglotLanguages.slice(0,this.rank >= 3 ? this["char"].get_INT() + 2 : 0);
		this.ingameLanguages = this.ingameLanguages.slice(0,this["char"].ingame ? null : 0);
	}
	,getUIFields: function() {
		var tmp = { prop : "startingLanguages", minLength : this.rank >= 2 ? 0 : 1, label : "Starting Languages #1", maxLength : (this._remainingCached + this.startingLanguages.length) / 1 | 0, of : "String", defaultValue : "", type : "Array"};
		var tmp1 = this.rank == 2 ? 1 : 0;
		var tmp2 = this.rank >= 3 ? this["char"].get_INT() + 2 : 0;
		return [tmp,{ prop : "secondLanguage", label : "2nd Starting Language #2", maxLength : tmp1, of : "String", defaultValue : "", type : "Array"},{ prop : "polyglotLanguages", label : "Starting Polyglot Languages #3", maxLength : tmp2, of : "String", defaultValue : "", type : "Array"},{ prop : "ingameLanguages", maxLength : this["char"].ingame ? null : 0, of : "String", defaultValue : "", type : "Array", label : "Ingame Languages"},{ prop : "notes", type : "textarea", label : "Notes"}];
	}
	,__class__: troshx_sos_bnb_LanguageAssign
});
var troshx_sos_bnb_LastingPain = function() {
	troshx_sos_core_Bane.call(this,"Lasting Pain",[4,8]);
	this.flags = 2;
	this.multipleTimes = -2;
	this.clampRank = true;
};
$hxClasses["troshx.sos.bnb.LastingPain"] = troshx_sos_bnb_LastingPain;
troshx_sos_bnb_LastingPain.__name__ = ["troshx","sos","bnb","LastingPain"];
troshx_sos_bnb_LastingPain.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_LastingPain.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_LastingPainAssign(charSheet);
	}
	,__class__: troshx_sos_bnb_LastingPain
});
var troshx_sos_bnb_LastingPainAssign = function($char) {
	this.__hasUIFields__ = true;
	this.permaMask2 = 0;
	this.permaMask = 0;
	this.hitLocationsMajor = 0;
	this.hitLocationsMinor = 0;
	troshx_sos_core_BaneAssign.call(this);
	this["char"] = $char;
};
$hxClasses["troshx.sos.bnb.LastingPainAssign"] = troshx_sos_bnb_LastingPainAssign;
troshx_sos_bnb_LastingPainAssign.__name__ = ["troshx","sos","bnb","LastingPainAssign"];
troshx_sos_bnb_LastingPainAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_LastingPainAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	isValidUILocation: function(i) {
		return (1 << i & this.permaMask) == 0;
	}
	,isValidUILocation2: function(i) {
		return (1 << i & this.permaMask2) == 0;
	}
	,getCost: function(rank) {
		return this.minorCount() * 4 + this.majorCount() * 8;
	}
	,mergeWith: function(other) {
		this.hitLocationsMajor |= other.hitLocationsMajor;
		this.hitLocationsMinor |= other.hitLocationsMinor;
		var msk = this.permaMask;
		var i = this["char"].body.hitLocations.length;
		var qty = 0;
		while(--i > -1) if((1 << i & msk) != 0) {
			++qty;
		}
		var tmp = qty * 4;
		var msk1 = this.permaMask2;
		var i1 = this["char"].body.hitLocations.length;
		var qty1 = 0;
		while(--i1 > -1) if((1 << i1 & msk1) != 0) {
			++qty1;
		}
		this.discount = tmp + qty1 * 8;
	}
	,freeze: function() {
		this.permaMask |= this.hitLocationsMinor;
		this.permaMask2 |= this.hitLocationsMajor;
	}
	,unfreezeAll: function() {
		this.permaMask = 0;
		this.permaMask2 = 0;
	}
	,inflictRandomMinor: function() {
		var i = this["char"].body.hitLocations.length;
		var selectArr = [];
		while(--i > -1) if((1 << i & this.hitLocationsMinor) == 0) {
			selectArr.push(1 << i);
		}
		if(selectArr.length > 0) {
			i = selectArr[Math.random() * selectArr.length | 0];
			this.hitLocationsMinor |= i;
			this.permaMask |= i;
		}
		return this;
	}
	,inflictRandomMajor: function() {
		var i = this["char"].body.hitLocations.length;
		var selectArr = [];
		while(--i > -1) if((1 << i & this.hitLocationsMajor) == 0) {
			selectArr.push(1 << i);
		}
		if(selectArr.length > 0) {
			i = selectArr[Math.random() * selectArr.length | 0];
			this.hitLocationsMajor |= i;
			this.permaMask2 |= i;
		}
		return this;
	}
	,minorCount: function() {
		var msk = this.hitLocationsMinor;
		var i = this["char"].body.hitLocations.length;
		var qty = 0;
		while(--i > -1) if((1 << i & msk) != 0) {
			++qty;
		}
		return qty;
	}
	,majorCount: function() {
		var msk = this.hitLocationsMajor;
		var i = this["char"].body.hitLocations.length;
		var qty = 0;
		while(--i > -1) if((1 << i & msk) != 0) {
			++qty;
		}
		return qty;
	}
	,countMask: function(msk) {
		var i = this["char"].body.hitLocations.length;
		var qty = 0;
		while(--i > -1) if((1 << i & msk) != 0) {
			++qty;
		}
		return qty;
	}
	,getQty: function() {
		return this.minorCount() + this.majorCount();
	}
	,isValid: function() {
		if(this.hitLocationsMajor == 0) {
			return this.hitLocationsMinor != 0;
		} else {
			return true;
		}
	}
	,getUIFields: function() {
		return [{ prop : "hitLocationsMinor", type : "HitLocationMultiSelector", body : this["char"].body, validateOptionFunc : $bind(this,this.isValidUILocation), label : "Hit Locations Minor"},{ prop : "hitLocationsMajor", type : "HitLocationMultiSelector", body : this["char"].body, validateOptionFunc : $bind(this,this.isValidUILocation2), label : "Hit Locations Major"}];
	}
	,__class__: troshx_sos_bnb_LastingPainAssign
});
var troshx_sos_bnb_Literate = function() {
	troshx_sos_core_Boon.call(this,"Literate",[1]);
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.Literate"] = troshx_sos_bnb_Literate;
troshx_sos_bnb_Literate.__name__ = ["troshx","sos","bnb","Literate"];
troshx_sos_bnb_Literate.__super__ = troshx_sos_core_Boon;
troshx_sos_bnb_Literate.prototype = $extend(troshx_sos_core_Boon.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_LiterateAssign();
	}
	,__class__: troshx_sos_bnb_Literate
});
var troshx_sos_bnb_LiterateAssign = function() {
	this.__hasUIFields__ = true;
	this.notes = "";
	this.scripts = [""];
	troshx_sos_core_BoonAssign.call(this);
};
$hxClasses["troshx.sos.bnb.LiterateAssign"] = troshx_sos_bnb_LiterateAssign;
troshx_sos_bnb_LiterateAssign.__name__ = ["troshx","sos","bnb","LiterateAssign"];
troshx_sos_bnb_LiterateAssign.__super__ = troshx_sos_core_BoonAssign;
troshx_sos_bnb_LiterateAssign.prototype = $extend(troshx_sos_core_BoonAssign.prototype,{
	getQty: function() {
		return this.scripts.length;
	}
	,getCost: function(rank) {
		return this.boon.costs[0] * this.scripts.length;
	}
	,cleanupUIArrays: function() {
		var length = this.scripts.length;
		this.scripts = this.scripts.slice(0,(this._remainingCached + (length >= 1 ? length : 1)) / 1 | 0);
	}
	,getUIFields: function() {
		var length = this.scripts.length;
		return [{ prop : "scripts", label : "Known scripts", minLength : 1, maxLength : (this._remainingCached + (length >= 1 ? length : 1)) / 1 | 0, of : "String", defaultValue : "", type : "Array"},{ prop : "notes", type : "textarea", label : "Notes"}];
	}
	,__class__: troshx_sos_bnb_LiterateAssign
});
var troshx_sos_bnb_Oath = function() {
	troshx_sos_core_Bane.call(this,"Oath",[2]);
};
$hxClasses["troshx.sos.bnb.Oath"] = troshx_sos_bnb_Oath;
troshx_sos_bnb_Oath.__name__ = ["troshx","sos","bnb","Oath"];
troshx_sos_bnb_Oath.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Oath.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_OathAssign();
	}
	,__class__: troshx_sos_bnb_Oath
});
var troshx_sos_bnb_OathAssign = function() {
	this.__hasUIFields__ = true;
	this.notes = "";
	this.cost = 2;
	troshx_sos_core_BaneAssign.call(this);
};
$hxClasses["troshx.sos.bnb.OathAssign"] = troshx_sos_bnb_OathAssign;
troshx_sos_bnb_OathAssign.__name__ = ["troshx","sos","bnb","OathAssign"];
troshx_sos_bnb_OathAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_OathAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	getCost: function(rank) {
		return this.cost;
	}
	,getUIFields: function() {
		return [{ prop : "cost", min : 2, max : 10, type : "Int", label : "Cost"},{ prop : "notes", type : "textarea", label : "Notes"}];
	}
	,__class__: troshx_sos_bnb_OathAssign
});
var troshx_sos_bnb_OldWound = function() {
	troshx_sos_core_Bane.call(this,"Old Wound",[1]);
	this.flags = 2;
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.OldWound"] = troshx_sos_bnb_OldWound;
troshx_sos_bnb_OldWound.__name__ = ["troshx","sos","bnb","OldWound"];
troshx_sos_bnb_OldWound.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_OldWound.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(sheet) {
		return new troshx_sos_bnb_OldWoundAssign(sheet);
	}
	,__class__: troshx_sos_bnb_OldWound
});
var troshx_sos_bnb_OldWoundAssign = function($char) {
	this.__hasUIFields__ = true;
	this.permaMask = 0;
	this.hitLocations = 0;
	troshx_sos_core_BaneAssign.call(this);
	this["char"] = $char;
};
$hxClasses["troshx.sos.bnb.OldWoundAssign"] = troshx_sos_bnb_OldWoundAssign;
troshx_sos_bnb_OldWoundAssign.__name__ = ["troshx","sos","bnb","OldWoundAssign"];
troshx_sos_bnb_OldWoundAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_OldWoundAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	getCost: function(rank) {
		return troshx_sos_core_BaneAssign.prototype.getCost.call(this,rank) * this.getQty();
	}
	,isValidUILocation: function(i) {
		return (1 << i & this.permaMask) == 0;
	}
	,freeze: function() {
		this.permaMask |= this.hitLocations;
	}
	,unfreezeAll: function() {
		this.permaMask = 0;
	}
	,inflictRandom: function() {
		var i = this["char"].body.hitLocations.length;
		var selectArr = [];
		while(--i > -1) if((1 << i & this.hitLocations) == 0) {
			selectArr.push(1 << i);
		}
		if(selectArr.length > 0) {
			i = selectArr[Math.random() * selectArr.length | 0];
			this.hitLocations |= i;
			this.permaMask |= i;
		}
		return this;
	}
	,mergeWith: function(other) {
		this.hitLocations |= other.hitLocations;
		var tmp = troshx_sos_core_BaneAssign.prototype.getCost.call(this,this.rank);
		var msk = this.permaMask;
		var i = this["char"].body.hitLocations.length;
		var qty = 0;
		while(--i > -1) if((1 << i & msk) != 0) {
			++qty;
		}
		this.discount = tmp * qty;
	}
	,getQty: function() {
		var msk = this.hitLocations;
		var i = this["char"].body.hitLocations.length;
		var qty = 0;
		while(--i > -1) if((1 << i & msk) != 0) {
			++qty;
		}
		return qty;
	}
	,countMask: function(msk) {
		var i = this["char"].body.hitLocations.length;
		var qty = 0;
		while(--i > -1) if((1 << i & msk) != 0) {
			++qty;
		}
		return qty;
	}
	,isValid: function() {
		return this.hitLocations != 0;
	}
	,getUIFields: function() {
		return [{ prop : "hitLocations", type : "HitLocationMultiSelector", body : this["char"].body, validateOptionFunc : $bind(this,this.isValidUILocation), label : "Hit Locations"}];
	}
	,__class__: troshx_sos_bnb_OldWoundAssign
});
var troshx_sos_bnb_Poor = function() {
	troshx_sos_core_Bane.call(this,"Poor",[4,6,8]);
	this.flags = 1;
	this.channels = 8;
	var h = troshx_sos_core_StaticModifier.create(18,"Poor (i)",0,.5);
	h.next = troshx_sos_core_StaticModifier.create(19,"Poor (i)",0,.5);
	var h2 = troshx_sos_core_StaticModifier.create(18,"Poor (ii)",0,.25);
	h2.next = troshx_sos_core_StaticModifier.create(19,"Poor (ii)",0,.25);
	this.staticModifiers = [h,h2,troshx_sos_core_StaticModifier.create(19,"Poor (iii)",0,0)];
};
$hxClasses["troshx.sos.bnb.Poor"] = troshx_sos_bnb_Poor;
troshx_sos_bnb_Poor.__name__ = ["troshx","sos","bnb","Poor"];
troshx_sos_bnb_Poor.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Poor.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		return new troshx_sos_bnb_PoorAssign(charSheet);
	}
	,__class__: troshx_sos_bnb_Poor
});
var troshx_sos_bnb_PoorAssign = function($char) {
	troshx_sos_core_BaneAssign.call(this);
	this["char"] = $char;
};
$hxClasses["troshx.sos.bnb.PoorAssign"] = troshx_sos_bnb_PoorAssign;
troshx_sos_bnb_PoorAssign.__name__ = ["troshx","sos","bnb","PoorAssign"];
troshx_sos_bnb_PoorAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_PoorAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	getCost: function(rank) {
		var wealthIndexNumRequired = this.rank == 3 ? 4 : this.rank == 2 ? 3 : 2;
		var wealthIndexNum = this["char"].socialClass.wealthIndex + 1;
		var result = (wealthIndexNum < wealthIndexNumRequired ? wealthIndexNum / wealthIndexNumRequired : 1) * (rank > 0 ? this.bane.costs[rank - 1] : 0);
		return Math.floor(result);
	}
	,getUIFields: function() {
		return [];
	}
	,__class__: troshx_sos_bnb_PoorAssign
});
var troshx_sos_bnb_SeveredLimb = function() {
	troshx_sos_core_Bane.call(this,"Severed Limb/Appendage",[10,15,18]);
	this.clampRank = true;
	this.flags = 2;
	this.multipleTimes = -2;
};
$hxClasses["troshx.sos.bnb.SeveredLimb"] = troshx_sos_bnb_SeveredLimb;
troshx_sos_bnb_SeveredLimb.__name__ = ["troshx","sos","bnb","SeveredLimb"];
troshx_sos_bnb_SeveredLimb.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_SeveredLimb.prototype = $extend(troshx_sos_core_Bane.prototype,{
	getEmptyAssignInstance: function(charSheet) {
		var b = new troshx_sos_bnb_SeveredLimbAssign();
		return b;
	}
	,__class__: troshx_sos_bnb_SeveredLimb
});
var troshx_sos_bnb_SeveredLimbAssign = function() {
	this.__hasUIFields__ = true;
	this.severedLegRight = 0;
	this.severedLegLeft = 0;
	this.severedArmRight = 0;
	this.severedArmLeft = 0;
	troshx_sos_core_BaneAssign.call(this);
};
$hxClasses["troshx.sos.bnb.SeveredLimbAssign"] = troshx_sos_bnb_SeveredLimbAssign;
troshx_sos_bnb_SeveredLimbAssign.__name__ = ["troshx","sos","bnb","SeveredLimbAssign"];
troshx_sos_bnb_SeveredLimbAssign.__super__ = troshx_sos_core_BaneAssign;
troshx_sos_bnb_SeveredLimbAssign.prototype = $extend(troshx_sos_core_BaneAssign.prototype,{
	get_severedAreasLeft: function() {
		return this.severedArmLeft | this.severedLegLeft;
	}
	,get_severedAreasRight: function() {
		return this.severedArmRight | this.severedLegRight;
	}
	,isValid: function() {
		var a = (this.get_severedAreasLeft() & 261136) != 0;
		var b = (this.get_severedAreasRight() & 261136) != 0;
		if(!a) {
			return b;
		} else {
			return true;
		}
	}
	,getCost: function(rank) {
		var c = 0;
		c += this.severedArmLeft == 245776 ? 18 : this.severedArmLeft == 196608 ? 15 : this.severedArmLeft != 0 ? 10 : 0;
		c += this.severedArmRight == 245776 ? 18 : this.severedArmRight == 196608 ? 15 : this.severedArmRight != 0 ? 10 : 0;
		c += this.severedLegLeft == 15360 ? 18 : this.severedLegLeft == 12288 ? 15 : this.severedLegLeft != 0 ? 10 : 0;
		c += this.severedLegRight == 15360 ? 18 : this.severedLegRight == 12288 ? 15 : this.severedLegRight != 0 ? 10 : 0;
		return c;
	}
	,getUIFields: function() {
		return [{ prop : "severedArmLeft", type : "SingleSelection", label : "Left Side Upper Limb", labels : ["None","Left Hand","Left Lower Arm","Left Full Arm"], values : [0,131072,196608,245776]},{ prop : "severedArmRight", type : "SingleSelection", label : "Right Side Upper Limb", labels : ["None","Right Hand","Right Lower Arm","Right Full Arm"], values : [0,131072,196608,245776]},{ prop : "severedLegLeft", type : "SingleSelection", label : "Left Side Lower Limb", labels : ["None","Left Foot","Left Lower Leg","Left Full Leg"], values : [0,8192,12288,15360]},{ prop : "severedLegRight", type : "SingleSelection", label : "Right Side Lower Limb", labels : ["None","Right Foot","Right Lower Leg","Right Full Leg"], values : [0,8192,12288,15360]}];
	}
	,__class__: troshx_sos_bnb_SeveredLimbAssign
});
var troshx_sos_bnb_Skinny = function() {
	troshx_sos_core_Bane.call(this,"Skinny",[3]);
	var m;
	var _l_ = troshx_sos_core_StaticModifier.create(16,"Skinny",-1);
	m = _l_;
	this.staticModifiers = [m];
};
$hxClasses["troshx.sos.bnb.Skinny"] = troshx_sos_bnb_Skinny;
troshx_sos_bnb_Skinny.__name__ = ["troshx","sos","bnb","Skinny"];
troshx_sos_bnb_Skinny.__super__ = troshx_sos_core_Bane;
troshx_sos_bnb_Skinny.prototype = $extend(troshx_sos_core_Bane.prototype,{
	__class__: troshx_sos_bnb_Skinny
});
var troshx_sos_chargen_CampaignPowerLevel = function(name,pcp,maxCategoryPCP,desc) {
	if(desc == null) {
		desc = "";
	}
	this.name = name;
	this.pcp = pcp;
	this.maxCategoryPCP = maxCategoryPCP;
	this.desc = desc;
};
$hxClasses["troshx.sos.chargen.CampaignPowerLevel"] = troshx_sos_chargen_CampaignPowerLevel;
troshx_sos_chargen_CampaignPowerLevel.__name__ = ["troshx","sos","chargen","CampaignPowerLevel"];
troshx_sos_chargen_CampaignPowerLevel.prototype = {
	__class__: troshx_sos_chargen_CampaignPowerLevel
};
var troshx_sos_chargen_CategoryPCP = function(name,magic) {
	if(magic == null) {
		magic = false;
	}
	this.pcp = 0;
	this.name = name;
	this.magic = magic;
};
$hxClasses["troshx.sos.chargen.CategoryPCP"] = troshx_sos_chargen_CategoryPCP;
troshx_sos_chargen_CategoryPCP.__name__ = ["troshx","sos","chargen","CategoryPCP"];
troshx_sos_chargen_CategoryPCP.prototype = {
	__class__: troshx_sos_chargen_CategoryPCP
};
var troshx_sos_chargen_CharGenData = function(charSheet) {
	this.profCoreListRanged = [];
	this.profCoreListMelee = [];
	this.packetChoosy = false;
	this.emptySocialBenefit = { name : "", rank : 0, cost : 0};
	this.wealthAssets = [];
	this.socialBenefitTempArr = [];
	this.syncSocialWealth = true;
	this.wealthIndex = 0;
	this.socialClassIndex = 0;
	this.warningAttributes = { warn : false, remain : 0};
	this.selectedTierIndex = 0;
	this.warningCategories = { warn : false, remain : 0};
	this.campaignPowLevelIndex = 1;
	this.campaignPowerLevels = [new troshx_sos_chargen_CampaignPowerLevel("Low (Grittiest)",14,5),new troshx_sos_chargen_CampaignPowerLevel("Medium(Default)",18,6),new troshx_sos_chargen_CampaignPowerLevel("High Fantasy",22,7),new troshx_sos_chargen_CampaignPowerLevel("Epic Fantasy",26,8),new troshx_sos_chargen_CampaignPowerLevel("Awesome Fantasy",30,10)];
	this.warningMsgs = [];
	this.savedCharContents = "";
	this.showBnBs = true;
	this.insideInventory = false;
	this["char"] = charSheet != null ? charSheet : new troshx_sos_sheets_CharSheet();
	this.raceTierTable = troshx_sos_races_Races.getTiers();
	this.pcpForTiers = troshx_sos_races_Races.PCP_FOR_TIERS.concat([]);
	if(charSheet == null) {
		this["char"].set_race(this.raceTierTable[0][0]);
	}
	this.categories = troshx_sos_chargen_CharGenData.getNewCharGenCategories();
	this.categories[2].pcp = 4;
	this.initBoons();
	this.initSkills();
	this.initSocialClasses();
	this.initSocialClassesBenefits();
	this.initSchools();
};
$hxClasses["troshx.sos.chargen.CharGenData"] = troshx_sos_chargen_CharGenData;
troshx_sos_chargen_CharGenData.__name__ = ["troshx","sos","chargen","CharGenData"];
troshx_sos_chargen_CharGenData.getTalentsAvailable = function() {
	var talentsAvailable = troshx_sos_core_School.getTalentAdds();
	var accum = talentsAvailable[0];
	var _g1 = 1;
	var _g = talentsAvailable.length;
	while(_g1 < _g) {
		var i = _g1++;
		accum += talentsAvailable[i];
		talentsAvailable[i] = accum;
	}
	return talentsAvailable;
};
troshx_sos_chargen_CharGenData.getSuperiorsAvailable = function() {
	var superiorsAvailable = troshx_sos_core_School.getSuperiorAdds();
	var accum = superiorsAvailable[0];
	var _g1 = 1;
	var _g = superiorsAvailable.length;
	while(_g1 < _g) {
		var i = _g1++;
		accum += superiorsAvailable[i];
		superiorsAvailable[i] = accum;
	}
	return superiorsAvailable;
};
troshx_sos_chargen_CharGenData.getNewCharGenCategories = function() {
	var arr = [];
	var a = new troshx_sos_chargen_CategoryPCP("Race");
	arr[0] = a;
	a.slug = "gen-race";
	a = new troshx_sos_chargen_CategoryPCP("Attributes");
	arr[1] = a;
	a.slug = "gen-attributes";
	a = new troshx_sos_chargen_CategoryPCP("Boons & Banes");
	arr[2] = a;
	a.slug = "gen-bnb";
	arr[3] = new troshx_sos_chargen_CategoryPCP("Skills");
	a.slug = "gen-skills";
	a = new troshx_sos_chargen_CategoryPCP("Social class/Wealth");
	arr[4] = a;
	a.slug = "gen-social-class";
	a = new troshx_sos_chargen_CategoryPCP("School/Profeciencies");
	arr[5] = a;
	a.slug = "gen-schoolprofs";
	return arr;
};
troshx_sos_chargen_CharGenData.GetAttributeTotalCostOfLevel = function(level) {
	if(level < 11) {
		return level - 1;
	} else {
		return 9 + (level - 10) * 2;
	}
};
troshx_sos_chargen_CharGenData.MaxAttributeLevelUpsFrom = function(level,remainingAttribPoints) {
	var upTo = level + remainingAttribPoints;
	return remainingAttribPoints - (upTo > 10 ? upTo - 10 : 0);
};
troshx_sos_chargen_CharGenData.getBnBFromPCP = function(pcp) {
	return -15 + (pcp * 5 - 5);
};
troshx_sos_chargen_CharGenData.dynSetField = function(of,field,value) {
	of[field] = value;
};
troshx_sos_chargen_CharGenData.dynSetArray = function(of,i,value) {
	of[i] = value;
};
troshx_sos_chargen_CharGenData.dynDeleteField = function(of,field) {
	Reflect.deleteField(of,field);
};
troshx_sos_chargen_CharGenData.clamp5 = function(val) {
	if(val >= 5) {
		return 5;
	} else {
		return val;
	}
};
troshx_sos_chargen_CharGenData.prototype = {
	get_shouldShowBnBs: function() {
		if(!this.showBnBs) {
			return this.get_totalBnBScore() < 0;
		} else {
			return true;
		}
	}
	,initSchools: function() {
		this.schoolLevelCosts = troshx_sos_core_School.getLevels();
		var accum = this.schoolLevelCosts[0];
		var _g1 = 1;
		var _g = this.schoolLevelCosts.length;
		while(_g1 < _g) {
			var i = _g1++;
			accum += this.schoolLevelCosts[i];
			this.schoolLevelCosts[i] = accum;
		}
		this.talentsAvailable = troshx_sos_chargen_CharGenData.getTalentsAvailable();
		this.superiorsAvailable = troshx_sos_chargen_CharGenData.getSuperiorsAvailable();
		this.schoolAssignList = [];
		var schoolList = troshx_sos_schools_Schools.getList();
		var _g11 = 0;
		var _g2 = schoolList.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var s = schoolList[i1];
			this.schoolAssignList.push({ school : s, bonuses : s.getSchoolBonuses(this["char"])});
		}
	}
	,initBoons: function() {
		var boonList = troshx_sos_bnb_Boons.getList();
		this.boonAssignList = [];
		this.baneAssignList = [];
		var bb;
		var _g1 = 0;
		var _g = boonList.length;
		while(_g1 < _g) {
			var i = _g1++;
			bb = boonList[i];
			if(bb.costs != troshx_sos_core_BoonBane.COSTLESS_ARRAY) {
				var ba;
				var tmp = this.boonAssignList;
				ba = boonList[i].getAssign(0,this["char"]);
				tmp.push(ba);
				ba._costCached = bb.costs[0];
				ba._remainingCached = 999;
			}
		}
		var baneList = troshx_sos_bnb_Banes.getList();
		var _g11 = 0;
		var _g2 = baneList.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			bb = baneList[i1];
			if(bb.costs != troshx_sos_core_BoonBane.COSTLESS_ARRAY) {
				var ba1;
				var tmp1 = this.baneAssignList;
				ba1 = baneList[i1].getAssign(0,this["char"]);
				tmp1.push(ba1);
				ba1._costCached = bb.costs[0];
			}
		}
	}
	,initSkills: function() {
		this.skillPackets = troshx_sos_chargen_CharGenSkillPackets.getNewSkillPackets();
		this.skillLabelMappingBases = troshx_sos_chargen_CharGenSkillPackets.getNewSkillLabelMappingBases();
		this.skillsTable = troshx_sos_core_SkillTable.getNewDefaultSkillTable();
		this.skillObjs = this.skillsTable.getSkillObjectsAsArray(true);
		this.specialisedSkills = this.skillsTable.getSpecialisationList();
		this.skillLabelMappings = this.getEmptyMappingsFromBase(this.skillLabelMappingBases);
		var _g1 = 0;
		var _g = this.skillPackets.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = this.skillPackets[i];
			var _g2 = 0;
			var _g3 = Reflect.fields(p.values);
			while(_g2 < _g3.length) {
				var s = _g3[_g2];
				++_g2;
				if(this.skillLabelMappings[s] != null) {
					p.history = [];
					break;
				}
			}
		}
		this.skillSubjectHash = { };
		var _g4 = 0;
		var _g11 = Reflect.fields(this.skillValues);
		while(_g4 < _g11.length) {
			var f = _g11[_g4];
			++_g4;
			var arr = troshx_sos_core_Skill.getSplitFromSpecialisation(f);
			if(arr != null) {
				var skill = arr[0];
				var special = arr[1];
				var skillToSpecial;
				var specialToSkill;
				skillToSpecial = this.skillSubjectHash[skill];
				if(skillToSpecial == null) {
					skillToSpecial = [];
					this.skillSubjectHash[skill] = skillToSpecial;
				}
				specialToSkill = this.skillSubjectHash[special];
				if(specialToSkill == null) {
					specialToSkill = [];
					this.skillSubjectHash[special] = specialToSkill;
				}
				skillToSpecial.push(special);
				specialToSkill.push(skill);
			}
		}
		this.startingSkillObjsCount = this.skillObjs.length;
	}
	,initSocialClasses: function() {
		var haleAndHearty2 = { cost : 2, name : "Hale and Hearty", rank : 1};
		var beautiful3 = { cost : 3, name : "Beautiful", rank : 1};
		var folksBackHome3 = { cost : 3, name : "Folks Back Home", rank : 1};
		var folksBackHome6 = { cost : 6, name : "Folks Back Home", rank : 2};
		var literate1 = { cost : 1, name : "Literate", rank : 1};
		var literate2 = { cost : 2, name : "Literate", rank : 1, qty : 2};
		var literate3 = { cost : 3, name : "Literate", rank : 1, qty : 3};
		var languages3 = { cost : 3, name : "Language", rank : 3};
		var languages2 = { cost : 2, name : "Language", rank : 2};
		var languages1 = { cost : 1, name : "Language", rank : 1};
		var contacts1 = { cost : 1, name : "Contacts", rank : 1};
		var contacts4 = { cost : 4, name : "Contacts", rank : 2};
		var contacts6 = { cost : 6, name : "Contacts", rank : 3};
		var allies5 = { cost : 5, name : "Allies", rank : 2};
		var allies10 = { cost : 10, name : "Allies", rank : 3};
		var famous2 = { cost : 2, name : "Famous", rank : 1};
		var famous4 = { cost : 4, name : "Famous", rank : 2};
		this.socialClassList = [{ socialClass : new troshx_sos_core_SocialClass("Slave/Exile",troshx_sos_core_Money.create(0,10,0),0), boons : [haleAndHearty2,languages2,beautiful3], maxBoons : 1},{ socialClass : new troshx_sos_core_SocialClass("Peasant",troshx_sos_core_Money.create(5,0,0),0), boons : [haleAndHearty2,folksBackHome3], maxBoons : 1},{ socialClass : new troshx_sos_core_SocialClass("Poor Freeman",troshx_sos_core_Money.create(15,0,0),0), boons : [haleAndHearty2,folksBackHome3,literate1], maxBoons : 1},{ socialClass : new troshx_sos_core_SocialClass("Freeman",troshx_sos_core_Money.create(25,0,0),1), boons : [haleAndHearty2,folksBackHome3,literate1], maxBoons : 2},{ socialClass : new troshx_sos_core_SocialClass("High Freeman",troshx_sos_core_Money.create(40,0,0),2), boons : [folksBackHome6,literate1,languages1,contacts1], maxBoons : 2},{ socialClass : new troshx_sos_core_SocialClass("Minor Noble",troshx_sos_core_Money.create(80,0,0),3), boons : [haleAndHearty2,folksBackHome6,literate1,languages1,contacts1,allies5,famous2], maxBoons : 2},{ socialClass : new troshx_sos_core_SocialClass("Landed Noble",troshx_sos_core_Money.create(150,0,0),6), boons : [haleAndHearty2,folksBackHome6,literate2,languages2,contacts4,allies5,famous2], maxBoons : 2},{ socialClass : new troshx_sos_core_SocialClass("High Noble",troshx_sos_core_Money.create(300,0,0),10), boons : [haleAndHearty2,folksBackHome6,literate2,languages2,contacts4,allies10,famous4], maxBoons : 2},{ socialClass : new troshx_sos_core_SocialClass("Royalty",troshx_sos_core_Money.create(800,0,0),15), boons : [haleAndHearty2,folksBackHome6,literate2,languages2,contacts4,allies10,famous4], maxBoons : 3},{ socialClass : new troshx_sos_core_SocialClass("High Royalty",troshx_sos_core_Money.create(1500,0,0),20), boons : [haleAndHearty2,folksBackHome6,literate3,languages3,contacts6,allies10,famous4], maxBoons : 3}];
	}
	,initSocialClassesBenefits: function() {
		var _g1 = 0;
		var _g = this.socialClassList.length;
		while(_g1 < _g) {
			var i = _g1++;
			var s = this.socialClassList[i];
			var _g3 = 0;
			var _g2 = s.boons.length;
			while(_g3 < _g2) {
				var b = _g3++;
				var sb = s.boons[b];
				if(sb.index == null) {
					sb.index = this.findBoonIndexByName(sb.name);
					sb.label = sb.name + " (" + sb.cost + ")";
					if(sb.index == -1) {
						throw new js__$Boot_HaxeError("Could not find Social boon by: " + sb.name);
					}
				}
			}
		}
		this.socialBenefit1 = this.emptySocialBenefit;
		this.socialBenefit2 = this.emptySocialBenefit;
		this.socialBenefit3 = this.emptySocialBenefit;
	}
	,findBoonIndexByName: function(boonName) {
		var _g1 = 0;
		var _g = this.boonAssignList.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.boonAssignList[i];
			if(b.boon.name == boonName) {
				return i;
			}
		}
		return -1;
	}
	,privateInit: function() {
		var _g1 = 0;
		var _g = this.skillPackets.length;
		while(_g1 < _g) {
			var i = _g1++;
			var s = this.skillPackets[i];
			s.fields = Reflect.fields(s.values);
		}
		this.validateSocialBenefitsWithClass(1);
	}
	,get_campaignPowLevel: function() {
		return this.campaignPowerLevels[this.campaignPowLevelIndex];
	}
	,get_categoryRace: function() {
		return this.categories[0];
	}
	,get_categoryAttributes: function() {
		return this.categories[1];
	}
	,get_categorySocialClassWealth: function() {
		return this.categories[4];
	}
	,get_categoriesRemainingAssignable: function() {
		var accum = 0;
		var _g1 = 0;
		var _g = this.categories.length;
		while(_g1 < _g) {
			var i = _g1++;
			accum += this.categories[i].pcp;
		}
		return this.campaignPowerLevels[this.campaignPowLevelIndex].pcp - accum;
	}
	,get_isValidCategories: function() {
		return this.get_categoriesRemainingAssignable() == 0;
	}
	,checkWarningCategories: function() {
		var rm = this.get_categoriesRemainingAssignable();
		if(rm > 0) {
			this.warningCategories.warn = true;
			this.warningCategories.remain = rm;
			return true;
		} else {
			return false;
		}
	}
	,get_isHuman: function() {
		return (this["char"].race != null ? this["char"].race.name : "") == "Human";
	}
	,get_selectedRaceName: function() {
		if(this["char"].race != null) {
			return this["char"].race.name;
		} else {
			return "";
		}
	}
	,resetToHuman: function() {
		this.selectedTierIndex = 0;
		this["char"].set_race(this.raceTierTable[0][0]);
	}
	,selectRaceAt: function(ti,ri) {
		this.selectedTierIndex = ti;
		this["char"].set_race(this.raceTierTable[ti][ri]);
	}
	,settleRaceTier: function() {
		this.categories[0].pcp = this.pcpForTiers[this.selectedTierIndex];
	}
	,get_promptSettleRaceTier: function() {
		return this.categories[0].pcp != this.pcpForTiers[this.selectedTierIndex];
	}
	,get_raceTier: function() {
		return this.getRaceTierFromPCP(this.categories[0].pcp);
	}
	,getRaceTierFromPCP: function(pcp) {
		var b = 0;
		var _g1 = 0;
		var _g = this.pcpForTiers.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.pcpForTiers[i] > pcp) {
				break;
			}
			b = i;
		}
		return b + 1;
	}
	,get_totalAttributePointsSpent: function() {
		var sum = 0;
		var level = this["char"].strength;
		sum += level < 11 ? level - 1 : 9 + (level - 10) * 2;
		var level1 = this["char"].agility;
		sum += level1 < 11 ? level1 - 1 : 9 + (level1 - 10) * 2;
		var level2 = this["char"].endurance;
		sum += level2 < 11 ? level2 - 1 : 9 + (level2 - 10) * 2;
		var level3 = this["char"].health;
		sum += level3 < 11 ? level3 - 1 : 9 + (level3 - 10) * 2;
		var level4 = this["char"].willpower;
		sum += level4 < 11 ? level4 - 1 : 9 + (level4 - 10) * 2;
		var level5 = this["char"].wit;
		sum += level5 < 11 ? level5 - 1 : 9 + (level5 - 10) * 2;
		var level6 = this["char"].intelligence;
		sum += level6 < 11 ? level6 - 1 : 9 + (level6 - 10) * 2;
		var level7 = this["char"].perception;
		sum += level7 < 11 ? level7 - 1 : 9 + (level7 - 10) * 2;
		return sum;
	}
	,get_availableAttributePoints: function() {
		return troshx_sos_chargen_CharGenData.PCP_COLUMN_ATTRIBUTES[this.categories[1].pcp - 1];
	}
	,get_remainingAttributePoints: function() {
		return this.get_availableAttributePoints() - this.get_totalAttributePointsSpent();
	}
	,canBuyMoreAttributeLevels: function() {
		var rm = this.get_remainingAttributePoints();
		var upTo = this["char"].strength + rm;
		if(rm - (upTo > 10 ? upTo - 10 : 0) > 0) {
			return true;
		}
		var upTo1 = this["char"].agility + rm;
		if(rm - (upTo1 > 10 ? upTo1 - 10 : 0) > 0) {
			return true;
		}
		var upTo2 = this["char"].endurance + rm;
		if(rm - (upTo2 > 10 ? upTo2 - 10 : 0) > 0) {
			return true;
		}
		var upTo3 = this["char"].health + rm;
		if(rm - (upTo3 > 10 ? upTo3 - 10 : 0) > 0) {
			return true;
		}
		var upTo4 = this["char"].willpower + rm;
		if(rm - (upTo4 > 10 ? upTo4 - 10 : 0) > 0) {
			return true;
		}
		var upTo5 = this["char"].wit + rm;
		if(rm - (upTo5 > 10 ? upTo5 - 10 : 0) > 0) {
			return true;
		}
		var upTo6 = this["char"].intelligence + rm;
		if(rm - (upTo6 > 10 ? upTo6 - 10 : 0) > 0) {
			return true;
		}
		var upTo7 = this["char"].perception + rm;
		if(rm - (upTo7 > 10 ? upTo7 - 10 : 0) > 0) {
			return true;
		}
		return false;
	}
	,checkWarningAttributes: function() {
		var rm = this.get_remainingAttributePoints();
		if(rm > 0 && this.canBuyMoreAttributeLevels()) {
			this.warningAttributes.warn = true;
			this.warningAttributes.remain = rm;
			return true;
		} else {
			return false;
		}
	}
	,updateSocialBenefitsToBoon: function(newValue,oldValue) {
		var b;
		if(oldValue.rank > 0) {
			b = this.boonAssignList[oldValue.index];
			if(b.rank == oldValue.rank) {
				if(b.getCost(b.rank) == oldValue.cost) {
					b.rank = 0;
				}
			}
			b._minRequired = 0;
			b.discount = 0;
		}
		if(newValue.rank > 0) {
			b = this.boonAssignList[newValue.index];
			b.discount = newValue.cost;
			if(b.rank == 0) {
				b.rank = newValue.rank;
			}
			b._minRequired = newValue.rank;
			var tmp = newValue.qty != null;
		}
	}
	,validateSocialBenefitsWithClass: function(zoneNum) {
		var socialBenefit = null;
		if(zoneNum == 1) {
			socialBenefit = this.socialBenefit1;
		} else if(zoneNum == 2) {
			socialBenefit = this.socialBenefit2;
		} else if(zoneNum == 3) {
			socialBenefit = this.socialBenefit3;
		}
		var maxBoons = this.socialClassList[this.socialClassIndex].maxBoons;
		this.socialBenefitTempArr[0] = zoneNum == 1 ? null : this.socialBenefit1.name;
		this.socialBenefitTempArr[1] = zoneNum == 2 || maxBoons < 2 ? null : this.socialBenefit2.name;
		this.socialBenefitTempArr[2] = zoneNum == 3 || maxBoons < 3 ? null : this.socialBenefit3.name;
		var choices = this.socialClassList[this.socialClassIndex].boons;
		var resolvedIndex = choices.indexOf(socialBenefit);
		var secondaryResolvedIndex = -1;
		if(resolvedIndex < 0) {
			var _g1 = 0;
			var _g = choices.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(secondaryResolvedIndex == -1) {
					if(this.socialBenefitTempArr.indexOf(choices[i].name) < 0) {
						secondaryResolvedIndex = i;
					}
				}
				if(choices[i].name == socialBenefit.name) {
					resolvedIndex = i;
					break;
				}
			}
			if(resolvedIndex < 0) {
				if(secondaryResolvedIndex >= 0) {
					resolvedIndex = secondaryResolvedIndex;
				} else {
					resolvedIndex = 0;
				}
			}
			if(zoneNum == 1) {
				this.socialBenefit1 = choices[resolvedIndex];
			} else if(zoneNum == 2) {
				this.socialBenefit2 = choices[resolvedIndex];
			} else if(zoneNum == 3) {
				this.socialBenefit3 = choices[resolvedIndex];
			}
		}
		if(resolvedIndex < 0) {
			throw new js__$Boot_HaxeError("Should have resolved index for social benefit choice!");
		}
	}
	,socialBenefitSelectChangeHandler: function(zoneNum,selectedIndex) {
		var choices = this.socialClassList[this.socialClassIndex].boons;
		if(zoneNum == 1) {
			this.socialBenefit1 = choices[selectedIndex];
		} else if(zoneNum == 2) {
			this.socialBenefit2 = choices[selectedIndex];
		} else if(zoneNum == 3) {
			this.socialBenefit3 = choices[selectedIndex];
		}
	}
	,get_availableWealthPointsBase: function() {
		return this.socialClassList[this.wealthIndex].socialClass.wealth;
	}
	,get_availableWealthPoints: function() {
		var r = Math.floor(this["char"].getModifiedValue(18,this.socialClassList[this.wealthIndex].socialClass.wealth));
		if(r < 0) {
			r = 0;
		}
		return r;
	}
	,get_remainingWealthPointsFull: function() {
		var r = Math.floor(this["char"].getModifiedValue(18,this.socialClassList[this.wealthIndex].socialClass.wealth));
		if(r < 0) {
			r = 0;
		}
		return r - this.wealthAssetsWorthFullArray();
	}
	,get_remainingWealthPoints: function() {
		var r = Math.floor(this["char"].getModifiedValue(18,this.socialClassList[this.wealthIndex].socialClass.wealth));
		if(r < 0) {
			r = 0;
		}
		return r - this.wealthAssetsWorth();
	}
	,wealthAssetsWorthFullArray: function() {
		var i = this.wealthAssets.length;
		var c = 0;
		while(--i > -1) c += this.wealthAssets[i].worth;
		return c;
	}
	,wealthAssetsWorthLen: function() {
		var len = this.wealthAssets.length;
		var max = this.get_maxWealthAssets();
		if(len >= max) {
			return max;
		} else {
			return len;
		}
	}
	,wealthAssetsWorth: function() {
		var c = 0;
		var len = this.wealthAssets.length;
		var max = this.get_maxWealthAssets();
		var len1 = len >= max ? max : len;
		var _g1 = 0;
		var _g = len1;
		while(_g1 < _g) {
			var i = _g1++;
			c += this.wealthAssets[i].worth;
		}
		return c;
	}
	,get_socialBenefitChoices: function() {
		return this.socialClassList[this.socialClassIndex].boons;
	}
	,get_curSelectedSocialClass: function() {
		return this.socialClassList[this.socialClassIndex];
	}
	,get_maxSocialClassIndex: function() {
		return this.categories[4].pcp - 1;
	}
	,constraintSocialWealth: function() {
		if(this.syncSocialWealth) {
			var max = this.categories[4].pcp - 1;
			if(this.socialClassIndex > max) {
				this.socialClassIndex = max;
			}
			this.wealthIndex = this.socialClassIndex;
		} else {
			var max1 = this.get_unevenMaxWealthIndex();
			if(this.wealthIndex > max1) {
				this.wealthIndex = max1;
			}
			max1 = this.get_unevenMaxSocialClassIndex();
			if(this.socialClassIndex > max1) {
				this.socialClassIndex = max1;
			}
		}
	}
	,get_socialEitherMaxIndex: function() {
		var a = this.categories[4].pcp - 1;
		var b = this.get_unevenMaxSocialClassIndex();
		if(this.syncSocialWealth) {
			return a;
		} else {
			return b;
		}
	}
	,get_wealthEitherMaxIndex: function() {
		var a = this.categories[4].pcp - 1;
		var b = this.get_unevenMaxWealthIndex();
		if(this.syncSocialWealth) {
			return a;
		} else {
			return b;
		}
	}
	,get_socialClassPlaceHolderName: function() {
		if(this.socialClassIndex != this.wealthIndex) {
			return this.socialClassList[this.socialClassIndex].socialClass.name + " -$: " + this.socialClassList[this.wealthIndex].socialClass.name;
		} else {
			return this.socialClassList[this.socialClassIndex].socialClass.name;
		}
	}
	,get_promptSettleSocialTier: function() {
		return (this.socialClassIndex != this.wealthIndex ? this.get_unevenSocialPCPRequired() : this.socialClassIndex + 1) != this.categories[4].pcp;
	}
	,get_socialPCPRequired: function() {
		if(this.socialClassIndex != this.wealthIndex) {
			return this.get_unevenSocialPCPRequired();
		} else {
			return this.socialClassIndex + 1;
		}
	}
	,settleSocialTier: function() {
		this.syncSocialWealth = this.socialClassIndex == this.wealthIndex;
		var tmp = this.socialClassIndex != this.wealthIndex ? this.get_unevenSocialPCPRequired() : this.socialClassIndex + 1;
		this.categories[4].pcp = tmp;
	}
	,solveSocialOrWealthMaxX: function(x,y,C) {
		x = C * 2 - 4 - y;
		x -= x & 1 ^ y & 1;
		return x;
	}
	,get_unevenSocialPCPRequired: function() {
		var x = this.socialClassIndex + 1;
		var y = this.wealthIndex + 1;
		var C = this.categories[4].pcp;
		return Math.ceil((x + y) / 2) + 2;
	}
	,get_unevenMaxSocialClassIndex: function() {
		var x = this.socialClassIndex + 1;
		var y = this.wealthIndex + 1;
		x = this.categories[4].pcp * 2 - 4 - y;
		var r = (x -= x & 1 ^ y & 1) - 1;
		if(r >= 0) {
			return r;
		} else {
			return 0;
		}
	}
	,get_unevenMaxWealthIndex: function() {
		var x = this.wealthIndex + 1;
		var y = this.socialClassIndex + 1;
		x = this.categories[4].pcp * 2 - 4 - y;
		var r = (x -= x & 1 ^ y & 1) - 1;
		if(r >= 0) {
			return r;
		} else {
			return 0;
		}
	}
	,setSocialClassIndex: function(index) {
		this.socialClassIndex = index;
		if(this.syncSocialWealth) {
			this.wealthIndex = index;
		}
	}
	,setWealthIndex: function(index) {
		this.wealthIndex = index;
	}
	,updateSocialToCharsheet: function() {
		var s = this.socialClassList[this.socialClassIndex];
		this.validateSocialBenefitsWithClass(1);
		if(s.maxBoons >= 2) {
			this.validateSocialBenefitsWithClass(2);
		} else {
			this.socialBenefit2 = this.emptySocialBenefit;
		}
		if(s.maxBoons >= 3) {
			this.validateSocialBenefitsWithClass(3);
		} else {
			this.socialBenefit3 = this.emptySocialBenefit;
		}
		this["char"].socialClass.classIndex = this.socialClassIndex;
	}
	,get_maxWealthAssets: function() {
		var tmp = this.wealthAssets.length;
		var r = Math.floor(this["char"].getModifiedValue(18,this.socialClassList[this.wealthIndex].socialClass.wealth));
		if(r < 0) {
			r = 0;
		}
		return tmp + (r - this.wealthAssetsWorthFullArray());
	}
	,updateMoneyToCharsheet: function() {
		var s = this.socialClassList[this.wealthIndex];
		this["char"].socialClass.wealthIndex = this.wealthIndex;
		this["char"].socialClass.money.matchWith(s.socialClass.money);
		this["char"].socialClass.wealth = s.socialClass.wealth;
	}
	,filterAwayLiquidatedAssets: function(w) {
		return !w.liquidate;
	}
	,saveFinaliseSocial: function(moneyLeft) {
		if(this.socialClassIndex == this.wealthIndex || this["char"].socialClass.name == "") {
			this["char"].socialClass.name = this.get_socialClassPlaceHolderName();
		}
		var len = this.wealthAssets.length;
		var max = this.get_maxWealthAssets();
		var len1 = len >= max ? max : len;
		var a = this.wealthAssets.slice(0,len1);
		a = a.filter($bind(this,this.filterAwayLiquidatedAssets));
		this["char"].wealthAssets = a;
		this["char"].money.matchWith(moneyLeft);
	}
	,get_categoryBnB: function() {
		return this.categories[2];
	}
	,get_totalBaneExpenditure: function() {
		var arr = this["char"].banes.list;
		var total = 0;
		var i = arr.length;
		while(--i > -1) {
			var b = arr[i];
			var countCost = !(b._canceled || b._forcePermanent);
			var amt = countCost ? b._costCached : 0;
			if(b.discount != 0) {
				amt -= b.discount;
				if(amt < 0) {
					amt = 0;
				}
			}
			total += amt;
		}
		return total;
	}
	,get_maxBanePointsEarnable: function() {
		if(this.get_BnBpoints() < 0) {
			return 15 - this.get_BnBpoints();
		} else {
			return 15;
		}
	}
	,get_totalBanePointsEarned: function() {
		var a = this.get_totalBaneExpenditure();
		var b = this.get_BnBpoints() < 0 ? 15 - this.get_BnBpoints() : 15;
		if(a > b) {
			return b;
		} else {
			return a;
		}
	}
	,get_totalBanePointsSpent: function() {
		return this.get_totalBaneExpenditure() - this.get_totalBanePointsEarned();
	}
	,get_totalBoonExpenditure: function() {
		var arr = this["char"].boons.list;
		var total = 0;
		var i = arr.length;
		while(--i > -1) {
			var b = arr[i];
			var countCost = !(b._canceled || b._forcePermanent);
			var amt = countCost ? b._costCached : 0;
			if(b.discount != 0) {
				amt -= b.discount;
				if(amt < 0) {
					amt = 0;
				}
			}
			total += amt;
		}
		return total;
	}
	,get_boonsArray: function() {
		return this["char"].boons.list;
	}
	,get_banesArray: function() {
		return this["char"].banes.list;
	}
	,get_BnBpoints: function() {
		return -15 + (this.get_categoryBnB().pcp * 5 - 5);
	}
	,get_totalBnBScore: function() {
		return this.get_BnBpoints() + this.get_totalBanePointsEarned() - this.get_totalBoonExpenditure() + (this["char"].direPast ? 10 : 0);
	}
	,get_maxBoonsSpendable: function() {
		return this.get_BnBpoints() + (this.get_BnBpoints() < 0 ? 15 - this.get_BnBpoints() : 15);
	}
	,get_maxBoonsSpendableLeft: function() {
		return this.get_maxBoonsSpendable() - this.get_totalBoonExpenditure();
	}
	,get_maxBanesSpendable: function() {
		return (this.get_BnBpoints() < 0 ? 15 - this.get_BnBpoints() : 15) + (this.get_BnBpoints() < 0 ? 0 : this.get_BnBpoints());
	}
	,get_maxBanesSpendableLeft: function() {
		return this.get_maxBanesSpendable() - this.get_totalBaneExpenditure();
	}
	,addSkill: function(skill,special) {
		var skillToSpecial;
		var specialToSkill;
		skillToSpecial = this.skillSubjectHash[skill];
		if(skillToSpecial == null) {
			skillToSpecial = [];
			troshx_sos_chargen_CharGenData.dynSetField(this.skillSubjectHash,skill,skillToSpecial);
		}
		specialToSkill = this.skillSubjectHash[special];
		if(specialToSkill == null) {
			specialToSkill = [];
			troshx_sos_chargen_CharGenData.dynSetField(this.skillSubjectHash,special,specialToSkill);
		}
		skillToSpecial.push(special);
		specialToSkill.push(skill);
		var name = skill + " (" + special + ")";
		troshx_sos_chargen_CharGenData.dynSetField(this.skillValues,name,0);
		troshx_sos_chargen_CharGenData.dynSetField(this.skillPacketValues,name,0);
		this.skillObjs.push({ name : name, attribs : 0});
	}
	,deleteSkillInput: function(index) {
		var obj = this.skillObjs[index];
		var spl = troshx_sos_core_Skill.getSplitFromSpecialisation(obj.name);
		var skill = spl[0];
		var special = spl[1];
		var skillToSpecial = this.skillSubjectHash[skill];
		var specialToSkill = this.skillSubjectHash[special];
		skillToSpecial.splice(skillToSpecial.indexOf(special),1);
		specialToSkill.splice(skillToSpecial.indexOf(skill),1);
		troshx_sos_chargen_CharGenData.dynDeleteField(this.skillValues,obj.name);
		troshx_sos_chargen_CharGenData.dynDeleteField(this.skillPacketValues,obj.name);
		this.skillObjs.splice(index,1);
		this.truncateSkillPacketHistory();
	}
	,onSkillPacketChange: function(index,vector,clickedPlus) {
		var packet = this.skillPackets[index];
		if(packet.history == null) {
			var _g1 = 0;
			var _g = packet.fields.length;
			while(_g1 < _g) {
				var i = _g1++;
				var f = packet.fields[i];
				this.skillPacketValues[f] += packet.values[f] * vector;
			}
		} else {
			var start = packet.qty - vector;
			var forward = vector >= 0;
			var step = forward ? 1 : -1;
			var h = forward ? start : start - 1;
			var limit = start + vector;
			while(forward ? h < limit : h >= limit) {
				var history = packet.history[h];
				var _g11 = 0;
				var _g2 = packet.fields.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					var f1 = packet.fields[i1];
					var p = history[f1];
					this.skillPacketValues[p] += packet.values[f1] * step;
				}
				h += step;
			}
		}
		if(vector > 0) {
			if(packet.history == null || clickedPlus) {
				this.truncateSkillPacketHistory();
			}
		}
	}
	,onSkillIndividualChange: function(vector) {
		if(vector > 0) {
			this.truncateSkillPacketHistory();
		}
	}
	,truncateSkillPacketHistory: function() {
		var _g1 = 0;
		var _g = this.skillPackets.length;
		while(_g1 < _g) {
			var i = _g1++;
			var s = this.skillPackets[i];
			if(s.history != null) {
				if(s.history.length != s.qty) {
					var of = s.history;
					var len = s.qty;
					of.splice(len,of.length - len);
				}
			}
		}
	}
	,saveFinaliseSkillsFromPackets: function() {
		var _g1 = 0;
		var _g = this.skillObjs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var s = this.skillObjs[i];
			var val = this.skillPacketValues[s.name];
			var total = (val >= 5 ? 5 : val) + this.skillValues[s.name];
			if(total > 0) {
				this["char"].skills.skillHash[s.name] = total;
			}
		}
	}
	,clampSkillValue: function(value) {
		if(value >= 5) {
			return 5;
		} else {
			return value;
		}
	}
	,isSkillLabelBinded: function(s) {
		return s.charAt(0) == "~";
	}
	,get_SkillPoints: function() {
		return (this.categories[3].pcp - 1) * 3;
	}
	,get_individualSkillsSpent: function() {
		var c = 0;
		var _g = 0;
		var _g1 = Reflect.fields(this.skillValues);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			c += this.skillValues[f];
		}
		return c;
	}
	,get_maxSkillPacketsAllowed: function() {
		return Math.floor((this.get_totalSkillPointsProvided() - this.get_individualSkillsSpent()) / 3);
	}
	,get_maxIndividualSkillsSpendable: function() {
		return this.get_totalSkillPointsProvided() - this.get_skillPacketsBought() * 3;
	}
	,get_individualSkillsRemaining: function() {
		return this.get_maxIndividualSkillsSpendable() - this.get_individualSkillsSpent();
	}
	,get_totalSkillPointsProvided: function() {
		return this.get_SkillPoints() + this["char"].intelligence * 2;
	}
	,get_skillPacketsRemaining: function() {
		return this.get_maxSkillPacketsAllowed() - this.get_skillPacketsBought();
	}
	,get_skillPacketsBought: function() {
		var c = 0;
		var i = this.skillPackets.length;
		while(--i > -1) c += this.skillPackets[i].qty;
		return c;
	}
	,get_totalSkillPointsLeft: function() {
		return this.get_totalSkillPointsProvided() - this.get_individualSkillsSpent() - this.get_skillPacketsBought() * 3;
	}
	,getEmptyMappingsFromBase: function(base) {
		var map = { };
		var count = 1;
		var _g = 0;
		var _g1 = Reflect.fields(base);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var dyn = base[p];
			if((dyn instanceof Array) && dyn.__enum__ == null) {
				map[p] = ((dyn instanceof Array) && dyn.__enum__ == null ? dyn : null)[0];
			} else {
				map[p] = "";
			}
		}
		var arrAdded = [];
		this.skillValues = { };
		this.skillPacketValues = { };
		var _g11 = 0;
		var _g2 = this.skillPackets.length;
		while(_g11 < _g2) {
			var i = _g11++;
			var s = this.skillPackets[i];
			var _g21 = 0;
			var _g3 = Reflect.fields(s.values);
			while(_g21 < _g3.length) {
				var f = _g3[_g21];
				++_g21;
				this.skillValues[f] = 0;
				this.skillPacketValues[f] = 0;
				if(f.charAt(0) != "~" && !Object.prototype.hasOwnProperty.call(this.skillsTable.skillHash,f)) {
					this.skillsTable.skillHash[f] = 0;
					arrAdded.push({ name : f, attribs : 0});
				}
			}
		}
		var _g4 = 0;
		var _g12 = Reflect.fields(this.skillsTable.skillHash);
		while(_g4 < _g12.length) {
			var f1 = _g12[_g4];
			++_g4;
			if(!this.skillsTable.requiresSpecialisation[f1]) {
				this.skillValues[f1] = 0;
				this.skillPacketValues[f1] = 0;
			}
		}
		arrAdded.sort(troshx_sos_core_SkillTable.sortArrayMethod);
		this.skillObjs = this.skillObjs.concat(arrAdded);
		this.skillSubjects = troshx_sos_chargen_CharGenSkillPackets.getExistingSubjects();
		var reflectedExisting = { };
		var _g13 = 0;
		var _g5 = this.skillSubjects.length;
		while(_g13 < _g5) {
			var i1 = _g13++;
			reflectedExisting[this.skillSubjects[i1]] = true;
		}
		this.skillSubjectsInitial = reflectedExisting;
		return map;
	}
	,selectSchoolAssign: function(s) {
		if(s != null) {
			this["char"].set_school(s.school);
			this["char"].set_schoolBonuses(s.bonuses);
		} else {
			this["char"].set_school(null);
			this["char"].set_schoolBonuses(null);
		}
	}
	,canStillSpendSchool: function(remainingPoints) {
		var affordMin = 0;
		if(this["char"].school == null) {
			if((this.categories[5].pcp - 1) * 3 == 0) {
				return false;
			}
			return true;
		} else {
			var lv = this["char"].schoolLevel + 1;
			if(lv <= 20) {
				affordMin = this.schoolLevelCosts[lv - 1] - (lv >= 2 ? this.schoolLevelCosts[lv - 2] : 0);
			}
		}
		if(affordMin > 0) {
			return remainingPoints >= affordMin;
		} else {
			return false;
		}
	}
	,get_hasSchool: function() {
		return this["char"].school != null;
	}
	,get_schoolProfLevel: function() {
		if(this["char"].school != null) {
			return this["char"].schoolLevel;
		} else {
			return 0;
		}
	}
	,get_ProfPoints: function() {
		return (this.categories[5].pcp - 1) * 3;
	}
	,get_totalAvailProfSlots: function() {
		if(this["char"].school != null) {
			return this["char"].school.profLimit;
		} else {
			return 0;
		}
	}
	,get_profArcCost: function() {
		if((this["char"].race != null ? this["char"].race.name : "") == "Human") {
			return 0;
		} else {
			return 3;
		}
	}
	,get_schoolArcCost: function() {
		if(this["char"].school != null) {
			return this["char"].school.costArc;
		} else {
			return 0;
		}
	}
	,get_profExpenditure: function() {
		return ((this["char"].race != null ? this["char"].race.name : "") == "Human" ? 0 : 3) * this.get_totalProfecienciesBought();
	}
	,get_totalProfSlotExpenditure: function() {
		var c = (this["char"].race != null ? this["char"].race.name : "") == "Human" ? 0 : 3;
		return c * this.profCoreListRanged.length + c * this.profCoreListMelee.length;
	}
	,get_maxAvailableProfSlots: function() {
		if(this["char"].school != null) {
			return this["char"].school.profLimit;
		} else {
			return 0;
		}
	}
	,get_maxMeleeProfSlots: function() {
		var r = (this["char"].school != null ? this["char"].school.profLimit : 0) - this.profCoreListRanged.length;
		var c = (this["char"].race != null ? this["char"].race.name : "") == "Human" ? 0 : 3;
		var rm = (this.categories[5].pcp - 1) * 3 - (this["char"].school != null ? this["char"].school.costArc : 0) - (this["char"].school != null && this["char"].schoolLevel > 0 ? this.schoolLevelCosts[this["char"].schoolLevel - 1] : 0) - this.profCoreListRanged.length * c;
		if(c > 0) {
			rm = Math.floor(rm / c);
			if(rm < 0) {
				rm = 0;
			}
			if(rm < r) {
				r = rm;
			}
		}
		if(this["char"].school != null) {
			if(r < 0) {
				return 0;
			} else {
				return r;
			}
		} else {
			return 0;
		}
	}
	,get_maxRangedProfSlots: function() {
		var r = (this["char"].school != null ? this["char"].school.profLimit : 0) - this.profCoreListMelee.length;
		var c = (this["char"].race != null ? this["char"].race.name : "") == "Human" ? 0 : 3;
		var rm = (this.categories[5].pcp - 1) * 3 - (this["char"].school != null ? this["char"].school.costArc : 0) - (this["char"].school != null && this["char"].schoolLevel > 0 ? this.schoolLevelCosts[this["char"].schoolLevel - 1] : 0) - this.profCoreListMelee.length * c;
		if(c > 0) {
			rm = Math.floor(rm / c);
			if(rm < 0) {
				rm = 0;
			}
			if(rm < r) {
				r = rm;
			}
		}
		if(this["char"].school != null) {
			if(r < 0) {
				return 0;
			} else {
				return r;
			}
		} else {
			return 0;
		}
	}
	,get_maxTalentSlots: function() {
		var r = this["char"].schoolLevel > 0 ? this.talentsAvailable[this["char"].schoolLevel - 1] : 0;
		if(this["char"].school != null) {
			return r;
		} else {
			return 0;
		}
	}
	,get_maxSuperiorSlots: function() {
		var r = this["char"].schoolLevel > 0 ? this.superiorsAvailable[this["char"].schoolLevel - 1] : 0;
		if(this["char"].school != null) {
			return r;
		} else {
			return 0;
		}
	}
	,get_maxMasterySlots: function() {
		var r = this["char"].schoolLevel >= 20 ? 1 : 0;
		if(this["char"].school != null) {
			return r;
		} else {
			return 0;
		}
	}
	,get_totalProfecienciesBought: function() {
		var a = this.get_maxMeleeProfSlots();
		var b = this.profCoreListMelee.length;
		var a1 = this.get_maxRangedProfSlots();
		var b1 = this.profCoreListRanged.length;
		return (a < b ? a : b) + (a1 < b1 ? a1 : b1);
	}
	,get_maxClampedMeleeProfs: function() {
		var a = this.get_maxMeleeProfSlots();
		var b = this.profCoreListMelee.length;
		if(a < b) {
			return a;
		} else {
			return b;
		}
	}
	,get_maxClampedRangedProfs: function() {
		var a = this.get_maxRangedProfSlots();
		var b = this.profCoreListRanged.length;
		if(a < b) {
			return a;
		} else {
			return b;
		}
	}
	,get_levelsExpenditure: function() {
		if(this["char"].school != null && this["char"].schoolLevel > 0) {
			return this.schoolLevelCosts[this["char"].schoolLevel - 1];
		} else {
			return 0;
		}
	}
	,get_totalProfArcExpenditure: function() {
		return this.get_totalProfecienciesBought() * ((this["char"].race != null ? this["char"].race.name : "") == "Human" ? 0 : 3);
	}
	,get_profPointsLeft: function() {
		return (this.categories[5].pcp - 1) * 3 - this.get_totalProfecienciesBought() * ((this["char"].race != null ? this["char"].race.name : "") == "Human" ? 0 : 3) - (this["char"].school != null ? this["char"].school.costArc : 0) - (this["char"].school != null && this["char"].schoolLevel > 0 ? this.schoolLevelCosts[this["char"].schoolLevel - 1] : 0);
	}
	,get_traceProfCoreRangedCurrent: function() {
		return troshx_sos_core_Profeciency.getLabelsOfArrayProfs(troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged(),this["char"].profsRanged);
	}
	,get_traceProfCoreMeleeCurrent: function() {
		return troshx_sos_core_Profeciency.getLabelsOfArrayProfs(troshx_sos_core_Profeciency.getCoreMelee(),this["char"].profsMelee);
	}
	,get_traceProfCoreRangedCount: function() {
		return troshx_sos_core_Profeciency.getCountOfArrayProfs(troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged(),this["char"].profsRanged);
	}
	,get_traceProfCoreMeleeCount: function() {
		return troshx_sos_core_Profeciency.getCountOfArrayProfs(troshx_sos_core_Profeciency.getCoreMelee(),this["char"].profsMelee);
	}
	,saveFinaliseSchoolProfs: function() {
		this["char"].schoolLevel = this["char"].school != null ? this["char"].schoolLevel : 0;
		var tmp = this["char"].masteryManueverNotes;
		var tmp1 = this.get_maxMasterySlots();
		this["char"].masteryManueverNotes = tmp.slice(0,tmp1);
		var tmp2 = this["char"].superiorManueverNotes;
		var tmp3 = this.get_maxSuperiorSlots();
		this["char"].superiorManueverNotes = tmp2.slice(0,tmp3);
		var tmp4 = this["char"].talentNotes;
		var tmp5 = this.get_maxTalentSlots();
		this["char"].talentNotes = tmp4.slice(0,tmp5);
	}
	,saveFinaliseCleanupChar: function(moneyLeft) {
		this.saveFinaliseSocial(moneyLeft);
		this.saveFinaliseSchoolProfs();
		this.saveFinaliseSkillsFromPackets();
		this["char"].boons.filter(function(bb) {
			return !bb._canceled;
		});
		this["char"].banes.filter(function(bb1) {
			return !bb1._canceled;
		});
		var _g1 = 0;
		var _g = this["char"].boons.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			this["char"].boons.list[i].cleanupUIArrays();
		}
		var _g11 = 0;
		var _g2 = this["char"].banes.list.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this["char"].banes.list[i1].cleanupUIArrays();
		}
		var _g12 = 0;
		var _g3 = this["char"].boons.list.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			this["char"].boons.list[i2].cleanup();
		}
		var _g13 = 0;
		var _g4 = this["char"].banes.list.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			this["char"].banes.list[i3].cleanup();
		}
		this["char"].inventory.cleanupBeforeSerialize();
		if((this["char"].race != null ? this["char"].race.name : "") != "Human") {
			this["char"].arcFlaw = "";
		}
	}
	,__class__: troshx_sos_chargen_CharGenData
};
var troshx_sos_chargen_CharGenSkillPackets = function() { };
$hxClasses["troshx.sos.chargen.CharGenSkillPackets"] = troshx_sos_chargen_CharGenSkillPackets;
troshx_sos_chargen_CharGenSkillPackets.__name__ = ["troshx","sos","chargen","CharGenSkillPackets"];
troshx_sos_chargen_CharGenSkillPackets.getNewSkillPackets = function() {
	var _g = new haxe_ds_StringMap();
	var key = "Profession" + " (" + "Farmer" + ")";
	if(__map_reserved[key] != null) {
		_g.setReserved(key,2);
	} else {
		_g.h[key] = 2;
	}
	var key1 = "Crafting" + " (" + "Wood" + ")";
	if(__map_reserved[key1] != null) {
		_g.setReserved(key1,1);
	} else {
		_g.h[key1] = 1;
	}
	if(__map_reserved["Cooking"] != null) {
		_g.setReserved("Cooking",1);
	} else {
		_g.h["Cooking"] = 1;
	}
	var tmp = { name : "Farmer", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g)};
	var _g1 = new haxe_ds_StringMap();
	var key2 = "Profession" + " (" + "Trade" + ")";
	if(__map_reserved[key2] != null) {
		_g1.setReserved(key2,2);
	} else {
		_g1.h[key2] = 2;
	}
	var key3 = "Crafting" + " (" + "Trade" + ")";
	if(__map_reserved[key3] != null) {
		_g1.setReserved(key3,1);
	} else {
		_g1.h[key3] = 1;
	}
	if(__map_reserved["Persuasion"] != null) {
		_g1.setReserved("Persuasion",1);
	} else {
		_g1.h["Persuasion"] = 1;
	}
	var tmp1 = { name : "Tradesman", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g1)};
	var _g2 = new haxe_ds_StringMap();
	var key4 = "Knowledge" + " (" + "Finance" + ")";
	if(__map_reserved[key4] != null) {
		_g2.setReserved(key4,2);
	} else {
		_g2.h[key4] = 2;
	}
	if(__map_reserved["Etiquette"] != null) {
		_g2.setReserved("Etiquette",1);
	} else {
		_g2.h["Etiquette"] = 1;
	}
	if(__map_reserved["Persuasion"] != null) {
		_g2.setReserved("Persuasion",1);
	} else {
		_g2.h["Persuasion"] = 1;
	}
	var tmp2 = { name : "Merchant", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g2)};
	var _g3 = new haxe_ds_StringMap();
	if(__map_reserved["Gather Information"] != null) {
		_g3.setReserved("Gather Information",1);
	} else {
		_g3.h["Gather Information"] = 1;
	}
	if(__map_reserved["Intimidation"] != null) {
		_g3.setReserved("Intimidation",1);
	} else {
		_g3.h["Intimidation"] = 1;
	}
	if(__map_reserved["Observation"] != null) {
		_g3.setReserved("Observation",1);
	} else {
		_g3.h["Observation"] = 1;
	}
	var key5 = "Knowledge" + " (" + "Criminal" + ")";
	if(__map_reserved[key5] != null) {
		_g3.setReserved(key5,1);
	} else {
		_g3.h[key5] = 1;
	}
	var tmp3 = { name : "Criminal", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g3)};
	var _g4 = new haxe_ds_StringMap();
	if(__map_reserved["Intimidation"] != null) {
		_g4.setReserved("Intimidation",1);
	} else {
		_g4.h["Intimidation"] = 1;
	}
	var key6 = "Knowledge" + " (" + "Criminal" + ")";
	if(__map_reserved[key6] != null) {
		_g4.setReserved(key6,1);
	} else {
		_g4.h[key6] = 1;
	}
	if(__map_reserved["Observation"] != null) {
		_g4.setReserved("Observation",2);
	} else {
		_g4.h["Observation"] = 2;
	}
	var tmp4 = { name : "Guard", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g4)};
	var _g5 = new haxe_ds_StringMap();
	if(__map_reserved["Surgery"] != null) {
		_g5.setReserved("Surgery",2);
	} else {
		_g5.h["Surgery"] = 2;
	}
	if(__map_reserved["Chymistry"] != null) {
		_g5.setReserved("Chymistry",1);
	} else {
		_g5.h["Chymistry"] = 1;
	}
	var key7 = "Profession" + " (" + "Doctor" + ")";
	if(__map_reserved[key7] != null) {
		_g5.setReserved(key7,1);
	} else {
		_g5.h[key7] = 1;
	}
	var tmp5 = { name : "Surgeon", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g5)};
	var _g6 = new haxe_ds_StringMap();
	if(__map_reserved["Sailing"] != null) {
		_g6.setReserved("Sailing",2);
	} else {
		_g6.h["Sailing"] = 2;
	}
	var key8 = "Profession" + " (" + "Sailing" + ")";
	if(__map_reserved[key8] != null) {
		_g6.setReserved(key8,1);
	} else {
		_g6.h[key8] = 1;
	}
	if(__map_reserved["Navigation"] != null) {
		_g6.setReserved("Navigation",1);
	} else {
		_g6.h["Navigation"] = 1;
	}
	var tmp6 = { name : "Sailor", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g6)};
	var _g7 = new haxe_ds_StringMap();
	if(__map_reserved["Etiquette"] != null) {
		_g7.setReserved("Etiquette",1);
	} else {
		_g7.h["Etiquette"] = 1;
	}
	var key9 = "Knowledge" + " (" + "Politics" + ")";
	if(__map_reserved[key9] != null) {
		_g7.setReserved(key9,1);
	} else {
		_g7.h[key9] = 1;
	}
	if(__map_reserved["Oration"] != null) {
		_g7.setReserved("Oration",1);
	} else {
		_g7.h["Oration"] = 1;
	}
	if(__map_reserved["Persuasion"] != null) {
		_g7.setReserved("Persuasion",1);
	} else {
		_g7.h["Persuasion"] = 1;
	}
	var tmp7 = { name : "Politician", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g7)};
	var _g8 = new haxe_ds_StringMap();
	var key10 = "Knowledge" + " (" + "Nobility" + ")";
	if(__map_reserved[key10] != null) {
		_g8.setReserved(key10,1);
	} else {
		_g8.h[key10] = 1;
	}
	if(__map_reserved["Etiquette"] != null) {
		_g8.setReserved("Etiquette",1);
	} else {
		_g8.h["Etiquette"] = 1;
	}
	var key11 = "Knowledge" + " (" + "Politics" + ")";
	if(__map_reserved[key11] != null) {
		_g8.setReserved(key11,1);
	} else {
		_g8.h[key11] = 1;
	}
	if(__map_reserved["Persuasion"] != null) {
		_g8.setReserved("Persuasion",1);
	} else {
		_g8.h["Persuasion"] = 1;
	}
	var tmp8 = { name : "Nobleman", qty : 0, values : troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g8)};
	var _g9 = new haxe_ds_StringMap();
	if(__map_reserved["Cooking"] != null) {
		_g9.setReserved("Cooking",2);
	} else {
		_g9.h["Cooking"] = 2;
	}
	var key12 = "Crafting" + " (" + "Homestead" + ")";
	if(__map_reserved[key12] != null) {
		_g9.setReserved(key12,2);
	} else {
		_g9.h[key12] = 2;
	}
	var tmp9 = troshx_sos_chargen_CharGenSkillPackets.strMapValues(_g9);
	return [{ name : "Academic", qty : 0, values : { "~academic1" : 1, "~academic2" : 1, "Research" : 1, "~academicLast" : 1}},{ name : "Athlete", qty : 0, values : { "Athletics" : 2, "Climbing" : 1, "Swimming" : 1}},tmp,tmp1,tmp2,{ name : "Thief", qty : 0, values : { "Stealth" : 1, "Thievery" : 2, "Observation" : 1}},tmp3,{ name : "Hunter", qty : 0, values : { "~hunter1" : 1, "Navigation" : 1, "Hunting" : 2}},tmp4,{ name : "Soldier", qty : 0, values : { "~soldier1" : 1, "Tactics" : 1, "Drill" : 2}},tmp5,{ name : "Officer", qty : 0, values : { "Drill" : 1, "Tactics" : 1, "Navigation" : 1, "Strategy" : 1}},tmp6,{ name : "Scout", qty : 0, values : { "~scout1" : 1, "Stealth" : 1, "Navigation" : 1, "Observation" : 1}},tmp7,tmp8,{ name : "Domestic", qty : 0, values : tmp9}];
};
troshx_sos_chargen_CharGenSkillPackets.getExistingSubjects = function() {
	return ["Farmer","Trade","Finance","Wood","Homestead","Criminal","Nobility","Politics","Sailing","Doctor"];
};
troshx_sos_chargen_CharGenSkillPackets.getNewSkillLabelMappingBases = function() {
	return { "~academic1" : "Knowledge", "~academic2" : "Knowledge", "~academicLast" : ["Engineering","Knowledge" + " (" + "Politics" + ")","Chymistry"], "~soldier1" : ["Athletics","Riding"], "~scout1" : ["Athletics","Riding"], "~hunter1" : ["Stealth","Riding"]};
};
troshx_sos_chargen_CharGenSkillPackets.strMapValues = function(str) {
	var dyn = { };
	var p = str.keys();
	while(p.hasNext()) {
		var p1 = p.next();
		dyn[p1] = __map_reserved[p1] != null ? str.getReserved(p1) : str.h[p1];
	}
	return dyn;
};
troshx_sos_chargen_CharGenSkillPackets.isSkillLabelBinded = function(s) {
	return s.charAt(0) == "~";
};
troshx_sos_chargen_CharGenSkillPackets.getSkillLabel = function(s,skillLabelMappingBases,skillLabelMappings) {
	if(s.charAt(0) == "~") {
		if(typeof(skillLabelMappingBases[s]) == "string") {
			return skillLabelMappingBases[s] + " (" + skillLabelMappings[s] + ")";
		} else {
			return skillLabelMappings[s];
		}
	} else {
		return s;
	}
};
var troshx_sos_core_Item = function(id,name) {
	if(name == null) {
		name = "";
	}
	if(id == null) {
		id = "";
	}
	this.unit = 1;
	this.costCurrency = 0;
	this.cost = 0;
	this.flags = 0;
	this.weight = 0;
	this.id = id != null ? id : "Item_" + troshx_sos_core_Item.UID_COUNT++;
	this.name = name;
};
$hxClasses["troshx.sos.core.Item"] = troshx_sos_core_Item;
troshx_sos_core_Item.__name__ = ["troshx","sos","core","Item"];
troshx_sos_core_Item.getLabelsOfArray = function(a,mask) {
	var arr = [];
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if((mask & 1 << i) != 0) {
			arr.push(a[i].name);
		}
	}
	return arr;
};
troshx_sos_core_Item.sign = function(i) {
	if(i >= 0) {
		return "+";
	} else {
		return "";
	}
};
troshx_sos_core_Item.labelizeAllCaps = function(name) {
	var spl = name.split("_");
	var _g1 = 0;
	var _g = spl.length;
	while(_g1 < _g) {
		var i = _g1++;
		spl[i] = spl[i].charAt(0).toUpperCase() + HxOverrides.substr(spl[i],1,null).toLowerCase();
	}
	return spl.join(" ");
};
troshx_sos_core_Item.labelizeCamelCase = function(name) {
	var r_r = new RegExp("([A-Z]+)","g".split("u").join(""));
	var r2_r = new RegExp("([A-Z][a-z])","g".split("u").join(""));
	name = name.replace(r_r,"$1");
	name = name.replace(r2_r," $1");
	name = StringTools.trim(name);
	name = name.charAt(0).toUpperCase() + HxOverrides.substr(name,1,null);
	return name;
};
troshx_sos_core_Item.labelizeAllCapsArr = function(arr) {
	var newArr = [];
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		newArr[i] = troshx_sos_core_Item.labelizeAllCaps(arr[i]);
	}
	return newArr;
};
troshx_sos_core_Item.labelizeCamelCaseArr = function(arr) {
	var newArr = [];
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		newArr[i] = troshx_sos_core_Item.labelizeCamelCase(arr[i]);
	}
	return newArr;
};
troshx_sos_core_Item.prototype = {
	normalize: function() {
		return this;
	}
	,setWeightCost: function(weight,cost,costCurrency) {
		this.weight = weight;
		this.cost = cost;
		this.costCurrency = costCurrency;
		return this;
	}
	,setUnit: function(unit) {
		this.unit = unit;
		return this;
	}
	,serializeClone: function() {
		var serializer = new haxe_Serializer();
		serializer.serialize(this);
		return new haxe_Unserializer(serializer.toString()).unserialize();
	}
	,addTagsToStrArr: function(arr) {
		if((this.flags & 2) != 0) {
			arr.push("Strapped");
		}
		if(js_Boot.getClass(this) != troshx_sos_core_Weapon && (this.flags & 1) != 0) {
			arr.push("Two-Handed");
		}
		if((this.flags & 4) != 0) {
			arr.push("Eye-Corrective");
		}
		if((this.flags & 8) != 0) {
			arr.push("Prosthetic");
		}
	}
	,getTypeLabel: function() {
		return "MiscItem";
	}
	,get_uid: function() {
		if(this.id != "") {
			return this.id;
		} else {
			return this.name;
		}
	}
	,get_label: function() {
		return this.name;
	}
	,get_twoHanded: function() {
		return (this.flags & 1) != 0;
	}
	,get_strapped: function() {
		return (this.flags & 2) != 0;
	}
	,__class__: troshx_sos_core_Item
};
var troshx_sos_core_Armor = function() {
	this.customise = null;
	this.special = null;
	this.specialFlags = 0;
	this.pp = 0;
	this.burdinadin = null;
	this.AVB = 0;
	this.AVP = 0;
	this.AVC = 0;
	troshx_sos_core_Item.call(this);
};
$hxClasses["troshx.sos.core.Armor"] = troshx_sos_core_Armor;
troshx_sos_core_Armor.__name__ = ["troshx","sos","core","Armor"];
troshx_sos_core_Armor.createEmptyInstance = function() {
	var armor = new troshx_sos_core_Armor();
	armor.coverage = { };
	return armor;
};
troshx_sos_core_Armor.__super__ = troshx_sos_core_Item;
troshx_sos_core_Armor.prototype = $extend(troshx_sos_core_Item.prototype,{
	writeAVsAtLocation: function(body,hitLocationId,hitLocationMask,result,layerMask,nonFirearmMissile,targetZoneMask,includeCrushedAVS) {
		var flags = this.coverage[hitLocationId];
		if((layerMask & hitLocationMask) != 0 && this.special.wornWith.layer == -1) {
			return false;
		}
		var multiplier = (flags & 2) != 0 ? 0.5 : 1;
		if((flags & 4) != 0 && (body.thrustMask & targetZoneMask) == 0) {
			multiplier = 0;
		}
		var adder = 0;
		if(hitLocationMask != 0 && this.special != null && this.special.hitModifier != null && multiplier != 0) {
			if(targetZoneMask == 0 && this.special.hitModifier.targetZoneMask == 0 && (this.special.hitModifier.locationMask & hitLocationMask) != 0) {
				if(this.special.hitModifier.multiplyAV < 1 && this.special.hitModifier.multiplyAV < multiplier) {
					multiplier = this.special.hitModifier.multiplyAV;
				}
				if(this.special.hitModifier.multiplyAV > 1 && this.special.hitModifier.multiplyAV > multiplier) {
					multiplier = this.special.hitModifier.multiplyAV;
				}
				adder += this.special.hitModifier.addAV;
			}
			if(targetZoneMask != 0 && (this.special.hitModifier.targetZoneMask & targetZoneMask) != 0 && (this.special.hitModifier.locationMask == 0 || (this.special.hitModifier.locationMask & hitLocationMask) != 0)) {
				if(this.special.hitModifier.multiplyAV < 1 && this.special.hitModifier.multiplyAV < multiplier) {
					multiplier = this.special.hitModifier.multiplyAV;
				}
				if(this.special.hitModifier.multiplyAV > 1 && this.special.hitModifier.multiplyAV > multiplier) {
					multiplier = this.special.hitModifier.multiplyAV;
				}
				adder += this.special.hitModifier.addAV;
			}
		}
		if(includeCrushedAVS && hitLocationMask != 0 && this.customise != null && this.customise.hitLocationAllAVModifiers != null && this.customise.hitLocationAllAVModifiers[hitLocationId] != null) {
			adder += this.customise.hitLocationAllAVModifiers[hitLocationId];
		}
		var multiplierP = nonFirearmMissile && (this.specialFlags & 8) != 0 ? multiplier * 2 : multiplier;
		var avc = (this.AVC * multiplier | 0) + adder;
		var avp = (this.AVP * multiplierP | 0) + adder;
		var avb = (this.AVB * multiplier | 0) + adder;
		if(avc < 0) {
			avc = 0;
		}
		if(avp < 0) {
			avp = 0;
		}
		if(avb < 0) {
			avb = 0;
		}
		result.avc = avc;
		result.avp = avp;
		result.avb = avb;
		return true;
	}
	,writeAVVAluesTo: function(values,body,layerMask,nonFirearmMissile,targetZoneMask) {
		var tempAvs;
		if(troshx_sos_core_Armor.TEMPAVS == null) {
			troshx_sos_core_Armor.TEMPAVS = { avc : 0, avp : 0, avb : 0};
		}
		tempAvs = troshx_sos_core_Armor.TEMPAVS;
		var _g = 0;
		var _g1 = Reflect.fields(this.coverage);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var cur = values[f];
			var hitLocationId = f;
			var hitLocationMask = 1 << body.hitLocationHash[hitLocationId];
			if(!this.writeAVsAtLocation(body,hitLocationId,hitLocationMask,tempAvs,layerMask,nonFirearmMissile,targetZoneMask,true)) {
				continue;
			}
			if(tempAvs.avc > cur.avc) {
				cur.avc = tempAvs.avc;
			}
			if(tempAvs.avp > cur.avp) {
				cur.avp = tempAvs.avp;
			}
			if(tempAvs.avb > cur.avb) {
				cur.avb = tempAvs.avb;
			}
		}
	}
	,checkFubarCrushed: function(body,targetZoneMask,damageType) {
		var tempAvs;
		if(troshx_sos_core_Armor.TEMPAVS == null) {
			troshx_sos_core_Armor.TEMPAVS = { avc : 0, avp : 0, avb : 0};
		}
		tempAvs = troshx_sos_core_Armor.TEMPAVS;
		var _g = 0;
		var _g1 = Reflect.fields(this.coverage);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var hitLocationId = f;
			var hitLocationMask = 1 << body.hitLocationHash[hitLocationId];
			if(!this.writeAVsAtLocation(body,hitLocationId,hitLocationMask,tempAvs,0,false,targetZoneMask,true)) {
				continue;
			}
			var chk = damageType == 0 ? tempAvs.avc : damageType == 1 ? tempAvs.avp : tempAvs.avb;
			if(chk != 0) {
				return false;
			}
		}
		return true;
	}
	,normalize: function() {
		if(this.coverage == null) {
			this.coverage = { };
		}
		var bodyChar = this.special != null && this.special.otherBodyType != null ? this.special.otherBodyType : troshx_sos_core_BodyChar.getInstance();
		var tempSpecial = this.special;
		var tempCoverage = this.coverage;
		this.coverage = null;
		this.special = null;
		var fakeMe = this.serializeClone();
		fakeMe._coverageValues = [];
		var _g1 = 0;
		var _g = bodyChar.hitLocations.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ider = bodyChar.hitLocations[i].id;
			if(tempCoverage[ider] != null) {
				fakeMe._coverageValues.push(i);
				fakeMe._coverageValues.push(tempCoverage[ider]);
			} else {
				fakeMe._coverageValues.push(0);
				fakeMe._coverageValues.push(0);
			}
		}
		if(tempSpecial != null) {
			this.special = tempSpecial;
			fakeMe.special = tempSpecial;
		}
		this.coverage = tempCoverage;
		return fakeMe;
	}
	,getCoverageMask: function(body) {
		var mask = 0;
		var _g = 0;
		var _g1 = Reflect.fields(this.coverage);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			mask |= 1 << body.hitLocationHash[f];
		}
		return mask;
	}
	,get_uid: function() {
		return troshx_sos_core_Item.prototype.get_uid.call(this) + (this.customise != null ? " *" + this.customise.name + "*" : "");
	}
	,addCoverageTagsToStrArr: function(arr) {
		var bodyChar = this.special != null && this.special.otherBodyType != null ? this.special.otherBodyType : troshx_sos_core_BodyChar.getInstance();
		bodyChar.pushArmorCoverageLabelsTo(this.coverage,arr);
	}
	,addTagsToStrArr: function(arr) {
		troshx_sos_core_Item.prototype.addTagsToStrArr.call(this,arr);
		if(this.pp > 0) {
			arr.push("PP -" + this.pp);
		}
		var flags = this.specialFlags;
		if(flags != 0) {
			if((flags & 1) != 0) {
				arr.push("Movable");
			}
			if((flags & 2) != 0) {
				arr.push("Hard");
			}
			if((flags & 4) != 0) {
				arr.push("Mail");
			}
			if((flags & 8) != 0) {
				arr.push("Textile");
			}
			if((flags & 16) != 0) {
				arr.push("Bulletproof");
			}
		}
		if(this.special != null) {
			this.special.addTagsToStrArr(arr,this);
		}
		if(this.customise != null) {
			this.customise.addTagsToStrArr(arr);
		}
	}
	,get_label: function() {
		return this.name + (this.customise != null ? " *" + (this.customise.name != null ? this.customise.name : this.customise.name) + "*" : "");
	}
	,getTypeLabel: function() {
		return "Armor";
	}
	,getLayerValueAt: function(locMask,layerMask) {
		var result = this.special != null && this.special.layer != 0 ? (this.special.layerCoverage == 0 || (this.special.layerCoverage & locMask) != 0 ? 1 : 0) * this.special.layer : 0;
		if(layerMask != 0 && this.special.wornWith.layer > 0) {
			if(this.special.wornWith.layer > result) {
				result = this.special.wornWith.layer;
			}
		}
		return result;
	}
	,__class__: troshx_sos_core_Armor
});
var troshx_sos_core_ArmorCustomise = function() {
	this.crest = 0;
	this.hitLocationAllAVModifiers = null;
	this.name = "";
};
$hxClasses["troshx.sos.core.ArmorCustomise"] = troshx_sos_core_ArmorCustomise;
troshx_sos_core_ArmorCustomise.__name__ = ["troshx","sos","core","ArmorCustomise"];
troshx_sos_core_ArmorCustomise.__interfaces__ = [troshx_core_IUid];
troshx_sos_core_ArmorCustomise.prototype = {
	addTagsToStrArr: function(arr) {
		var flags = this.crest;
		if(flags == 1) {
			arr.push("*Identifying");
		}
		if(flags == 2) {
			arr.push("*Intimidating");
		}
		if(flags == 3) {
			arr.push("*Ruthlessly Fashionable");
		}
	}
	,get_uid: function() {
		return this.name;
	}
	,__class__: troshx_sos_core_ArmorCustomise
};
var troshx_sos_core_ArmorSpecial = function() {
	this.otherBodyType = null;
	this.hitModifier = null;
	this.wornWith = null;
	this.layerCoverage = 0;
	this.layer = 0;
	this.restrictsBreathing = 0;
};
$hxClasses["troshx.sos.core.ArmorSpecial"] = troshx_sos_core_ArmorSpecial;
troshx_sos_core_ArmorSpecial.__name__ = ["troshx","sos","core","ArmorSpecial"];
troshx_sos_core_ArmorSpecial.prototype = {
	addTagsToStrArr: function(arr,curArmor) {
		var instance = this;
		var bodyChar = this.otherBodyType != null ? this.otherBodyType : troshx_sos_core_BodyChar.getInstance();
		if(this.otherBodyType != null) {
			arr.push("For Body Type: " + bodyChar.name);
		}
		if(instance.restrictsBreathing != 0) {
			arr.push("Restricts Breathing" + " " + instance.restrictsBreathing);
		}
		if(this.layer > 0) {
			if(this.layerCoverage != 0) {
				var myArr = [];
				bodyChar.pushHitLocationNamesToStrArrByMask(myArr,this.layerCoverage);
				arr.push("Layer" + (myArr.length > 0 ? "s" : "") + (" " + this.layer + " (" + myArr.join(", ") + ")"));
			} else {
				arr.push("Layer " + this.layer);
			}
		}
		if(this.hitModifier != null) {
			this.hitModifier.addTagsToStrArr(arr,bodyChar);
		}
		if(this.wornWith != null) {
			this.wornWith.addTagsToStrArr(arr,curArmor);
		}
	}
	,__class__: troshx_sos_core_ArmorSpecial
};
var troshx_sos_core_HitModifier = function() {
	this.addAV = 0;
	this.multiplyAV = 1;
	this.targetZoneMask = 0;
	this.locationMask = 0;
};
$hxClasses["troshx.sos.core.HitModifier"] = troshx_sos_core_HitModifier;
troshx_sos_core_HitModifier.__name__ = ["troshx","sos","core","HitModifier"];
troshx_sos_core_HitModifier.prototype = {
	addTagsToStrArr: function(arr,bodyChar) {
		if(this.targetZoneMask == 0 && this.locationMask == 0 || this.multiplyAV == 1 && this.addAV == 0) {
			return;
		}
		var swingAll = (this.targetZoneMask & bodyChar.swingMask) == bodyChar.swingMask;
		var thrustAll = (this.targetZoneMask & bodyChar.thrustMask) == bodyChar.thrustMask;
		if(this.locationMask == 0 && swingAll && thrustAll) {
			return;
		}
		var bothHave = this.addAV != 0 && this.multiplyAV != 1;
		var damageStr = this.multiplyAV == 0 && this.addAV == 0 ? "No AV" : (this.addAV < 0 ? "Reduced " : "") + (!bothHave ? this.multiplyAV != 1 ? this.multiplyAV == 0.5 ? "Provides Half AV" : this.multiplyAV + "x AV" : (this.addAV > 0 ? "+" : "") + this.addAV + " AV" : this.multiplyAV != 0 ? (this.addAV > 0 ? "+" : "") + this.addAV + " AV " + "over " + (this.multiplyAV == 0.5 ? "Half AV" : this.multiplyAV + "x AV") : this.addAV > 0 ? "Only " + this.addAV + " AV" : "+" + -this.addAV + " damage");
		arr.push(damageStr + (this.targetZoneMask != 0 && !(swingAll && thrustAll) ? " vs " + bodyChar.describeTargetZones(this.targetZoneMask) : "") + (this.locationMask != 0 ? " on " + bodyChar.getLabelsHitLocationMask(this.locationMask).join(" ,") : ""));
	}
	,__class__: troshx_sos_core_HitModifier
};
var troshx_sos_core_WornWith = function() {
	this.layer = 0;
	this.name = "";
};
$hxClasses["troshx.sos.core.WornWith"] = troshx_sos_core_WornWith;
troshx_sos_core_WornWith.__name__ = ["troshx","sos","core","WornWith"];
troshx_sos_core_WornWith.prototype = {
	addTagsToStrArr: function(arr,curArmor) {
		if(this.name == "") {
			return;
		}
		if(this.layer == 0 || this.layer == -1) {
			arr.push("When worn with " + this.name + ": Use " + (this.layer == 0 ? "own" : this.name) + " AV value instead");
		} else {
			arr.push("Can be worn with " + this.name + " for Layer " + this.layer);
		}
	}
	,__class__: troshx_sos_core_WornWith
};
var troshx_sos_core_Weapon = function(id,name) {
	if(name == null) {
		name = "";
	}
	if(id == null) {
		id = "";
	}
	this.isAmmo = false;
	this.firearm = null;
	this.crossbow = null;
	this.requiredStr = 0;
	this.stuckChance = 0;
	this.burdinadin = null;
	this.missileSpecial = null;
	this.missileFlags = 0;
	this.damageTypeM = 1;
	this.damageM = 0;
	this.atnM = 0;
	this.range = 0;
	this.meleeSpecial = null;
	this.meleeFlags = 0;
	this.guard = 0;
	this.dtn = 0;
	this.damageTypeT = 1;
	this.damageTypeS = 0;
	this.damageT = 0;
	this.damageS = 0;
	this.atnT = 0;
	this.atnS = 0;
	this.variant = null;
	this.reach = 4;
	this.ranged = false;
	this.profsCustom = null;
	this.profs = 0;
	this.customise = null;
	troshx_sos_core_Item.call(this,id,name);
};
$hxClasses["troshx.sos.core.Weapon"] = troshx_sos_core_Weapon;
troshx_sos_core_Weapon.__name__ = ["troshx","sos","core","Weapon"];
troshx_sos_core_Weapon.IsPowerOfTwoOrZero = function(x) {
	return (x & x - 1) == 0;
};
troshx_sos_core_Weapon.__super__ = troshx_sos_core_Item;
troshx_sos_core_Weapon.prototype = $extend(troshx_sos_core_Item.prototype,{
	normalize: function() {
		if(this.ranged) {
			var a = (this.profs & 1) != 0;
			if(!(this.ranged && a && !this.isAmmo)) {
				this.requiredStr = 0;
			}
			this.meleeFlags = 0;
			this.meleeSpecial = null;
			this.atnS = 0;
			this.atnT = 0;
			this.dtn = 0;
			this.guard = 0;
			this.damageS = 0;
			this.damageT = 0;
			this.damageTypeS = 0;
			this.damageTypeT = 1;
			this.variant = null;
			this.reach = 4;
		} else {
			this.missileFlags = 0;
			this.missileSpecial = null;
			this.stuckChance = 0;
			this.requiredStr = 0;
			this.firearm = null;
			this.crossbow = null;
			this.isAmmo = false;
			this.damageTypeM = 1;
		}
		return this;
	}
	,isAttachment: function() {
		var m = (this.meleeFlags & 65536) != 0;
		var r = (this.missileFlags & 16) != 0;
		if(this.ranged) {
			return r;
		} else {
			return m;
		}
	}
	,isMeleeAttachmentFor: function(other) {
		if(this.ranged) {
			return false;
		} else if((this.meleeFlags & 65536) != 0) {
			return other.supportsMeleeAttachment();
		} else {
			return false;
		}
	}
	,supportsMeleeAttachment: function() {
		var ranged = this.ranged;
		if((this.meleeFlags & 20480) != 0) {
			return !ranged;
		} else {
			return false;
		}
	}
	,hasNoProf: function() {
		if(this.profsCustom == null || this.profsCustom.list.length == 0) {
			return this.profs == 0;
		} else {
			return false;
		}
	}
	,matchesTypes: function(ranged,profs) {
		var thisProfs = this.profs;
		if(this.ranged == ranged) {
			if(profs != null) {
				return (profs & thisProfs) != 0;
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,isMelee: function() {
		if(!this.ranged) {
			return !this.isAmmo;
		} else {
			return false;
		}
	}
	,isRangedWeap: function() {
		if(this.ranged) {
			return !this.isAmmo;
		} else {
			return false;
		}
	}
	,isBow: function() {
		var a = (this.profs & 1) != 0;
		if(this.ranged && a) {
			return !this.isAmmo;
		} else {
			return false;
		}
	}
	,isSling: function() {
		var a = (this.profs & 2) != 0;
		if(this.ranged && a) {
			return !this.isAmmo;
		} else {
			return false;
		}
	}
	,isCrossbow: function() {
		var a = (this.profs & 4) != 0;
		if(this.ranged && a && !this.isAmmo) {
			return this.crossbow != null;
		} else {
			return false;
		}
	}
	,isFirearm: function() {
		var a = (this.profs & 8) != 0;
		if(this.ranged && a && !this.isAmmo) {
			return this.firearm != null;
		} else {
			return false;
		}
	}
	,isThrowing: function() {
		var a = (this.profs & 16) != 0;
		if(this.ranged && a) {
			return !this.isAmmo;
		} else {
			return false;
		}
	}
	,isAmmunition: function() {
		if(this.isAmmo) {
			return this.ranged;
		} else {
			return false;
		}
	}
	,profLabels: function() {
		var arr = troshx_sos_core_Profeciency.getLabelsOfArrayProfs(this.ranged ? troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged() : troshx_sos_core_Profeciency.getCoreMelee(),this.profs);
		if(this.profsCustom != null) {
			var _g1 = 0;
			var _g = this.profsCustom.list.length;
			while(_g1 < _g) {
				var i = _g1++;
				arr.push(this.profsCustom.list[i].name);
			}
		}
		return arr.join(", ");
	}
	,addTagsToStrArr: function(arr) {
		troshx_sos_core_Item.prototype.addTagsToStrArr.call(this,arr);
		var flags = this.ranged ? this.missileFlags : this.meleeFlags;
		var myArr;
		var valCheck;
		if(this.ranged) {
			myArr = troshx_sos_core_MissileSpecial.getLabelsOfFlags(this.missileSpecial,this.missileFlags);
			var _g1 = 0;
			var _g = myArr.length;
			while(_g1 < _g) {
				var i = _g1++;
				arr.push(myArr[i]);
			}
			if(this.isAmmo) {
				if(this.crossbow != null && (this.profs & 4) != 0) {
					this.crossbow.addAmmoTagsToStrArr(arr);
				}
				if((this.profs & 1) != 0) {
					if(this.requiredStr != 0) {
						arr.push("Required STR " + (this.requiredStr >= 0 ? "+" : "") + this.requiredStr);
					}
				}
			}
			if(this.firearm != null && (this.profs & 8) != 0) {
				this.firearm.addTagsToStrArr(arr,this.isAmmo,this.isAmmo);
			}
		} else {
			myArr = troshx_sos_core_MeleeSpecial.getLabelsOfFlags(this.meleeSpecial,this.meleeFlags);
			var _g11 = 0;
			var _g2 = myArr.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				arr.push(myArr[i1]);
			}
			if(this.customise != null) {
				this.customise.addMeleeTagsToStrArr(arr);
			}
		}
	}
	,isMultipleCoreProf: function() {
		if(this.profs != 0) {
			var x = this.profs;
			return (x & x - 1) != 0;
		} else {
			return false;
		}
	}
	,hasCustomProf: function() {
		if(this.profsCustom != null) {
			return this.profsCustom.list.length > 0;
		} else {
			return false;
		}
	}
	,setSingleProfIndex: function(index) {
		this.profs = 1 << index;
	}
	,setMultipleProf: function(mask) {
		this.profs = mask;
	}
	,get_uid: function() {
		return troshx_sos_core_Item.prototype.get_uid.call(this) + (this.customise != null ? "_" + this.customise.get_uid() : "");
	}
	,get_label: function() {
		var tmp;
		var tmp1;
		var a = (this.profs & 8) != 0;
		if(this.ranged && a && !this.isAmmo && this.firearm != null) {
			tmp1 = this.firearm.firingMechanism != null;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			tmp = this.firearm.firingMechanism.name + " ";
		} else {
			tmp = "";
		}
		return tmp + this.name + (this.customise != null ? " *" + (this.customise.name != null ? this.customise.name : this.customise.get_uid()) + "*" : "");
	}
	,getTypeLabel: function() {
		return "Weapon";
	}
	,__class__: troshx_sos_core_Weapon
});
var troshx_sos_core_Arrow = function(name,catchChance,id) {
	if(id == null) {
		id = "";
	}
	if(catchChance == null) {
		catchChance = 0;
	}
	if(name == null) {
		name = "";
	}
	troshx_sos_core_Weapon.call(this,id,name);
	this.stuckChance = catchChance;
	this.isAmmo = true;
	this.ranged = true;
	this.profs = 5;
};
$hxClasses["troshx.sos.core.Arrow"] = troshx_sos_core_Arrow;
troshx_sos_core_Arrow.__name__ = ["troshx","sos","core","Arrow"];
troshx_sos_core_Arrow.getDefaultList = function() {
	if(troshx_sos_core_Arrow.LIST != null) {
		return troshx_sos_core_Arrow.LIST;
	} else {
		return troshx_sos_core_Arrow.LIST = troshx_sos_core_Arrow.getNewDefaultList();
	}
};
troshx_sos_core_Arrow.getNewDefaultList = function() {
	var a = [];
	var f = new troshx_sos_core_Arrow("Bodkin",1).setWeightCost(0,1,1).setUnit(20);
	a[0] = f;
	f.range = 10;
	f.missileFlags = 2;
	f = new troshx_sos_core_Arrow("Barbed Broadhead",10).setWeightCost(0,4,1).setUnit(20);
	a[1] = f;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.winged = 2;
	f = new troshx_sos_core_Arrow("Bludgeon/Stun Arrow",0).setWeightCost(0,10,0).setUnit(20);
	a[2] = f;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.shock = 2;
	f.missileFlags = 1;
	f.range = -5;
	f = new troshx_sos_core_Arrow("Broadhead",5).setWeightCost(0,2,1).setUnit(20);
	a[3] = f;
	f.damageM = -1;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.winged = 2;
	f = new troshx_sos_core_Arrow("Fire Arrow",5).setWeightCost(0,2,1).setUnit(20);
	a[4] = f;
	f.damageM = -1;
	f.atnM = 1;
	f.range = -5;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.flaming = 1;
	f = new troshx_sos_core_Arrow("Heavy Broadhead",5).setWeightCost(0,3,1).setUnit(20);
	a[5] = f;
	f.damageM = -2;
	f.range = -5;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.winged = 2;
	f = new troshx_sos_core_Arrow("Lozenge-Head",2).setWeightCost(0,2,1).setUnit(20);
	a[6] = f;
	f.range = -5;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.AP = 2;
	f = new troshx_sos_core_Arrow("Swallowtail",8).setWeightCost(0,4,1).setUnit(20);
	a[7] = f;
	f.requiredStr = -1;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.winged = 1;
	return a;
};
troshx_sos_core_Arrow.__super__ = troshx_sos_core_Weapon;
troshx_sos_core_Arrow.prototype = $extend(troshx_sos_core_Weapon.prototype,{
	__class__: troshx_sos_core_Arrow
});
var troshx_sos_core_BodyChar = function() {
	this.hitLocationHash = null;
};
$hxClasses["troshx.sos.core.BodyChar"] = troshx_sos_core_BodyChar;
troshx_sos_core_BodyChar.__name__ = ["troshx","sos","core","BodyChar"];
troshx_sos_core_BodyChar.getInstance = function() {
	if(troshx_sos_core_BodyChar.DEFAULT != null) {
		return troshx_sos_core_BodyChar.DEFAULT;
	} else {
		return troshx_sos_core_BodyChar.DEFAULT = troshx_sos_core_BodyChar.getNewDefaultInstance();
	}
};
troshx_sos_core_BodyChar.getNewDefaultInstance = function() {
	var bodyChar = new troshx_sos_core_BodyChar();
	bodyChar.name = "Humanoid";
	bodyChar.targetZones = troshx_sos_core_Humanoid.getNewTargetZones();
	bodyChar.hitLocations = troshx_sos_core_Humanoid.getNewHitLocations();
	bodyChar.thrustStartIndex = 9;
	bodyChar.rearStartIndex = 18;
	bodyChar.missileHitLocations = [];
	bodyChar.bake();
	return bodyChar;
};
troshx_sos_core_BodyChar.createBlankInstance = function() {
	var bodyChar = new troshx_sos_core_BodyChar();
	bodyChar.name = "";
	bodyChar.targetZones = [];
	bodyChar.missileHitLocations = [];
	bodyChar.hitLocations = [];
	bodyChar.thrustStartIndex = 0;
	return bodyChar;
};
troshx_sos_core_BodyChar.createEmptyInstance = function() {
	return new troshx_sos_core_BodyChar();
};
troshx_sos_core_BodyChar.prototype = {
	getNewHitLocationsFrontSlice: function() {
		return this.hitLocations.slice(0,this.rearStartIndex);
	}
	,isSwingingAll: function(mask) {
		return (mask & this.swingMask) == this.swingMask;
	}
	,isThrustingAll: function(mask) {
		return (mask & this.thrustMask) == this.thrustMask;
	}
	,isSwingingOnly: function(mask) {
		return mask == this.swingMask;
	}
	,isThrustingOnly: function(mask) {
		return mask == this.thrustMask;
	}
	,isThrusting: function(targetZone) {
		return targetZone >= this.thrustStartIndex;
	}
	,bake: function() {
		var obj = { };
		var _g1 = 0;
		var _g = this.hitLocations.length;
		while(_g1 < _g) {
			var i = _g1++;
			obj[this.hitLocations[i].id] = i;
		}
		this.hitLocationHash = obj;
		this.thrustMask = 0;
		var _g11 = this.thrustStartIndex;
		var _g2 = this.targetZones.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.thrustMask |= 1 << i1;
		}
		this.swingMask = 0;
		var _g12 = 0;
		var _g3 = this.thrustStartIndex;
		while(_g12 < _g3) {
			var i2 = _g12++;
			this.swingMask |= 1 << i2;
		}
	}
	,getTargetZoneHitAreaMasks: function() {
		var masks = [];
		var _g1 = 0;
		var _g = this.targetZones.length;
		while(_g1 < _g) {
			var i = _g1++;
			var t = this.targetZones[i];
			masks.push(t.getHitAreaMask());
		}
		return masks;
	}
	,getDescLabelTargetZone: function(zoneIndex) {
		var isThrusting = zoneIndex >= this.thrustStartIndex;
		var t = this.targetZones[zoneIndex];
		return (t.description != "" ? t.description + " to" : isThrusting ? "Thrust to" : "Swing to") + " " + t.name;
	}
	,getDescLabelsTargetZoneMask: function(mask) {
		var arr = [];
		var _g1 = 0;
		var _g = this.targetZones.length;
		while(_g1 < _g) {
			var i = _g1++;
			if((1 << i & mask) != 0) {
				arr.push(this.getDescLabelTargetZone(i));
			}
		}
		return arr;
	}
	,getTitleLabelsTargetZoneMask: function(mask) {
		var arr = [];
		var _g1 = 0;
		var _g = this.targetZones.length;
		while(_g1 < _g) {
			var i = _g1++;
			var t = this.targetZones[i];
			if((1 << i & mask) != 0) {
				arr.push(t.name + (t.description != "" ? " (" + t.description + ")" : ""));
			}
		}
		return arr;
	}
	,describeTargetZones: function(mask) {
		var str = "";
		var swinging = mask & this.swingMask;
		var thrusting = mask & this.thrustMask;
		if(swinging == this.swingMask && thrusting == this.thrustMask) {
			return "all swinging and thrusting attacks";
		}
		if(swinging != 0) {
			if(swinging == this.swingMask) {
				str += "all Swinging attacks";
			} else {
				str += "Swinging attacks to the " + this.getTitleLabelsTargetZoneMask(swinging).join(", ");
			}
		}
		if(thrusting != 0) {
			if(swinging != 0) {
				str += " and ";
			}
			if(thrusting == this.thrustMask) {
				str += "all Thrusting attacks";
			} else {
				str += "Thrusting attacks to the " + this.getTitleLabelsTargetZoneMask(thrusting).join(", ");
			}
		}
		return str;
	}
	,getLabelsHitLocationMask: function(mask) {
		var arr = [];
		var _g1 = 0;
		var _g = this.hitLocations.length;
		while(_g1 < _g) {
			var i = _g1++;
			if((1 << i & mask) != 0) {
				arr.push(this.hitLocations[i].name);
			}
		}
		return arr;
	}
	,pushHitLocationNamesToStrArrByMask: function(arr,mask) {
		var _g1 = 0;
		var _g = this.hitLocations.length;
		while(_g1 < _g) {
			var i = _g1++;
			if((mask & 1 << i) != 0) {
				arr.push(this.hitLocations[i].name);
			}
		}
	}
	,pushArmorCoverageLabelsTo: function(coverage,arr) {
		var _g = 0;
		var _g1 = Reflect.fields(this.hitLocationHash);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var h = this.hitLocations[this.hitLocationHash[f]];
			var f1 = coverage[f];
			arr.push(h.name + ((f1 & 1) != 0 ? "ϕ" : "") + ((f1 & 2) != 0 ? "*" : ""));
		}
	}
	,getHitLocationLabelFromId: function(id) {
		var i = this.hitLocationHash[id];
		if(i != null) {
			return this.hitLocations[i].name;
		}
		return null;
	}
	,getHitLocationById: function(id) {
		var i = this.hitLocationHash[id];
		if(i != null) {
			return this.hitLocations[i];
		}
		return null;
	}
	,gotSideWithId: function(locationId) {
		var hitLoc = this.getHitLocationById(locationId);
		if(hitLoc != null) {
			return hitLoc.twoSided;
		} else {
			return false;
		}
	}
	,__class__: troshx_sos_core_BodyChar
};
var troshx_sos_core_IBodyHitZones = function() { };
$hxClasses["troshx.sos.core.IBodyHitZones"] = troshx_sos_core_IBodyHitZones;
troshx_sos_core_IBodyHitZones.__name__ = ["troshx","sos","core","IBodyHitZones"];
var troshx_sos_core_Humanoid = function() { };
$hxClasses["troshx.sos.core.Humanoid"] = troshx_sos_core_Humanoid;
troshx_sos_core_Humanoid.__name__ = ["troshx","sos","core","Humanoid"];
troshx_sos_core_Humanoid.getNewTargetZones = function() {
	return [troshx_sos_core_TargetZone.create("Head",[],[4,2,1,0],0,"Downward Swing"),troshx_sos_core_TargetZone.create("Head",[],[5,3,2,1],0,"Upward Swing"),troshx_sos_core_TargetZone.create("Neck",[],[4,3,2,1]),troshx_sos_core_TargetZone.create("Torso",[],[7,6,5]),troshx_sos_core_TargetZone.create("Upper Arm",[],[15,14,4]),troshx_sos_core_TargetZone.create("Lower Arm",[],[17,16,15]),troshx_sos_core_TargetZone.create("Upper Leg",[],[11,10,8]),troshx_sos_core_TargetZone.create("Lower Leg",[],[13,12,11]),troshx_sos_core_TargetZone.create("Groin",[],[10,9,7]),troshx_sos_core_TargetZone.create("Head",[],[3,1,0]),troshx_sos_core_TargetZone.create("Neck",[],[5,3,1]),troshx_sos_core_TargetZone.create("Chest",[],[7,5,4,3]),troshx_sos_core_TargetZone.create("Belly",[],[9,8,6,7]),troshx_sos_core_TargetZone.create("Upper Arm",[],[15,14,4]),troshx_sos_core_TargetZone.create("Lower Arm",[],[17,16,15]),troshx_sos_core_TargetZone.create("Groin",[],[10,9,7]),troshx_sos_core_TargetZone.create("Upper Leg",[],[11,10,8]),troshx_sos_core_TargetZone.create("Lower Leg",[],[13,12,11])];
};
troshx_sos_core_Humanoid.getNewHitLocations = function() {
	return [new troshx_sos_core_HitLocation("Upper Head","upperHead"),new troshx_sos_core_HitLocation("Face","face"),new troshx_sos_core_HitLocation("Lower Head","lowerHead"),new troshx_sos_core_HitLocation("Neck","neck"),new troshx_sos_core_HitLocation("Shoulder","shoulder",true),new troshx_sos_core_HitLocation("Chest","chest"),new troshx_sos_core_HitLocation("Side","side",true),new troshx_sos_core_HitLocation("Belly","belly"),new troshx_sos_core_HitLocation("Hip","hip",true),new troshx_sos_core_HitLocation("Groin","groin"),new troshx_sos_core_HitLocation("Thigh","thigh",true),new troshx_sos_core_HitLocation("Knee","knee",true),new troshx_sos_core_HitLocation("Shin","shin",true),new troshx_sos_core_HitLocation("Foot","foot",true),new troshx_sos_core_HitLocation("Upper Arm","upperArm",true),new troshx_sos_core_HitLocation("Elbow","elbow",true),new troshx_sos_core_HitLocation("Forearm","forearm",true),new troshx_sos_core_HitLocation("Hand","hand",true),new troshx_sos_core_HitLocation("Upper Back","upperBack"),new troshx_sos_core_HitLocation("Lower Back","lowerBack")];
};
var troshx_sos_core_BurdinadinArmory = function() { };
$hxClasses["troshx.sos.core.BurdinadinArmory"] = troshx_sos_core_BurdinadinArmory;
troshx_sos_core_BurdinadinArmory.__name__ = ["troshx","sos","core","BurdinadinArmory"];
var troshx_sos_core_BurdinadinArmor = function() {
};
$hxClasses["troshx.sos.core.BurdinadinArmor"] = troshx_sos_core_BurdinadinArmor;
troshx_sos_core_BurdinadinArmor.__name__ = ["troshx","sos","core","BurdinadinArmor"];
troshx_sos_core_BurdinadinArmor.prototype = {
	__class__: troshx_sos_core_BurdinadinArmor
};
var troshx_sos_core_BurdinadinWeapon = function() {
};
$hxClasses["troshx.sos.core.BurdinadinWeapon"] = troshx_sos_core_BurdinadinWeapon;
troshx_sos_core_BurdinadinWeapon.__name__ = ["troshx","sos","core","BurdinadinWeapon"];
troshx_sos_core_BurdinadinWeapon.prototype = {
	__class__: troshx_sos_core_BurdinadinWeapon
};
var troshx_sos_core_Crossbow = function() {
	this.spanningTools = 0;
	this.span = 0;
};
$hxClasses["troshx.sos.core.Crossbow"] = troshx_sos_core_Crossbow;
troshx_sos_core_Crossbow.__name__ = ["troshx","sos","core","Crossbow"];
troshx_sos_core_Crossbow.prototype = {
	getSpanningToolsStrArr: function() {
		var arr = troshx_sos_core_Item.getLabelsOfArray(troshx_sos_core_SpanningTool.getDefaultList(),this.spanningTools);
		return arr;
	}
	,addAmmoTagsToStrArr: function(arr) {
		if(this.span != 0) {
			arr.push("Span " + (this.span >= 0 ? "+" : "") + this.span);
		}
	}
	,__class__: troshx_sos_core_Crossbow
};
var troshx_sos_core_SpanningTool = function(name,spanBonus,storeSpan,id) {
	if(id == null) {
		id = "";
	}
	if(storeSpan == null) {
		storeSpan = false;
	}
	if(spanBonus == null) {
		spanBonus = 0;
	}
	if(name == null) {
		name = "";
	}
	troshx_sos_core_Item.call(this,id,name);
	this.spanBonus = spanBonus;
	this.storeSpan = storeSpan;
};
$hxClasses["troshx.sos.core.SpanningTool"] = troshx_sos_core_SpanningTool;
troshx_sos_core_SpanningTool.__name__ = ["troshx","sos","core","SpanningTool"];
troshx_sos_core_SpanningTool.getDefaultList = function() {
	if(troshx_sos_core_SpanningTool.LIST != null) {
		return troshx_sos_core_SpanningTool.LIST;
	} else {
		return troshx_sos_core_SpanningTool.LIST = troshx_sos_core_SpanningTool.getNewDefaultList();
	}
};
troshx_sos_core_SpanningTool.getNewDefaultList = function() {
	var a = [];
	a[0] = new troshx_sos_core_SpanningTool("Hand",0,false,"").setWeightCost(0,0,0);
	a[1] = new troshx_sos_core_SpanningTool("Lever",2,false,"").setWeightCost(0,5,0);
	a[2] = new troshx_sos_core_SpanningTool("Screw",0,true,"").setWeightCost(0,1,1);
	a[3] = new troshx_sos_core_SpanningTool("Stirrup",5,false,"").setWeightCost(1,5,0);
	a[4] = new troshx_sos_core_SpanningTool("Windlass",4,true,"").setWeightCost(1,2,1);
	a[5] = new troshx_sos_core_SpanningTool("Winch",6,true,"").setWeightCost(2,3,1);
	a[6] = new troshx_sos_core_SpanningTool("Crank",3,true,"").setWeightCost(0,1,1);
	return a;
};
troshx_sos_core_SpanningTool.__super__ = troshx_sos_core_Item;
troshx_sos_core_SpanningTool.prototype = $extend(troshx_sos_core_Item.prototype,{
	__class__: troshx_sos_core_SpanningTool
});
var troshx_sos_core_DamageType = function() {
};
$hxClasses["troshx.sos.core.DamageType"] = troshx_sos_core_DamageType;
troshx_sos_core_DamageType.__name__ = ["troshx","sos","core","DamageType"];
troshx_sos_core_DamageType.isMelee = function(type) {
	return type < 4;
};
troshx_sos_core_DamageType.getNewFlagVarNames = function() {
	var arr = [];
	arr.push("c");
	arr.push("p");
	arr.push("b");
	arr.push("u");
	arr.push("fl");
	arr.push("br");
	arr.push("el");
	arr.push("cl");
	return arr;
};
troshx_sos_core_DamageType.getFlagVarNames = function() {
	if(troshx_sos_core_DamageType.FLAG_VAR_NAMES != null) {
		return troshx_sos_core_DamageType.FLAG_VAR_NAMES;
	} else {
		return troshx_sos_core_DamageType.FLAG_VAR_NAMES = troshx_sos_core_DamageType.getNewFlagVarNames();
	}
};
troshx_sos_core_DamageType.getNewFlagLabels = function() {
	var arr = [];
	arr.push("Cutting");
	arr.push("Piercing");
	arr.push("Bludgeoning");
	arr.push("Unarmed");
	arr.push("Falling");
	arr.push("Burn");
	arr.push("Electrical");
	arr.push("Cold");
	return arr;
};
troshx_sos_core_DamageType.getFlagLabels = function() {
	if(troshx_sos_core_DamageType.FLAG_LABELS != null) {
		return troshx_sos_core_DamageType.FLAG_LABELS;
	} else {
		return troshx_sos_core_DamageType.FLAG_LABELS = troshx_sos_core_DamageType.getNewFlagLabels();
	}
};
troshx_sos_core_DamageType.prototype = {
	__class__: troshx_sos_core_DamageType
};
var troshx_sos_core_Firearm = function() {
	this.firingMechanism = null;
	this.highCaliber = 0;
	this.revolver = 0;
	this.magazine = 0;
	this.multishot = 0;
	this["double"] = false;
	this.load = 0;
	this.ammunitionsCustom = null;
	this.ammunitions = 0;
};
$hxClasses["troshx.sos.core.Firearm"] = troshx_sos_core_Firearm;
troshx_sos_core_Firearm.__name__ = ["troshx","sos","core","Firearm"];
troshx_sos_core_Firearm.prototype = {
	addTagsToStrArr: function(arr,addSign,forAmmo) {
		if(this["double"]) {
			arr.push("Double");
		}
		if(this.multishot != 0) {
			arr.push("Multishot " + (addSign ? this.multishot >= 0 ? "+" : "" : "") + this.multishot);
		}
		if(this.magazine != 0) {
			arr.push("Magazine " + (addSign ? this.magazine >= 0 ? "+" : "" : "") + this.magazine);
		}
		if(this.revolver != 0) {
			arr.push("Revolver " + (addSign ? this.revolver >= 0 ? "+" : "" : "") + this.revolver);
		}
		if(this.revolver != 0) {
			arr.push("High Caliber " + (addSign ? this.highCaliber >= 0 ? "+" : "" : "") + this.highCaliber);
		}
		if(forAmmo && this.load != 0) {
			arr.push("Load " + (addSign ? this.load >= 0 ? "+" : "" : "") + this.load);
		}
	}
	,getAmmunitionsStrArr: function() {
		var arr = troshx_sos_core_Item.getLabelsOfArray(troshx_sos_core_Ammunition.getDefaultList(),this.ammunitions);
		if(this.ammunitionsCustom != null) {
			arr = this.ammunitionsCustom.concat(arr);
		}
		return arr;
	}
	,__class__: troshx_sos_core_Firearm
};
var troshx_sos_core_FiringMechanism = function(name,loadingMechanisms,id) {
	if(id == null) {
		id = "";
	}
	if(loadingMechanisms == null) {
		loadingMechanisms = 0;
	}
	if(name == null) {
		name = "";
	}
	this.loadingMechanismsCustom = null;
	troshx_sos_core_Item.call(this,id,name);
	this.loadingMechanisms = loadingMechanisms;
};
$hxClasses["troshx.sos.core.FiringMechanism"] = troshx_sos_core_FiringMechanism;
troshx_sos_core_FiringMechanism.__name__ = ["troshx","sos","core","FiringMechanism"];
troshx_sos_core_FiringMechanism.getDefaultList = function() {
	if(troshx_sos_core_FiringMechanism.LIST != null) {
		return troshx_sos_core_FiringMechanism.LIST;
	} else {
		return troshx_sos_core_FiringMechanism.LIST = troshx_sos_core_FiringMechanism.getNewDefaultList();
	}
};
troshx_sos_core_FiringMechanism.getNewDefaultList = function() {
	var a = [];
	var f = new troshx_sos_core_FiringMechanism("Caplock",5).setWeightCost(0,12,2);
	a[0] = f;
	f = new troshx_sos_core_FiringMechanism("Firelock",1);
	a[1] = f;
	f = new troshx_sos_core_FiringMechanism("Flintlock",5).setWeightCost(0,3,1);
	a[2] = f;
	f = new troshx_sos_core_FiringMechanism("Matchlock",5).setWeightCost(0,6,0);
	a[3] = f;
	f = new troshx_sos_core_FiringMechanism("Needlefire",10).setWeightCost(0,5,2);
	a[4] = f;
	f = new troshx_sos_core_FiringMechanism("Snaplock",5).setWeightCost(0,2,1);
	a[5] = f;
	f = new troshx_sos_core_FiringMechanism("Wheelock",5).setWeightCost(0,8,1);
	a[6] = f;
	return a;
};
troshx_sos_core_FiringMechanism.__super__ = troshx_sos_core_Item;
troshx_sos_core_FiringMechanism.prototype = $extend(troshx_sos_core_Item.prototype,{
	__class__: troshx_sos_core_FiringMechanism
});
var troshx_sos_core_Ammunition = function(name,catchChance,id) {
	if(id == null) {
		id = "";
	}
	if(catchChance == null) {
		catchChance = 0;
	}
	if(name == null) {
		name = "";
	}
	troshx_sos_core_Weapon.call(this,id,name);
	this.stuckChance = catchChance;
	this.ranged = true;
	this.isAmmo = true;
	this.firearm = new troshx_sos_core_Firearm();
	this.profs = 8;
};
$hxClasses["troshx.sos.core.Ammunition"] = troshx_sos_core_Ammunition;
troshx_sos_core_Ammunition.__name__ = ["troshx","sos","core","Ammunition"];
troshx_sos_core_Ammunition.getDefaultList = function() {
	if(troshx_sos_core_Ammunition.LIST != null) {
		return troshx_sos_core_Ammunition.LIST;
	} else {
		return troshx_sos_core_Ammunition.LIST = troshx_sos_core_Ammunition.getNewDefaultList();
	}
};
troshx_sos_core_Ammunition.getNewDefaultList = function() {
	var a = [];
	var f = new troshx_sos_core_Ammunition("Ball",9).setWeightCost(0,1,0).setUnit(10);
	a[0] = f;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.AP = 4;
	f = new troshx_sos_core_Ammunition("Buck and Ball",9).setWeightCost(0,1,0).setUnit(10);
	a[1] = f;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.scatter = 3;
	f.missileSpecial.scatter_y = 6;
	f.missileSpecial.AP = 2;
	f.missileFlags = 8;
	f = new troshx_sos_core_Ammunition("Heavy Shot",9).setWeightCost(0,3,0).setUnit(10);
	a[2] = f;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.scatter = 8;
	f.missileSpecial.scatter_y = 6;
	f = new troshx_sos_core_Ammunition("Rifle Ball",8).setWeightCost(0,6,0).setUnit(10);
	a[3] = f;
	f.atnM = -1;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.AP = 4;
	f.firearm = new troshx_sos_core_Firearm();
	f.firearm.load = -10;
	f = new troshx_sos_core_Ammunition("Shot",9).setWeightCost(0,1,0).setUnit(10);
	a[4] = f;
	f.missileSpecial = new troshx_sos_core_MissileSpecial();
	f.missileSpecial.scatter = 6;
	f.missileSpecial.scatter_y = 6;
	f = new troshx_sos_core_Ammunition("Spike",1).setWeightCost(0,1,0);
	a[5] = f;
	f.damageM = 2;
	f.atnM = -1;
	f.range = 3;
	f.firearm = new troshx_sos_core_Firearm();
	f.firearm.load = 10;
	return a;
};
troshx_sos_core_Ammunition.__super__ = troshx_sos_core_Weapon;
troshx_sos_core_Ammunition.prototype = $extend(troshx_sos_core_Weapon.prototype,{
	__class__: troshx_sos_core_Ammunition
});
var troshx_sos_core_LoadingMechanism = function(name,loadBonus,ammunitionCostModifier) {
	if(ammunitionCostModifier == null) {
		ammunitionCostModifier = 100;
	}
	if(loadBonus == null) {
		loadBonus = 0;
	}
	if(name == null) {
		name = "";
	}
	this.name = name;
	this.loadBonus = loadBonus;
	this.ammunitionCostModifier = ammunitionCostModifier;
};
$hxClasses["troshx.sos.core.LoadingMechanism"] = troshx_sos_core_LoadingMechanism;
troshx_sos_core_LoadingMechanism.__name__ = ["troshx","sos","core","LoadingMechanism"];
troshx_sos_core_LoadingMechanism.getDefaultList = function() {
	if(troshx_sos_core_LoadingMechanism.LIST != null) {
		return troshx_sos_core_LoadingMechanism.LIST;
	} else {
		return troshx_sos_core_LoadingMechanism.LIST = troshx_sos_core_LoadingMechanism.getNewDefaultList();
	}
};
troshx_sos_core_LoadingMechanism.getNewDefaultList = function() {
	var a = [];
	var f = new troshx_sos_core_LoadingMechanism("Manual",0,100);
	a[0] = f;
	f = new troshx_sos_core_LoadingMechanism("Brass Catridge",10,1000);
	a[1] = f;
	f = new troshx_sos_core_LoadingMechanism("Paper Catridge",3,200);
	a[2] = f;
	f = new troshx_sos_core_LoadingMechanism("Paper Mache Catridge",5,300);
	a[3] = f;
	return a;
};
troshx_sos_core_LoadingMechanism.prototype = {
	get_ammunitionCostRatio: function() {
		return this.ammunitionCostModifier / 100;
	}
	,__class__: troshx_sos_core_LoadingMechanism
};
var troshx_sos_core_HitLocation = function(name,id,twoSided) {
	if(twoSided == null) {
		twoSided = false;
	}
	this.name = name;
	this.id = id;
	this.twoSided = twoSided;
};
$hxClasses["troshx.sos.core.HitLocation"] = troshx_sos_core_HitLocation;
troshx_sos_core_HitLocation.__name__ = ["troshx","sos","core","HitLocation"];
troshx_sos_core_HitLocation.prototype = {
	get_uid: function() {
		return this.id;
	}
	,__class__: troshx_sos_core_HitLocation
};
var troshx_sos_core_Money = function() {
	this.cp = 0;
	this.sp = 0;
	this.gp = 0;
};
$hxClasses["troshx.sos.core.Money"] = troshx_sos_core_Money;
troshx_sos_core_Money.__name__ = ["troshx","sos","core","Money"];
troshx_sos_core_Money.create = function(gp,sp,cp) {
	var m = new troshx_sos_core_Money();
	m.gp = gp;
	m.sp = sp;
	m.cp = cp;
	return m;
};
troshx_sos_core_Money.getLabelWith = function(gp,sp,cp) {
	return (gp != 0 ? gp + " gp" : "") + (sp != 0 ? (gp != 0 ? " " : "") + sp + " sp" : "") + (cp != 0 ? (sp != 0 || gp != 0 ? " " : "") + cp + " cp" : "");
};
troshx_sos_core_Money.prototype = {
	matchWith: function(other) {
		this.gp = other.gp;
		this.sp = other.sp;
		this.cp = other.cp;
		return this;
	}
	,matchWithValues: function(g,s,c) {
		this.gp = g;
		this.sp = s;
		this.cp = c;
		return this;
	}
	,isNegative: function() {
		return this.cp < 0;
	}
	,changeToHighest: function() {
		var q;
		if(this.cp > 12) {
			q = this.cp * 0.083333333333333329 | 0;
			this.sp += q;
			this.cp -= q * 12;
		}
		if(this.sp > 20) {
			q = this.sp * 0.05 | 0;
			this.gp += q;
			this.sp -= q * 20;
		}
		return this;
	}
	,getLabel: function() {
		return (this.gp != 0 ? this.gp + " gp" : "") + (this.sp != 0 ? (this.gp != 0 ? " " : "") + this.sp + " sp" : "") + (this.cp != 0 ? (this.sp != 0 || this.gp != 0 ? " " : "") + this.cp + " cp" : "");
	}
	,tempCalc: function() {
		return troshx_sos_core_Money.TEMP.matchWith(this);
	}
	,resetTo: function(money) {
		money.matchWith(this);
		return money;
	}
	,addValues: function(g,s,c) {
		this.gp += g;
		this.sp += s;
		this.cp += c;
		return this;
	}
	,getCPValue: function() {
		return this.gp * 240 + this.sp * 12 + this.cp;
	}
	,getGoldValue: function() {
		return this.gp + this.sp * 0.05 + this.cp * 0.0041666666666666666;
	}
	,getSilverValue: function() {
		return this.gp * 20 + this.sp + this.cp * 0.083333333333333329;
	}
	,convertAllToCP: function() {
		var c = this.gp * 240 + this.sp * 12 + this.cp;
		this.gp = 0;
		this.sp = 0;
		this.cp = c;
		return this;
	}
	,addCP: function(c) {
		this.cp += c;
		return this;
	}
	,subtractCP: function(c) {
		this.cp -= c;
		if(this.cp < 0) {
			if(this.sp > 0) {
				this.cp += this.sp * 12;
				this.sp = 0;
			}
			if(this.cp < 0 && this.gp > 0) {
				this.cp += this.gp * 240;
				this.gp = 0;
			}
		}
		return this;
	}
	,addAgainst: function(against) {
		this.gp += against.gp;
		this.sp += against.sp;
		this.cp += against.cp;
		return this;
	}
	,subtractValues: function(g,s,c) {
		this.gp -= g;
		if(this.gp < 0) {
			this.sp += this.gp * 20;
			this.gp = 0;
		}
		this.sp -= s;
		if(this.sp < 0) {
			this.cp += this.sp * 12;
			this.sp = 0;
		}
		this.cp -= c;
		if(this.cp < 0) {
			if(this.sp > 0) {
				this.cp += this.sp * 12;
				this.sp = 0;
			}
			if(this.cp < 0 && this.gp > 0) {
				this.cp += this.gp * 240;
				this.gp = 0;
			}
		}
		return this;
	}
	,naiveChangeNegativeCP: function() {
		if(this.cp < 0) {
			if(this.sp > 0) {
				this.cp += this.sp * 12;
				this.sp = 0;
			}
			if(this.cp < 0 && this.gp > 0) {
				this.cp += this.gp * 240;
				this.gp = 0;
			}
		}
	}
	,subtractAgainst: function(against) {
		this.gp -= against.gp;
		if(this.gp < 0) {
			this.sp += this.gp * 20;
			this.gp = 0;
		}
		this.sp -= against.sp;
		if(this.sp < 0) {
			this.cp += this.sp * 12;
			this.sp = 0;
		}
		this.cp -= against.cp;
		if(this.cp < 0) {
			if(this.sp > 0) {
				this.cp += this.sp * 12;
				this.sp = 0;
			}
			if(this.cp < 0 && this.gp > 0) {
				this.cp += this.gp * 240;
				this.gp = 0;
			}
		}
		return this;
	}
	,_resetToZero: function() {
		this.sp = 0;
		this.cp = 0;
		this.gp = 0;
	}
	,resetToZero: function() {
		this.sp = 0;
		this.cp = 0;
		this.gp = 0;
		return this;
	}
	,__class__: troshx_sos_core_Money
};
var troshx_sos_core_Inventory = function() {
	this.version = 2;
	this.shieldPosition = 0;
	this.weapons = [];
	this.shields = [];
	this.equipedNonMeleeItems = [];
	this.wornArmor = [];
	this.dropPack = false;
	this.packed = new troshx_ds_IDMatchArray();
	this.dropped = new troshx_ds_IDMatchArray();
};
$hxClasses["troshx.sos.core.Inventory"] = troshx_sos_core_Inventory;
troshx_sos_core_Inventory.__name__ = ["troshx","sos","core","Inventory"];
troshx_sos_core_Inventory.getUnheldLabelsArray = function() {
	var arr = [];
	arr.push("");
	arr.push("Sheath/Holster");
	arr.push("Strapped-Arm");
	arr.push("Strapped-Shoulder");
	arr.push("Back");
	arr.push("Concealed");
	arr.push("DISABLED");
	return arr;
};
troshx_sos_core_Inventory.getReachBetween = function(w,w2) {
	return troshx_util_LibUtil.maxI(w != null ? w.reach : 1,w2 != null ? w2.reach : 1);
};
troshx_sos_core_Inventory.getReadyAssignOf = function(item) {
	var weaponAssign;
	var shieldAssign;
	var itemAssign;
	var armorAssign;
	if(js_Boot.__instanceof(item,troshx_sos_core_Weapon)) {
		weaponAssign = { weapon : item, held : 0, unheld : 0, unheldRemark : "", key : troshx_sos_core_Inventory.UID_COUNT++, attached : false};
		return weaponAssign;
	} else if(js_Boot.__instanceof(item,troshx_sos_core_Shield)) {
		shieldAssign = { shield : item, attached : false, held : 0, unheld : 0, unheldRemark : "", key : troshx_sos_core_Inventory.UID_COUNT++};
		return shieldAssign;
	} else if(js_Boot.__instanceof(item,troshx_sos_core_Armor)) {
		armorAssign = { armor : item, attached : false, held : 0, unheld : 0, unheldRemark : "", key : troshx_sos_core_Inventory.UID_COUNT++};
		return armorAssign;
	} else {
		itemAssign = { item : item, attached : false, held : 0, unheld : 0, unheldRemark : "", key : troshx_sos_core_Inventory.UID_COUNT++};
		return itemAssign;
	}
};
troshx_sos_core_Inventory.getEmptyReadyAssign = function(type) {
	var weaponAssign;
	var shieldAssign;
	var itemAssign;
	var armorAssign;
	if(type == "weapon") {
		weaponAssign = { weapon : new troshx_sos_core_Weapon(), held : 0, unheld : 0, unheldRemark : "", key : troshx_sos_core_Inventory.UID_COUNT++, attached : false};
		return weaponAssign;
	} else if(type == "shield") {
		shieldAssign = { shield : new troshx_sos_core_Shield(), attached : false, held : 0, unheld : 0, unheldRemark : "", key : troshx_sos_core_Inventory.UID_COUNT++};
		return shieldAssign;
	} else if(type == "armor") {
		armorAssign = { armor : troshx_sos_core_Armor.createEmptyInstance(), attached : false, held : 0, unheld : 0, unheldRemark : "", key : troshx_sos_core_Inventory.UID_COUNT++};
		return armorAssign;
	} else {
		itemAssign = { item : new troshx_sos_core_Item(), attached : false, held : 0, unheld : 0, unheldRemark : "", key : troshx_sos_core_Inventory.UID_COUNT++};
		return itemAssign;
	}
};
troshx_sos_core_Inventory.prototype = {
	setNewDroppedList: function(list) {
		this.dropped = list;
	}
	,getSignaler: function() {
		if(this.signaler != null) {
			return this.signaler;
		} else {
			return this.signaler = this.createSignaler();
		}
	}
	,createSignaler: function() {
		this.signaler = new msignal_Signal1();
		return this.signaler;
	}
	,setSignaler: function(val) {
		if(this.signaler != null && val != this.signaler) {
			this.signaler.removeAll();
		}
		this.signaler = val;
	}
	,dispatchSignal: function(signal) {
		(this.signaler != null ? this.signaler : this.signaler = this.createSignaler()).dispatch(signal);
	}
	,findOffHandItem: function() {
		var _g1 = 0;
		var _g = this.weapons.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.weapons[i].held == 2) {
				return this.weapons[i].weapon;
			}
		}
		var _g11 = 0;
		var _g2 = this.shields.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.shields[i1].held == 2) {
				return this.shields[i1].shield;
			}
		}
		var _g12 = 0;
		var _g3 = this.equipedNonMeleeItems.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			if(this.equipedNonMeleeItems[i2].held == 2) {
				return this.equipedNonMeleeItems[i2].item;
			}
		}
		return null;
	}
	,findMasterHandItem: function() {
		var _g1 = 0;
		var _g = this.weapons.length;
		while(_g1 < _g) {
			var i = _g1++;
			if((this.weapons[i].held & 1) != 0) {
				return this.weapons[i].weapon;
			}
		}
		var _g11 = 0;
		var _g2 = this.shields.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if((this.shields[i1].held & 1) != 0) {
				return this.shields[i1].shield;
			}
		}
		var _g12 = 0;
		var _g3 = this.equipedNonMeleeItems.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			if((this.equipedNonMeleeItems[i2].held & 1) != 0) {
				return this.equipedNonMeleeItems[i2].item;
			}
		}
		return null;
	}
	,getOffhandWeapon: function() {
		var _g1 = 0;
		var _g = this.weapons.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.weapons[i].held == 2) {
				return this.weapons[i].weapon;
			}
		}
		return null;
	}
	,getMasterWeapon: function() {
		var _g1 = 0;
		var _g = this.weapons.length;
		while(_g1 < _g) {
			var i = _g1++;
			if((this.weapons[i].held & 1) != 0) {
				return this.weapons[i].weapon;
			}
		}
		return null;
	}
	,getReach: function() {
		var w = this.getMasterWeapon();
		var w2 = this.getOffhandWeapon();
		return troshx_util_LibUtil.maxI(w != null ? w.reach : 1,w2 != null ? w2.reach : 1);
	}
	,findHeldShield: function() {
		var _g1 = 0;
		var _g = this.shields.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.shields[i].held == 2) {
				return this.shields[i].shield;
			}
		}
		var _g11 = 0;
		var _g2 = this.shields.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.shields[i1].held != 0) {
				return this.shields[i1].shield;
			}
		}
		return null;
	}
	,getWeildableWeaponsTypeFiltered: function(ranged,profs) {
		var arr = [];
		var _g1 = 0;
		var _g = this.weapons.length;
		while(_g1 < _g) {
			var i = _g1++;
			var wp = this.weapons[i];
			var w = wp.weapon;
			var c = w.matchesTypes(ranged,profs);
			if(!(w.isAmmo && w.ranged) && c) {
				arr.push(wp);
			}
		}
		return arr;
	}
	,get_ammoFiltered: function() {
		var arr = [];
		var _g1 = 0;
		var _g = this.weapons.length;
		while(_g1 < _g) {
			var i = _g1++;
			var wp = this.weapons[i];
			var w = this.weapons[i].weapon;
			if(w.isAmmo && w.ranged) {
				arr.push(wp);
			}
		}
		return arr;
	}
	,compareItemsEq: function(a,b) {
		var $as = new haxe_Serializer();
		var bs = new haxe_Serializer();
		$as.serialize(a);
		bs.serialize(b);
		return $as.toString() == bs.toString();
	}
	,_shiftItem: function(item,preferedUnheld,qty,attachments) {
		if(qty == null) {
			qty = 1;
		}
		if(qty <= 0) {
			qty = 1;
		}
		if(preferedUnheld > 0) {
			if(preferedUnheld != 4) {
				var q;
				var m;
				if(preferedUnheld == 1) {
					q = new troshx_sos_core_ItemQty(item,qty);
					q.attachments = attachments;
					var tmp;
					var tmp1;
					m = this.packed.getMatchingItem(q);
					if(m != null) {
						tmp1 = m.item != q.item;
					} else {
						tmp1 = false;
					}
					if(tmp1) {
						tmp = !this.compareItemsEq(m.item.normalize(),q.item.normalize());
					} else {
						tmp = false;
					}
					if(tmp) {
						return q;
					}
					this.packed.add(q);
					return null;
				} else if(preferedUnheld == 2) {
					q = new troshx_sos_core_ItemQty(item,qty);
					q.attachments = attachments;
					var tmp2;
					var tmp3;
					m = this.dropped.getMatchingItem(q);
					if(m != null) {
						tmp3 = m.item != q.item;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						tmp2 = !this.compareItemsEq(m.item.normalize(),q.item.normalize());
					} else {
						tmp2 = false;
					}
					if(tmp2) {
						return q;
					}
					this.dropped.add(q);
					return null;
				} else {
					console.log("Unaccounted prefered unheld case: " + preferedUnheld);
					return null;
				}
			}
			return null;
		} else if(preferedUnheld < 0) {
			var delItem = new troshx_sos_core_ItemQty(item);
			if(preferedUnheld == -2) {
				this.dropped.splicedAgainst(delItem);
			} else {
				this.packed.splicedAgainst(delItem);
			}
			return null;
		}
		return null;
	}
	,packItemEntryFromGround: function(itemQ,qty) {
		if(qty == null) {
			qty = 0;
		}
		if(qty == 0) {
			qty = itemQ.qty;
		} else {
			itemQ = itemQ.getQtyCopy(qty);
		}
		var s = this._shiftItem(itemQ.item,1,qty);
		if(s != null) {
			return s;
		}
		this.dropped.splicedAgainst(itemQ);
		this.dispatchSignal(troshx_sos_core_InventorySignal.PackItem);
		return null;
	}
	,dropItemEntryFromPack: function(itemQ,qty) {
		if(qty == null) {
			qty = 0;
		}
		if(qty == 0) {
			qty = itemQ.qty;
		} else {
			itemQ = itemQ.getQtyCopy(qty);
		}
		var s = this._shiftItem(itemQ.item,2,qty);
		if(s != null) {
			return s;
		}
		this.packed.splicedAgainst(itemQ);
		this.dispatchSignal(troshx_sos_core_InventorySignal.DropItem);
		return null;
	}
	,equipItemEntryFromGround: function(itemQ,remark) {
		if(remark == null) {
			remark = "";
		}
		this.dropped.splicedAgainst(new troshx_sos_core_ItemQty(itemQ.item,1));
		this.dispatchSignal(troshx_sos_core_InventorySignal.EquipItem);
		return this.equipItem(itemQ.item,remark);
	}
	,equipItemEntryFromPack: function(itemQ,remark) {
		if(remark == null) {
			remark = "";
		}
		this.packed.splicedAgainst(new troshx_sos_core_ItemQty(itemQ.item,1));
		this.dispatchSignal(troshx_sos_core_InventorySignal.EquipItem);
		return this.equipItem(itemQ.item,remark);
	}
	,holdEquiped: function(alreadyEquiped,held) {
		this._unholdAllItems(held,Object.prototype.hasOwnProperty.call(alreadyEquiped,"shield"));
		alreadyEquiped.held = held;
		this.dispatchSignal(troshx_sos_core_InventorySignal.HoldItem);
	}
	,getPerceptionPenalty: function() {
		var val = 0;
		var _g1 = 0;
		var _g = this.wornArmor.length;
		while(_g1 < _g) {
			var i = _g1++;
			val += this.wornArmor[i].armor.pp;
		}
		return val;
	}
	,calculateTotalWeight: function(forceIncludePacked,forceIncludeDropped) {
		if(forceIncludeDropped == null) {
			forceIncludeDropped = false;
		}
		if(forceIncludePacked == null) {
			forceIncludePacked = false;
		}
		var w = 0;
		if(forceIncludeDropped) {
			var _g1 = 0;
			var _g = this.dropped.list.length;
			while(_g1 < _g) {
				var i = _g1++;
				w += this.dropped.list[i].item.weight * this.dropped.list[i].qty;
			}
		}
		if(!this.dropPack || forceIncludePacked) {
			var _g11 = 0;
			var _g2 = this.packed.list.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				w += this.packed.list[i1].item.weight * this.packed.list[i1].qty;
			}
		}
		var _g12 = 0;
		var _g3 = this.wornArmor.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			w += this.wornArmor[i2].armor.weight;
		}
		var _g13 = 0;
		var _g4 = this.equipedNonMeleeItems.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			w += this.equipedNonMeleeItems[i3].item.weight;
		}
		var _g14 = 0;
		var _g5 = this.shields.length;
		while(_g14 < _g5) {
			var i4 = _g14++;
			w += this.shields[i4].shield.weight;
		}
		var _g15 = 0;
		var _g6 = this.weapons.length;
		while(_g15 < _g6) {
			var i5 = _g15++;
			w += this.weapons[i5].held == 0 ? this.weapons[i5].weapon.weight : 0;
		}
		return w;
	}
	,normalizeDroppedItems: function() {
		var _g1 = 0;
		var _g = this.dropped.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.dropped.list[i].item.normalize();
		}
	}
	,normalizeAllItems: function() {
		var _g1 = 0;
		var _g = this.dropped.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.dropped.list[i].item.normalize();
		}
		var _g11 = 0;
		var _g2 = this.packed.list.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.packed.list[i1].item.normalize();
		}
		var _g12 = 0;
		var _g3 = this.wornArmor.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			this.wornArmor[i2].armor.normalize();
		}
		var _g13 = 0;
		var _g4 = this.equipedNonMeleeItems.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			this.equipedNonMeleeItems[i3].item.normalize();
		}
		var _g14 = 0;
		var _g5 = this.shields.length;
		while(_g14 < _g5) {
			var i4 = _g14++;
			this.shields[i4].shield.normalize();
		}
		var _g15 = 0;
		var _g6 = this.weapons.length;
		while(_g15 < _g6) {
			var i5 = _g15++;
			this.weapons[i5].weapon.normalize();
		}
	}
	,calculateTotalCost: function(forceIncludeDropped) {
		if(forceIncludeDropped == null) {
			forceIncludeDropped = false;
		}
		var item;
		var qtyAssign;
		var calcCache = troshx_sos_core_Inventory.MONEY_CALC_CACHE;
		calcCache[0] = 0;
		calcCache[1] = 0;
		calcCache[2] = 0;
		if(forceIncludeDropped) {
			var _g1 = 0;
			var _g = this.dropped.list.length;
			while(_g1 < _g) {
				var i = _g1++;
				qtyAssign = this.dropped.list[i];
				calcCache[qtyAssign.item.costCurrency] += qtyAssign.item.cost * qtyAssign.qty;
			}
		}
		var _g11 = 0;
		var _g2 = this.packed.list.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			qtyAssign = this.packed.list[i1];
			calcCache[qtyAssign.item.costCurrency] += qtyAssign.item.cost * qtyAssign.qty;
		}
		var _g12 = 0;
		var _g3 = this.wornArmor.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			item = this.wornArmor[i2].armor;
			calcCache[item.costCurrency] += item.cost;
		}
		var _g13 = 0;
		var _g4 = this.equipedNonMeleeItems.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			item = this.equipedNonMeleeItems[i3].item;
			calcCache[item.costCurrency] += item.cost;
		}
		var _g14 = 0;
		var _g5 = this.shields.length;
		while(_g14 < _g5) {
			var i4 = _g14++;
			item = this.shields[i4].shield;
			calcCache[item.costCurrency] += item.cost;
		}
		var _g15 = 0;
		var _g6 = this.weapons.length;
		while(_g15 < _g6) {
			var i5 = _g15++;
			item = this.weapons[i5].weapon;
			calcCache[item.costCurrency] += item.cost;
		}
		var moneyRef = troshx_sos_core_Inventory.MONEY_REF;
		moneyRef.matchWithValues(calcCache[2],calcCache[1],calcCache[0]);
		return moneyRef.changeToHighest();
	}
	,sortBetweenAttachmentItems: function(ao,bo) {
		var a = ao.get_label().toLowerCase();
		var b = bo.get_label().toLowerCase();
		if(a < b) {
			return -1;
		}
		if(a > b) {
			return 1;
		}
		return 0;
	}
	,getAttachmentArray: function(arr,fromI,propName) {
		if(fromI < 0 || fromI + 1 >= arr.length || !arr[fromI + 1].attached) {
			return null;
		}
		var newArr = [];
		var _g1 = fromI;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			newArr.push(Reflect.field(arr[i],propName));
			if(!arr[i].attached) {
				break;
			}
		}
		newArr.sort($bind(this,this.sortBetweenAttachmentItems));
		return newArr;
	}
	,dropEquipedShield: function(alreadyEquiped,doDestroy) {
		if(doDestroy == null) {
			doDestroy = false;
		}
		var ind = this.shields.indexOf(alreadyEquiped);
		if(!doDestroy) {
			var s = this._shiftItem(alreadyEquiped.shield,2,1);
			if(s != null) {
				return s;
			}
		}
		this.shields.splice(ind,1);
		this.dispatchSignal(doDestroy ? troshx_sos_core_InventorySignal.DeleteItem : troshx_sos_core_InventorySignal.DropItem);
		return null;
	}
	,dropMiscItem: function(alreadyEquiped,doDestroy) {
		if(doDestroy == null) {
			doDestroy = false;
		}
		var ind = this.equipedNonMeleeItems.indexOf(alreadyEquiped);
		if(!doDestroy) {
			var s = this._shiftItem(alreadyEquiped.item,2,1,this.getAttachmentArray(this.equipedNonMeleeItems,ind,"item"));
			if(s != null) {
				return s;
			}
		}
		this.equipedNonMeleeItems.splice(ind,1);
		this.dispatchSignal(doDestroy ? troshx_sos_core_InventorySignal.DeleteItem : troshx_sos_core_InventorySignal.DropItem);
		return null;
	}
	,dropEquipedWeapon: function(alreadyEquiped,doDestroy) {
		if(doDestroy == null) {
			doDestroy = false;
		}
		var ind = this.weapons.indexOf(alreadyEquiped);
		if(!doDestroy) {
			var s = this._shiftItem(alreadyEquiped.weapon,2,1,this.getAttachmentArray(this.weapons,ind,"weapon"));
			if(s != null) {
				return s;
			}
		}
		this.weapons.splice(ind,1);
		this.dispatchSignal(doDestroy ? troshx_sos_core_InventorySignal.DeleteItem : troshx_sos_core_InventorySignal.DropItem);
		return null;
	}
	,dropWornArmor: function(alreadyEquiped,doDestroy) {
		if(doDestroy == null) {
			doDestroy = false;
		}
		var ind = this.wornArmor.indexOf(alreadyEquiped);
		if(!doDestroy) {
			var s = this._shiftItem(alreadyEquiped.armor,2,1,this.getAttachmentArray(this.wornArmor,ind,"armor"));
			if(s != null) {
				return s;
			}
		}
		this.wornArmor.splice(ind,1);
		this.dispatchSignal(doDestroy ? troshx_sos_core_InventorySignal.DeleteItem : troshx_sos_core_InventorySignal.DropItem);
		return null;
	}
	,packEquipedShield: function(alreadyEquiped) {
		var ind = this.shields.indexOf(alreadyEquiped);
		var s = this._shiftItem(alreadyEquiped.shield,1,1);
		if(s != null) {
			return s;
		}
		this.shields.splice(ind,1);
		this.dispatchSignal(troshx_sos_core_InventorySignal.PackItem);
		return null;
	}
	,packMiscItem: function(alreadyEquiped) {
		var ind = this.equipedNonMeleeItems.indexOf(alreadyEquiped);
		var s = this._shiftItem(alreadyEquiped.item,1,1,this.getAttachmentArray(this.equipedNonMeleeItems,ind,"item"));
		if(s != null) {
			return s;
		}
		this.equipedNonMeleeItems.splice(ind,1);
		this.dispatchSignal(troshx_sos_core_InventorySignal.PackItem);
		return null;
	}
	,packEquipedWeapon: function(alreadyEquiped) {
		var ind = this.weapons.indexOf(alreadyEquiped);
		var s = this._shiftItem(alreadyEquiped.weapon,1,1,this.getAttachmentArray(this.weapons,ind,"weapon"));
		if(s != null) {
			return s;
		}
		this.weapons.splice(ind,1);
		this.dispatchSignal(troshx_sos_core_InventorySignal.PackItem);
		return null;
	}
	,packWornArmor: function(alreadyEquiped) {
		var ind = this.wornArmor.indexOf(alreadyEquiped);
		var s = this._shiftItem(alreadyEquiped.armor,1,1,this.getAttachmentArray(this.wornArmor,ind,"armor"));
		if(s != null) {
			return s;
		}
		this.wornArmor.splice(ind,1);
		this.dispatchSignal(troshx_sos_core_InventorySignal.PackItem);
		return null;
	}
	,deletePacked: function(itemQty) {
		this.packed["delete"](itemQty);
		this.dispatchSignal(troshx_sos_core_InventorySignal.DeleteItem);
	}
	,deleteDropped: function(itemQty) {
		this.dropped["delete"](itemQty);
		this.dispatchSignal(troshx_sos_core_InventorySignal.DeleteItem);
	}
	,_unholdAllItems: function(held,isForShield) {
		if(isForShield == null) {
			isForShield = false;
		}
		var w;
		var s;
		var t;
		var _g1 = 0;
		var _g = this.weapons.length;
		while(_g1 < _g) {
			var i = _g1++;
			w = this.weapons[i];
			if((w.weapon.flags & 2) == 0) {
				w.held &= ~held;
				if((w.weapon.flags & 1) != 0 && w.held != 3) {
					w.held = 0;
				}
			}
		}
		var _g11 = 0;
		var _g2 = this.shields.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			s = this.shields[i1];
			s.held &= ~held;
			if((s.shield.flags & 2) == 0 || isForShield) {
				s.held &= ~held;
				if((s.shield.flags & 1) != 0 && s.held != 3) {
					s.held = 0;
				}
			}
		}
		var _g12 = 0;
		var _g3 = this.equipedNonMeleeItems.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			t = this.equipedNonMeleeItems[i2];
			if((t.item.flags & 2) == 0) {
				t.held &= ~held;
				if((t.item.flags & 1) != 0 && t.held != 3) {
					t.held = 0;
				}
			}
		}
	}
	,layeredWearingMaskWith: function(a,name,body) {
		var _g1 = 0;
		var _g = this.wornArmor.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ar = this.wornArmor[i].armor;
			if(ar.name == name) {
				return a.getCoverageMask(body) & ar.getCoverageMask(body);
			}
		}
		return 0;
	}
	,equipItem: function(item,unheldRemark) {
		var unheld = 0;
		var readyAssign = null;
		var weaponAssign;
		var shieldAssign;
		var itemAssign;
		var armorAssign;
		if(js_Boot.__instanceof(item,troshx_sos_core_Weapon)) {
			weaponAssign = { attached : false, key : troshx_sos_core_Inventory.UID_COUNT++, weapon : js_Boot.__instanceof(item,troshx_sos_core_Weapon) ? item : null, held : 0, unheld : 0, unheldRemark : unheldRemark};
			readyAssign = weaponAssign;
			this.weapons.push(readyAssign);
		} else if(js_Boot.__instanceof(item,troshx_sos_core_Shield)) {
			shieldAssign = { key : troshx_sos_core_Inventory.UID_COUNT++, attached : false, shield : js_Boot.__instanceof(item,troshx_sos_core_Shield) ? item : null, held : 0, unheld : 0, unheldRemark : unheldRemark};
			readyAssign = shieldAssign;
			this.shields.push(readyAssign);
		} else if(js_Boot.__instanceof(item,troshx_sos_core_Armor)) {
			armorAssign = { key : troshx_sos_core_Inventory.UID_COUNT++, attached : false, armor : js_Boot.__instanceof(item,troshx_sos_core_Armor) ? item : null, held : 0, unheld : 0, unheldRemark : unheldRemark};
			readyAssign = armorAssign;
			this.wornArmor.push(readyAssign);
		} else {
			itemAssign = { key : troshx_sos_core_Inventory.UID_COUNT++, attached : false, item : item, held : 0, unheld : 0, unheldRemark : unheldRemark};
			readyAssign = itemAssign;
			this.equipedNonMeleeItems.push(readyAssign);
		}
		return readyAssign;
	}
	,getEquipedAssignList: function(type) {
		if(type == "weapon") {
			return this.weapons;
		} else if(type == "shield") {
			return this.shields;
		} else if(type == "armor") {
			return this.wornArmor;
		} else {
			return this.equipedNonMeleeItems;
		}
	}
	,cleanupBeforeSerialize: function() {
		this.setSignaler(null);
	}
	,postSerialization: function() {
		this.postSerialize_2();
	}
	,postSerialize_2: function() {
		if(this.version == null || this.version < 2) {
			this.version = 2;
		} else {
			return false;
		}
		var _g1 = 0;
		var _g = this.weapons.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.weapons[i].weapon.burdinadin == null) {
				this.weapons[i].weapon.burdinadin = null;
			}
		}
		var _g11 = 0;
		var _g2 = this.wornArmor.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.wornArmor[i1].armor.burdinadin == null) {
				this.wornArmor[i1].armor.burdinadin = null;
			}
		}
		var armor;
		var weap;
		var _g12 = 0;
		var _g3 = this.dropped.list.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var item = this.dropped.list[i2].item;
			armor = js_Boot.__instanceof(item,troshx_sos_core_Armor) ? item : null;
			weap = js_Boot.__instanceof(item,troshx_sos_core_Weapon) ? item : null;
			if(armor != null) {
				if(armor.burdinadin == null) {
					armor.burdinadin = null;
				}
			}
			if(weap != null) {
				if(weap.burdinadin == null) {
					weap.burdinadin = null;
				}
			}
		}
		var _g13 = 0;
		var _g4 = this.packed.list.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			var item1 = this.packed.list[i3].item;
			armor = js_Boot.__instanceof(item1,troshx_sos_core_Armor) ? item1 : null;
			weap = js_Boot.__instanceof(item1,troshx_sos_core_Weapon) ? item1 : null;
			if(armor != null) {
				if(armor.burdinadin == null) {
					armor.burdinadin = null;
				}
			}
			if(weap != null) {
				if(weap.burdinadin == null) {
					weap.burdinadin = null;
				}
			}
		}
		return true;
	}
	,__class__: troshx_sos_core_Inventory
};
var troshx_sos_core_InventorySignal = $hxClasses["troshx.sos.core.InventorySignal"] = { __ename__ : ["troshx","sos","core","InventorySignal"], __constructs__ : ["DeleteItem","PackItem","DropItem","EquipItem","HoldItem"] };
troshx_sos_core_InventorySignal.DeleteItem = ["DeleteItem",0];
troshx_sos_core_InventorySignal.DeleteItem.toString = $estr;
troshx_sos_core_InventorySignal.DeleteItem.__enum__ = troshx_sos_core_InventorySignal;
troshx_sos_core_InventorySignal.PackItem = ["PackItem",1];
troshx_sos_core_InventorySignal.PackItem.toString = $estr;
troshx_sos_core_InventorySignal.PackItem.__enum__ = troshx_sos_core_InventorySignal;
troshx_sos_core_InventorySignal.DropItem = ["DropItem",2];
troshx_sos_core_InventorySignal.DropItem.toString = $estr;
troshx_sos_core_InventorySignal.DropItem.__enum__ = troshx_sos_core_InventorySignal;
troshx_sos_core_InventorySignal.EquipItem = ["EquipItem",3];
troshx_sos_core_InventorySignal.EquipItem.toString = $estr;
troshx_sos_core_InventorySignal.EquipItem.__enum__ = troshx_sos_core_InventorySignal;
troshx_sos_core_InventorySignal.HoldItem = ["HoldItem",4];
troshx_sos_core_InventorySignal.HoldItem.toString = $estr;
troshx_sos_core_InventorySignal.HoldItem.__enum__ = troshx_sos_core_InventorySignal;
var troshx_sos_core_ItemQty = function(item,qty) {
	if(qty == null) {
		qty = 1;
	}
	this.attachments = null;
	this.item = item != null ? item : new troshx_sos_core_Item();
	this.qty = qty;
};
$hxClasses["troshx.sos.core.ItemQty"] = troshx_sos_core_ItemQty;
troshx_sos_core_ItemQty.__name__ = ["troshx","sos","core","ItemQty"];
troshx_sos_core_ItemQty.__interfaces__ = [troshx_ds_IValidable,troshx_ds_IUpdateWith,troshx_core_IUid];
troshx_sos_core_ItemQty.prototype = {
	isValid: function() {
		if(this.qty > 0 && this.item != null && this.item.name != null) {
			return StringTools.trim(this.item.name) != "";
		} else {
			return false;
		}
	}
	,getQtyCopy: function(qty) {
		var qtyer = new troshx_sos_core_ItemQty(this.item,qty);
		qtyer.attachments = this.attachments;
		return qtyer;
	}
	,getAttachmentsId: function() {
		var str = "";
		var _g1 = 0;
		var _g = this.attachments.length;
		while(_g1 < _g) {
			var i = _g1++;
			str += "+" + this.attachments[i].get_uid();
		}
		return str;
	}
	,getAttachmentsLabels: function() {
		var str = "";
		var _g1 = 0;
		var _g = this.attachments.length;
		while(_g1 < _g) {
			var i = _g1++;
			str += "+" + this.attachments[i].get_label();
		}
		return str;
	}
	,updateAgainst: function(ref) {
		this.qty += ref.qty;
	}
	,spliceAgainst: function(ref) {
		this.qty -= ref.qty;
		return this.qty;
	}
	,get_uid: function() {
		return this.item.get_uid() + (this.attachments != null ? this.getAttachmentsId() : "");
	}
	,get_label: function() {
		return this.item.get_label() + (this.attachments != null ? this.getAttachmentsLabels() : "");
	}
	,__class__: troshx_sos_core_ItemQty
};
var troshx_sos_core_MeleeSpecial = function() {
	this.custom = null;
	this.spatulateTip = 0;
	this.shock = 0;
	this.multiHit_Y = 0;
	this.multiHit = 0;
	this.draw = 0;
	this.crushing = 0;
	this.chain = 0;
	this.bleed = 0;
	this.APThrust = 0;
	this.APSwing = 0;
};
$hxClasses["troshx.sos.core.MeleeSpecial"] = troshx_sos_core_MeleeSpecial;
troshx_sos_core_MeleeSpecial.__name__ = ["troshx","sos","core","MeleeSpecial"];
troshx_sos_core_MeleeSpecial.getLabelsOfFlags = function(instance,flags) {
	if(flags == null) {
		flags = 0;
	}
	var arr = [];
	if(flags != 0) {
		if((flags & 1) != 0) {
			arr.push("Brace");
		}
		if((flags & 2) != 0) {
			arr.push("Calvary Sword");
		}
		if((flags & 4) != 0) {
			arr.push("Companion Weapon");
		}
		if((flags & 8) != 0) {
			arr.push("Couched Charge");
		}
		if((flags & 16) != 0) {
			arr.push("Fluid Thrusts");
		}
		if((flags & 32) != 0) {
			arr.push("Forward Swept");
		}
		if((flags & 64) != 0) {
			arr.push("Freakishly Large");
		}
		if((flags & 128) != 0) {
			arr.push("Hand Off");
		}
		if((flags & 256) != 0) {
			arr.push("Heavy Weapon");
		}
		if((flags & 512) != 0) {
			arr.push("Hook");
		}
		if((flags & 1024) != 0) {
			arr.push("Light Blade");
		}
		if((flags & 2048) != 0) {
			arr.push("Parrying Teeth");
		}
		if((flags & 4096) != 0) {
			arr.push("Swinging Slot");
		}
		if((flags & 8192) != 0) {
			arr.push("Thin Blade");
		}
		if((flags & 16384) != 0) {
			arr.push("Thrusting Slot");
		}
		if((flags & 32768) != 0) {
			arr.push("Tight Grip");
		}
		if((flags & 65536) != 0) {
			arr.push("Weapon Attachment");
		}
	}
	if(instance != null) {
		if(instance.APSwing != 0) {
			arr.push("AP Swing" + " " + instance.APSwing);
		}
		if(instance.APThrust != 0) {
			arr.push("AP Thrust" + " " + instance.APThrust);
		}
		if(instance.bleed != 0) {
			arr.push("Bleed" + " " + instance.bleed);
		}
		if(instance.chain != 0) {
			arr.push("Chain" + " " + instance.chain);
		}
		if(instance.crushing != 0) {
			arr.push("Crushing" + " " + instance.crushing);
		}
		if(instance.draw != 0) {
			arr.push("Draw" + " " + instance.draw);
		}
		if(instance.multiHit != 0) {
			arr.push("Multi Hit" + " " + instance.multiHit);
		}
		if(instance.shock != 0) {
			arr.push("Shock" + " " + instance.shock);
		}
		if(instance.spatulateTip != 0) {
			arr.push("Spatulate Tip" + " " + instance.spatulateTip);
		}
	}
	return arr;
};
troshx_sos_core_MeleeSpecial.getFlagVarLabels = function() {
	var arr = [];
	arr.push("Brace");
	arr.push("Calvary Sword");
	arr.push("Companion Weapon");
	arr.push("Couched Charge");
	arr.push("Fluid Thrusts");
	arr.push("Forward Swept");
	arr.push("Freakishly Large");
	arr.push("Hand Off");
	arr.push("Heavy Weapon");
	arr.push("Hook");
	arr.push("Light Blade");
	arr.push("Parrying Teeth");
	arr.push("Swinging Slot");
	arr.push("Thin Blade");
	arr.push("Thrusting Slot");
	arr.push("Tight Grip");
	arr.push("Weapon Attachment");
	return arr;
};
troshx_sos_core_MeleeSpecial.getIntVarNames = function() {
	var arr = [];
	arr.push("APSwing");
	arr.push("APThrust");
	arr.push("bleed");
	arr.push("chain");
	arr.push("crushing");
	arr.push("draw");
	arr.push("multiHit");
	arr.push("shock");
	arr.push("spatulateTip");
	return arr;
};
troshx_sos_core_MeleeSpecial.prototype = {
	__class__: troshx_sos_core_MeleeSpecial
};
var troshx_sos_core_MissileSpecial = function() {
	this.custom = null;
	this.winged = 0;
	this.shock = 0;
	this.scatter_y = 1;
	this.scatter = 0;
	this.flaming = 0;
	this.calvaryBow = 0;
	this.bleed = 0;
	this.AP = 0;
};
$hxClasses["troshx.sos.core.MissileSpecial"] = troshx_sos_core_MissileSpecial;
troshx_sos_core_MissileSpecial.__name__ = ["troshx","sos","core","MissileSpecial"];
troshx_sos_core_MissileSpecial.getLabelsOfFlags = function(instance,flags) {
	if(flags == null) {
		flags = 0;
	}
	var arr = [];
	if(flags != 0) {
		if((flags & 1) != 0) {
			arr.push("Bludgeon");
		}
		if((flags & 2) != 0) {
			arr.push("Narrow");
		}
		if((flags & 4) != 0) {
			arr.push("Shield Stick");
		}
		if((flags & 8) != 0) {
			arr.push("Ap First Hit Only");
		}
		if((flags & 16) != 0) {
			arr.push("Cheat Attachment");
		}
	}
	if(instance != null) {
		if(instance.AP != 0) {
			arr.push("AP" + " " + instance.AP);
		}
		if(instance.bleed != 0) {
			arr.push("Bleed" + " " + instance.bleed);
		}
		if(instance.calvaryBow != 0) {
			arr.push("Calvary Bow" + " " + instance.calvaryBow);
		}
		if(instance.flaming != 0) {
			arr.push("Flaming" + " " + instance.flaming);
		}
		if(instance.scatter != 0) {
			arr.push("Scatter" + " " + instance.scatter);
		}
		if(instance.shock != 0) {
			arr.push("Shock" + " " + instance.shock);
		}
		if(instance.winged != 0) {
			arr.push("Winged" + " " + instance.winged);
		}
	}
	return arr;
};
troshx_sos_core_MissileSpecial.getFlagVarNames = function() {
	var arr = [];
	arr.push("BLUDGEON");
	arr.push("NARROW");
	arr.push("SHIELD_STICK");
	arr.push("AP_FIRST_HIT_ONLY");
	arr.push("CHEAT_ATTACHMENT");
	return arr;
};
troshx_sos_core_MissileSpecial.getFlagVarLabels = function() {
	var arr = [];
	arr.push("Bludgeon");
	arr.push("Narrow");
	arr.push("Shield Stick");
	arr.push("Ap First Hit Only");
	arr.push("Cheat Attachment");
	return arr;
};
troshx_sos_core_MissileSpecial.getIntVarNames = function() {
	var arr = [];
	arr.push("AP");
	arr.push("bleed");
	arr.push("calvaryBow");
	arr.push("flaming");
	arr.push("scatter");
	arr.push("shock");
	arr.push("winged");
	return arr;
};
troshx_sos_core_MissileSpecial.prototype = {
	__class__: troshx_sos_core_MissileSpecial
};
var troshx_sos_core_Modifier = function() {
};
$hxClasses["troshx.sos.core.Modifier"] = troshx_sos_core_Modifier;
troshx_sos_core_Modifier.__name__ = ["troshx","sos","core","Modifier"];
troshx_sos_core_Modifier.getStaticModifierSlots = function() {
	var a = [];
	var _g = 0;
	while(_g < 21) {
		var i = _g++;
		a[i] = [];
	}
	return a;
};
troshx_sos_core_Modifier.getSituationalModifierSlots = function() {
	var a = [];
	var _g = 0;
	while(_g < 21) {
		var i = _g++;
		a[i] = [];
	}
	return a;
};
troshx_sos_core_Modifier.prototype = {
	__class__: troshx_sos_core_Modifier
};
var troshx_sos_core_StaticModifier = function() {
};
$hxClasses["troshx.sos.core.StaticModifier"] = troshx_sos_core_StaticModifier;
troshx_sos_core_StaticModifier.__name__ = ["troshx","sos","core","StaticModifier"];
troshx_sos_core_StaticModifier.create = function(index,name,add,multiply) {
	if(multiply == null) {
		multiply = 1;
	}
	var me = new troshx_sos_core_StaticModifier();
	me.name = name;
	me.index = index;
	me.multiply = multiply;
	me.add = add;
	return me;
};
troshx_sos_core_StaticModifier.prototype = {
	getModifiedValueMultiply: function(value) {
		return value * this.multiply;
	}
	,getModifiedValueAdd: function(value) {
		return value + this.add;
	}
	,__class__: troshx_sos_core_StaticModifier
};
var troshx_sos_core_EventModifierBinding = function() {
};
$hxClasses["troshx.sos.core.EventModifierBinding"] = troshx_sos_core_EventModifierBinding;
troshx_sos_core_EventModifierBinding.__name__ = ["troshx","sos","core","EventModifierBinding"];
troshx_sos_core_EventModifierBinding.create = function(types,name,handler) {
	var me = new troshx_sos_core_EventModifierBinding();
	me.types = types;
	me.name = name;
	me.handler = handler;
	return me;
};
troshx_sos_core_EventModifierBinding.prototype = {
	__class__: troshx_sos_core_EventModifierBinding
};
var troshx_sos_core_Profeciency = function(name,type) {
	if(type == null) {
		type = 0;
	}
	if(name == null) {
		name = "";
	}
	this.type = type;
	this.name = name;
};
$hxClasses["troshx.sos.core.Profeciency"] = troshx_sos_core_Profeciency;
troshx_sos_core_Profeciency.__name__ = ["troshx","sos","core","Profeciency"];
troshx_sos_core_Profeciency.__interfaces__ = [troshx_ds_IUpdateWith,troshx_core_IUid];
troshx_sos_core_Profeciency.getCoreMelee = function() {
	if(troshx_sos_core_Profeciency.CORE_MELEE != null) {
		return troshx_sos_core_Profeciency.CORE_MELEE;
	} else {
		return troshx_sos_core_Profeciency.CORE_MELEE = troshx_sos_core_Profeciency.getNewCoreMelee();
	}
};
troshx_sos_core_Profeciency.getNewCoreMelee = function() {
	var a = [];
	a[7] = new troshx_sos_core_Profeciency("Wrestling",0);
	a[8] = new troshx_sos_core_Profeciency("Pugilism",0);
	a[6] = new troshx_sos_core_Profeciency("Dagger",0);
	a[0] = new troshx_sos_core_Profeciency("1H Sword",0);
	a[1] = new troshx_sos_core_Profeciency("1H Blunt",0);
	a[2] = new troshx_sos_core_Profeciency("2H Blunt",0);
	a[3] = new troshx_sos_core_Profeciency("2H Sword",0);
	a[4] = new troshx_sos_core_Profeciency("Spear",0);
	a[5] = new troshx_sos_core_Profeciency("Polearm",0);
	return a;
};
troshx_sos_core_Profeciency.getCoreRanged = function() {
	if(troshx_sos_core_Profeciency.CORE_RANGED != null) {
		return troshx_sos_core_Profeciency.CORE_RANGED;
	} else {
		return troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged();
	}
};
troshx_sos_core_Profeciency.getNewCoreRanged = function() {
	var a = [];
	a[0] = new troshx_sos_core_Profeciency("Bow",1);
	a[1] = new troshx_sos_core_Profeciency("Sling",1);
	a[2] = new troshx_sos_core_Profeciency("Crossbow",1);
	a[3] = new troshx_sos_core_Profeciency("Firearm",1);
	a[4] = new troshx_sos_core_Profeciency("Throwing",1);
	return a;
};
troshx_sos_core_Profeciency.getProfsLabelsMelee = function(mask) {
	return troshx_sos_core_Profeciency.getLabelsOfArrayProfs(troshx_sos_core_Profeciency.getCoreMelee(),mask);
};
troshx_sos_core_Profeciency.getProfsLabelsRanged = function(mask) {
	return troshx_sos_core_Profeciency.getLabelsOfArrayProfs(troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged(),mask);
};
troshx_sos_core_Profeciency.getProfsCountMelee = function(mask) {
	return troshx_sos_core_Profeciency.getCountOfArrayProfs(troshx_sos_core_Profeciency.getCoreMelee(),mask);
};
troshx_sos_core_Profeciency.getProfsCountRanged = function(mask) {
	return troshx_sos_core_Profeciency.getCountOfArrayProfs(troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged(),mask);
};
troshx_sos_core_Profeciency.getCountOfArrayProfs = function(a,mask) {
	var count = 0;
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		count += (mask & 1 << i) != 0 ? 1 : 0;
	}
	return count;
};
troshx_sos_core_Profeciency.getLabelsOfArrayProfs = function(a,mask) {
	var arr = [];
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if((mask & 1 << i) != 0) {
			arr.push(a[i].name);
		}
	}
	return arr;
};
troshx_sos_core_Profeciency.prototype = {
	updateAgainst: function(ref) {
	}
	,spliceAgainst: function(ref) {
		return 0;
	}
	,get_uid: function() {
		return this.name + troshx_sos_core_Profeciency.SEPERATOR + this.type;
	}
	,__class__: troshx_sos_core_Profeciency
};
var troshx_sos_core_Race = function(name) {
	this.name = name;
	this.magic = false;
};
$hxClasses["troshx.sos.core.Race"] = troshx_sos_core_Race;
troshx_sos_core_Race.__name__ = ["troshx","sos","core","Race"];
troshx_sos_core_Race.__interfaces__ = [troshx_core_IUid];
troshx_sos_core_Race.prototype = {
	get_uid: function() {
		return this.name;
	}
	,__class__: troshx_sos_core_Race
};
var troshx_sos_core_School = function(name,profLimit,costArc) {
	if(costArc == null) {
		costArc = 0;
	}
	if(profLimit == null) {
		profLimit = 0;
	}
	if(name == null) {
		name = "";
	}
	this.costMoney = null;
	this.name = name;
	this.profLimit = profLimit;
	this.costArc = costArc;
};
$hxClasses["troshx.sos.core.School"] = troshx_sos_core_School;
troshx_sos_core_School.__name__ = ["troshx","sos","core","School"];
troshx_sos_core_School.getLevels = function() {
	return [1,1,1,1,2,2,2,2,3,3,3,3,3,6,6,6,6,8,10,10];
};
troshx_sos_core_School.getTalentAdds = function() {
	return [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0];
};
troshx_sos_core_School.getSuperiorAdds = function() {
	return [0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1];
};
troshx_sos_core_School.prototype = {
	canAffordWith: function(arcPoints,money,schoolToReplace) {
		if(schoolToReplace != null) {
			arcPoints += schoolToReplace.costArc;
		}
		if(money != null && this.costMoney != null) {
			var _this = schoolToReplace != null && schoolToReplace.costMoney != null ? schoolToReplace.costMoney : troshx_sos_core_Money.ZERO;
			if(troshx_sos_core_Money.TEMP.matchWith(money).addAgainst(_this).subtractAgainst(this.costMoney).cp < 0) {
				return false;
			}
		}
		return arcPoints >= this.costArc;
	}
	,customRequire: function(charSheet) {
		return true;
	}
	,getSchoolBonuses: function(charSheet) {
		return null;
	}
	,get_uid: function() {
		return this.name;
	}
	,__class__: troshx_sos_core_School
};
var troshx_sos_core_SchoolBonuses = function() {
};
$hxClasses["troshx.sos.core.SchoolBonuses"] = troshx_sos_core_SchoolBonuses;
troshx_sos_core_SchoolBonuses.__name__ = ["troshx","sos","core","SchoolBonuses"];
troshx_sos_core_SchoolBonuses.prototype = {
	getUIFields: function() {
		return null;
	}
	,getTags: function() {
		return [];
	}
	,__class__: troshx_sos_core_SchoolBonuses
};
var troshx_sos_core_Shield = function() {
	this.strapType = 0;
	this.durability = 6;
	this.bashTN = 0;
	this.blockTN = 7;
	this.size = 0;
	this.AV = 1;
	troshx_sos_core_Item.call(this);
};
$hxClasses["troshx.sos.core.Shield"] = troshx_sos_core_Shield;
troshx_sos_core_Shield.__name__ = ["troshx","sos","core","Shield"];
troshx_sos_core_Shield.getHighCoverage = function() {
	return [{ "upperHead" : true, "lowerHead" : true, "face" : true, "neck" : true, "shoulder" : true, "upperArm" : false, "elbow" : false, "forearm" : false, "hand" : false},{ "upperHead" : true, "lowerHead" : true, "face" : true, "neck" : true, "shoulder" : true, "upperArm" : false, "elbow" : false, "forearm" : false, "hand" : false, "chest" : true},{ "upperHead" : true, "lowerHead" : true, "face" : true, "neck" : true, "shoulder" : true, "upperArm" : true, "elbow" : true, "forearm" : true, "hand" : true, "chest" : true, "belly" : true, "side" : true}];
};
troshx_sos_core_Shield.getLowCoverage = function() {
	return [{ "chest" : true, "belly" : true, "upperArm" : false, "elbow" : false, "forearm" : false, "hand" : false},{ "chest" : true, "belly" : true, "side" : true, "groin" : true, "hip" : true, "upperArm" : false, "elbow" : false, "forearm" : false, "hand" : false, "thigh" : true},{ "chest" : true, "belly" : true, "side" : true, "groin" : true, "hip" : true, "neck" : true, "upperArm" : false, "elbow" : false, "forearm" : false, "hand" : false, "knee" : true, "thigh" : true}];
};
troshx_sos_core_Shield.__super__ = troshx_sos_core_Item;
troshx_sos_core_Shield.prototype = $extend(troshx_sos_core_Item.prototype,{
	addTagsToStrArr: function(arr) {
		troshx_sos_core_Item.prototype.addTagsToStrArr.call(this,arr);
		if((this.flags & 2) != 0) {
			arr.push(this.strapType == 0 ? "Arm-strap" : "Shoulder-strap");
		}
	}
	,getTypeLabel: function() {
		return "Shield";
	}
	,__class__: troshx_sos_core_Shield
});
var troshx_sos_core_Skill = function() { };
$hxClasses["troshx.sos.core.Skill"] = troshx_sos_core_Skill;
troshx_sos_core_Skill.__name__ = ["troshx","sos","core","Skill"];
troshx_sos_core_Skill.isVarious = function(n) {
	return (n & n - 1) != 0;
};
troshx_sos_core_Skill.specialisationName = function(base,special) {
	return base + " (" + special + ")";
};
troshx_sos_core_Skill.getBaseFromSpecialisationNaive = function(name) {
	var index = name.indexOf(" (");
	if(index > 0) {
		return name.substring(0,index);
	} else {
		return null;
	}
};
troshx_sos_core_Skill.getBaseFromSpecialisation = function(name) {
	var index = name.indexOf(" (");
	var len = " (".length + ")".length;
	if(index > 0 && name.length > len && HxOverrides.substr(name,name.length - ")".length,null) == ")") {
		return name.substring(0,index);
	} else {
		return null;
	}
};
troshx_sos_core_Skill.getSplitFromSpecialisation = function(name) {
	var index = name.indexOf(" (");
	var len = " (".length + ")".length;
	if(index > 0 && name.length > len && HxOverrides.substr(name,name.length - ")".length,null) == ")") {
		return [name.substring(0,index),name.substring(index + " (".length,name.length - ")".length)];
	} else {
		return null;
	}
};
var troshx_sos_core_SkillTable = function() {
};
$hxClasses["troshx.sos.core.SkillTable"] = troshx_sos_core_SkillTable;
troshx_sos_core_SkillTable.__name__ = ["troshx","sos","core","SkillTable"];
troshx_sos_core_SkillTable.getNewEmptySkillTable = function(withRules) {
	var s = new troshx_sos_core_SkillTable();
	s.skillHash = { };
	if(withRules != null) {
		s.requiresTrained = withRules.requiresTrained;
		s.requiresSpecialisation = withRules.requiresSpecialisation;
	} else {
		s.requiresTrained = { };
		s.requiresSpecialisation = { };
	}
	return s;
};
troshx_sos_core_SkillTable.getDefaultSkillTable = function() {
	if(troshx_sos_core_SkillTable.DEFAULT != null) {
		return troshx_sos_core_SkillTable.DEFAULT;
	} else {
		return troshx_sos_core_SkillTable.DEFAULT = troshx_sos_core_SkillTable.getNewDefaultSkillTable();
	}
};
troshx_sos_core_SkillTable.getNewDefaultSkillTable = function() {
	var s = new troshx_sos_core_SkillTable();
	s.skillHash = { "Athletics" : 7, "Chymistry" : 64, "Climbing" : 4, "Cooking" : 64, "Crafting" : 64, "Drill" : 16, "Engineering" : 64, "Etiquette" : 32, "Gather Information" : 256, "Hunting" : 128, "Intimidation" : 256, "Knowledge" : 64, "Navigation" : 128, "Observation" : 128, "Oration" : 256, "Performance" : 256, "Persuasion" : 256, "Profession" : 16, "Research" : 64, "Riding" : 2, "Sailing" : 32, "Stealth" : 2, "Strategy" : 64, "Subterfuge" : 256, "Surgery" : 64, "Swimming" : 4, "Tactics" : 64, "Thievery" : 2};
	s.requiresTrained = { "Crafting" : true, "Engineering" : true, "History" : true, "Navigation" : true, "Swimming" : true, "Tactics" : true, "Strategy" : true, "Etiquette" : true};
	s.requiresSpecialisation = { "Profession" : true, "Knowledge" : true, "Crafting" : true, "Performance" : true};
	return s;
};
troshx_sos_core_SkillTable.sortArrayMethod = function(a,b) {
	var aStr = a.name.toLowerCase();
	var bStr = b.name.toLowerCase();
	if(aStr < bStr) {
		return -1;
	}
	if(aStr > bStr) {
		return 1;
	}
	return 0;
};
troshx_sos_core_SkillTable.prototype = {
	getSpecialisationList: function() {
		var arr = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.requiresSpecialisation);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			arr.push(f);
		}
		return arr;
	}
	,getSkillObjectsAsArray: function(sortAlphabetically) {
		if(sortAlphabetically == null) {
			sortAlphabetically = true;
		}
		var arr = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.skillHash);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			arr.push({ name : p, attribs : this.skillHash[p]});
		}
		if(sortAlphabetically) {
			arr.sort(troshx_sos_core_SkillTable.sortArrayMethod);
		}
		return arr;
	}
	,matchRulesWith: function(other) {
		this.requiresTrained = other.requiresTrained;
		this.requiresSpecialisation = other.requiresSpecialisation;
	}
	,requiresSpecification: function(name) {
		return this.requiresSpecialisation[name];
	}
	,clearAllSkills: function(flushed) {
		if(flushed) {
			this.skillHash = { };
		} else {
			var _g = 0;
			var _g1 = Reflect.fields(this.skillHash);
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				Reflect.deleteField(this.skillHash,p);
			}
		}
	}
	,canAttemptUntrained: function(name) {
		return !this.requiresTrained[name];
	}
	,getSkillValue: function(name) {
		return this.skillHash[name];
	}
	,hasSkill: function(name) {
		return Object.prototype.hasOwnProperty.call(this.skillHash,name);
	}
	,setSkill: function(name,attribs) {
		this.skillHash[name] = attribs;
	}
	,matchValuesWith: function(other) {
		var _g = 0;
		var _g1 = Reflect.fields(other.skillHash);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var result = other.skillHash[f];
			this.skillHash[f] = result;
		}
	}
	,addSpecialisationTo: function(skillName,special,specialAttribs) {
		if(specialAttribs == null) {
			specialAttribs = 0;
		}
		if(Object.prototype.hasOwnProperty.call(this.skillHash,skillName)) {
			throw new js__$Boot_HaxeError("No skill found for:" + skillName);
		}
		var key;
		key = skillName + " (" + special + ")";
		this.skillHash[key] = specialAttribs != 0 ? specialAttribs : this.skillHash[skillName];
		return key;
	}
	,removeSkill: function(name) {
		return Reflect.deleteField(this.skillHash,name);
	}
	,getSubjects: function() {
		var arr = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.skillHash);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var sub = troshx_sos_core_Skill.getSplitFromSpecialisation(f);
			if(sub != null) {
				arr.push(sub[1]);
			}
		}
		return arr;
	}
	,__class__: troshx_sos_core_SkillTable
};
var troshx_sos_core_SocialClass = function(name,money,wealth) {
	this.wealthIndex = 0;
	this.classIndex = 0;
	this.name = name;
	this.money = money;
	this.wealth = wealth;
};
$hxClasses["troshx.sos.core.SocialClass"] = troshx_sos_core_SocialClass;
troshx_sos_core_SocialClass.__name__ = ["troshx","sos","core","SocialClass"];
troshx_sos_core_SocialClass.prototype = {
	__class__: troshx_sos_core_SocialClass
};
var troshx_sos_core_Talent = function() {
	this.level = 0;
	this.name = "";
};
$hxClasses["troshx.sos.core.Talent"] = troshx_sos_core_Talent;
troshx_sos_core_Talent.__name__ = ["troshx","sos","core","Talent"];
troshx_sos_core_Talent.__interfaces__ = [troshx_core_IUid];
troshx_sos_core_Talent.prototype = {
	get_uid: function() {
		return this.name + "_" + this.level;
	}
	,get_label: function() {
		return this.name + (this.level >= 1 ? "(" + this.level + ")" : "");
	}
	,__class__: troshx_sos_core_Talent
};
var troshx_sos_core_TargetZone = function() {
	this.description = "";
	this.weightsTotal = 0;
};
$hxClasses["troshx.sos.core.TargetZone"] = troshx_sos_core_TargetZone;
troshx_sos_core_TargetZone.__name__ = ["troshx","sos","core","TargetZone"];
troshx_sos_core_TargetZone.create = function(name,partWeights,parts,weightsTotal,description) {
	if(description == null) {
		description = "";
	}
	if(weightsTotal == null) {
		weightsTotal = 0;
	}
	var zb = new troshx_sos_core_TargetZone();
	zb.name = name;
	zb.parts = parts;
	zb.partWeights = partWeights;
	zb.description = description;
	zb.weightsTotal = weightsTotal;
	if(weightsTotal == 0) {
		zb.recalcWeightsTotal();
	}
	return zb;
};
troshx_sos_core_TargetZone.prototype = {
	recalcWeightsTotal: function() {
		var accum = 0;
		var i = this.partWeights.length;
		while(--i > -1) accum += this.partWeights[i];
		this.weightsTotal = accum;
	}
	,getBodyPart: function(floatRatio) {
		floatRatio *= this.weightsTotal;
		var accum = 0;
		var result = 0;
		var _g1 = 0;
		var _g = this.partWeights.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(floatRatio < accum) {
				break;
			}
			accum += this.partWeights[i];
			result = i;
		}
		return this.parts[result];
	}
	,getHitAreaMask: function() {
		var msk = 0;
		var _g1 = 0;
		var _g = this.parts.length;
		while(_g1 < _g) {
			var i = _g1++;
			msk |= 1 << this.parts[i];
		}
		return msk;
	}
	,__class__: troshx_sos_core_TargetZone
};
var troshx_sos_core_WeaponCustomise = function() {
	this.original = null;
	this.name = "";
	this.melee = null;
	this.meleeFlags = 0;
};
$hxClasses["troshx.sos.core.WeaponCustomise"] = troshx_sos_core_WeaponCustomise;
troshx_sos_core_WeaponCustomise.__name__ = ["troshx","sos","core","WeaponCustomise"];
troshx_sos_core_WeaponCustomise.__interfaces__ = [troshx_core_IUid];
troshx_sos_core_WeaponCustomise.prototype = {
	addMeleeTagsToStrArr: function(arr) {
		var flags = this.meleeFlags;
		if((flags & 1) != 0) {
			arr.push("*Custom Hilt");
		}
		if((flags & 2) != 0) {
			arr.push("*Ridiculously Sharp");
		}
		if((flags & 4) != 0) {
			arr.push("*Exquisite Decoration");
		}
		if((flags & 8) != 0) {
			arr.push("*Bizarre Gimmick");
		}
		if(this.melee != null) {
			var instance = this.melee;
			if(instance.customGrip != 0) {
				arr.push("*Custom Grip" + " " + instance.customGrip);
			}
			if(instance.fineForging != 0) {
				arr.push("*Fine Forging" + " " + instance.fineForging);
			}
			if(instance.integratedPistol != 0) {
				arr.push("*Integrated Pistol" + " " + instance.integratedPistol);
			}
		}
	}
	,hasBizarreGimmick: function() {
		return (this.meleeFlags & 8) != 0;
	}
	,hasExquisiteDecoration: function() {
		return (this.meleeFlags & 4) != 0;
	}
	,isRidiculouslySharp: function() {
		return (this.meleeFlags & 2) != 0;
	}
	,get_uid: function() {
		return "_" + this.name + "_" + this.meleeFlags + (this.melee != null ? this.melee.getUID(this.meleeFlags) : "");
	}
	,__class__: troshx_sos_core_WeaponCustomise
};
var troshx_sos_core_CustomMelee = function() {
	this.exquisiteDecorDesc = "";
	this.bizarreGimmickDesc = "";
	this.sharpened = true;
	this.integratedPistol = 0;
	this.fineForging = 0;
	this.customGrip = 0;
};
$hxClasses["troshx.sos.core.CustomMelee"] = troshx_sos_core_CustomMelee;
troshx_sos_core_CustomMelee.__name__ = ["troshx","sos","core","CustomMelee"];
troshx_sos_core_CustomMelee.prototype = {
	getUID: function(flags) {
		return "_" + this.customGrip + "_" + this.fineForging + "_" + this.integratedPistol;
	}
	,__class__: troshx_sos_core_CustomMelee
};
var troshx_sos_core_Wound = function(locationId,level,damageType) {
	this.age = 0;
	this.uidSuffix = "";
	this.flags = 0;
	this.BL = 0;
	this.pain = 0;
	this.stun = 0;
	this.leftSide = false;
	this.damageType = 0;
	this.level = 0;
	this.locationId = locationId;
	this.level = level;
	this.damageType = damageType;
};
$hxClasses["troshx.sos.core.Wound"] = troshx_sos_core_Wound;
troshx_sos_core_Wound.__name__ = ["troshx","sos","core","Wound"];
troshx_sos_core_Wound.__interfaces__ = [troshx_ds_IUpdateWith];
troshx_sos_core_Wound.getNewFlagLabels = function() {
	var arr = [];
	arr.push("Staunched");
	arr.push("Treated");
	return arr;
};
troshx_sos_core_Wound.getFlagLabels = function() {
	if(troshx_sos_core_Wound.FLAG_LABELS != null) {
		return troshx_sos_core_Wound.FLAG_LABELS;
	} else {
		return troshx_sos_core_Wound.FLAG_LABELS = troshx_sos_core_Wound.getNewFlagLabels();
	}
};
troshx_sos_core_Wound.getNewEmptyAssign = function() {
	var w = new troshx_sos_core_Wound("",0,0);
	w.notes = "";
	return w;
};
troshx_sos_core_Wound.prototype = {
	isNullified: function() {
		if(this.stun == 0 && this.pain == 0) {
			return this.BL == 0;
		} else {
			return false;
		}
	}
	,getDescLabel: function(body,damageTypeLabels) {
		var dmgLabel = this.damageType >= 0 && this.damageType < damageTypeLabels.length ? " " + damageTypeLabels[this.damageType] : "";
		var hitLoc = body.getHitLocationById(this.locationId);
		return "Level " + this.level + dmgLabel + " wound" + (this.locationId != "" ? " on the " + (hitLoc != null && hitLoc.twoSided ? this.leftSide ? "Left " : "Right " : "") + body.getHitLocationLabelFromId(this.locationId) : "");
	}
	,updateAgainst: function(ref) {
		if(ref.stun > this.stun) {
			this.stun = ref.stun;
		}
		if(ref.pain > this.pain) {
			this.pain = ref.pain;
		}
		if(ref.BL > this.BL) {
			this.BL = ref.BL;
		}
		this.flags &= -4;
		this.age = 0;
	}
	,spliceAgainst: function(ref) {
		this.updateAgainst(ref);
		return -1;
	}
	,makeUnique: function() {
		this.uidSuffix = "^" + troshx_sos_core_Wound.UNIQUE_COUNT;
	}
	,isTreated: function() {
		return (this.flags & 2) != 0;
	}
	,gotBloodLost: function() {
		return (this.flags & 3) == 0;
	}
	,getUID: function(body) {
		return this.locationId + "_" + this.level + "_" + this.damageType + (body.gotSideWithId(this.locationId) ? this.leftSide ? "l" : "r" : "") + this.uidSuffix;
	}
	,__class__: troshx_sos_core_Wound
};
var troshx_sos_events_Challenge = function() {
	this.totalSuccesses = null;
	this.rolls = null;
};
$hxClasses["troshx.sos.events.Challenge"] = troshx_sos_events_Challenge;
troshx_sos_events_Challenge.__name__ = ["troshx","sos","events","Challenge"];
troshx_sos_events_Challenge.prototype = {
	isResolved: function() {
		return this.totalSuccesses != null;
	}
	,__class__: troshx_sos_events_Challenge
};
var troshx_sos_events_SOSEvent = $hxClasses["troshx.sos.events.SOSEvent"] = { __ename__ : ["troshx","sos","events","SOSEvent"], __constructs__ : ["FATIQUE_GAIN","MELEE_INITIATIVE_TEST","MISS_TARGET","HIT_TARGET","HIT_TARGET_ARMOR","DAMAGE_TARGET_RESOLVE","WOUND_INFLICT","MELEE_EXCHANGE_RESOLVE","MELEE_BOUT_RESOLVE","CHALLENGE_INIT","CHALLENGE_EXECUTE"] };
troshx_sos_events_SOSEvent.FATIQUE_GAIN = function($char,fatique) { var $x = ["FATIQUE_GAIN",0,$char,fatique]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
troshx_sos_events_SOSEvent.MELEE_INITIATIVE_TEST = function(from,target) { var $x = ["MELEE_INITIATIVE_TEST",1,from,target]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
troshx_sos_events_SOSEvent.MISS_TARGET = function(from,target,ammo) { var $x = ["MISS_TARGET",2,from,target,ammo]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
troshx_sos_events_SOSEvent.HIT_TARGET = function(from,target,ammo) { var $x = ["HIT_TARGET",3,from,target,ammo]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
troshx_sos_events_SOSEvent.HIT_TARGET_ARMOR = function(from,target,armor,ammo) { var $x = ["HIT_TARGET_ARMOR",4,from,target,armor,ammo]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
troshx_sos_events_SOSEvent.DAMAGE_TARGET_RESOLVE = function(from,target,armor,ammo) { var $x = ["DAMAGE_TARGET_RESOLVE",5,from,target,armor,ammo]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
troshx_sos_events_SOSEvent.WOUND_INFLICT = function($char,w) { var $x = ["WOUND_INFLICT",6,$char,w]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
troshx_sos_events_SOSEvent.MELEE_EXCHANGE_RESOLVE = ["MELEE_EXCHANGE_RESOLVE",7];
troshx_sos_events_SOSEvent.MELEE_EXCHANGE_RESOLVE.toString = $estr;
troshx_sos_events_SOSEvent.MELEE_EXCHANGE_RESOLVE.__enum__ = troshx_sos_events_SOSEvent;
troshx_sos_events_SOSEvent.MELEE_BOUT_RESOLVE = ["MELEE_BOUT_RESOLVE",8];
troshx_sos_events_SOSEvent.MELEE_BOUT_RESOLVE.toString = $estr;
troshx_sos_events_SOSEvent.MELEE_BOUT_RESOLVE.__enum__ = troshx_sos_events_SOSEvent;
troshx_sos_events_SOSEvent.CHALLENGE_INIT = function(attributes,skills,challenge) { var $x = ["CHALLENGE_INIT",9,attributes,skills,challenge]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
troshx_sos_events_SOSEvent.CHALLENGE_EXECUTE = function($char,attributes,skills,challenge) { var $x = ["CHALLENGE_EXECUTE",10,$char,attributes,skills,challenge]; $x.__enum__ = troshx_sos_events_SOSEvent; $x.toString = $estr; return $x; };
var troshx_sos_macro_MacroUtil = function() { };
$hxClasses["troshx.sos.macro.MacroUtil"] = troshx_sos_macro_MacroUtil;
troshx_sos_macro_MacroUtil.__name__ = ["troshx","sos","macro","MacroUtil"];
var troshx_sos_races_Races = function() { };
$hxClasses["troshx.sos.races.Races"] = troshx_sos_races_Races;
troshx_sos_races_Races.__name__ = ["troshx","sos","races","Races"];
troshx_sos_races_Races.getTiers = function() {
	if(troshx_sos_races_Races.TIERS != null) {
		return troshx_sos_races_Races.TIERS;
	} else {
		return troshx_sos_races_Races.TIERS = troshx_sos_races_Races.getNewTiers();
	}
};
troshx_sos_races_Races.getNewTiers = function() {
	return [[new troshx_sos_races_Human(),new troshx_sos_races_Goblin()],[new troshx_sos_races_Dwarf(),new troshx_sos_races_Zell()],[new troshx_sos_races_Burdinadin(),new troshx_sos_races_Ohanedin()],[new troshx_sos_races_Orredin()],[new troshx_sos_races_StarVampire(),new troshx_sos_races_SaturiChosen(),new troshx_sos_races_GenosianPaladin(),new troshx_sos_races_DessianSilverGuard()]];
};
var troshx_sos_races_Human = function() {
	troshx_sos_core_Race.call(this,"Human");
};
$hxClasses["troshx.sos.races.Human"] = troshx_sos_races_Human;
troshx_sos_races_Human.__name__ = ["troshx","sos","races","Human"];
troshx_sos_races_Human.__super__ = troshx_sos_core_Race;
troshx_sos_races_Human.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_Human
});
var troshx_sos_races_Goblin = function() {
	troshx_sos_core_Race.call(this,"Goblin");
	var _l_ = troshx_sos_core_StaticModifier.create(0,"Goblin",-1);
	this.staticModifiers = _l_;
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(1,"Goblin",1);
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(7,"Goblin",1);
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(9,"Small",-2);
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(14,"Small",-2);
};
$hxClasses["troshx.sos.races.Goblin"] = troshx_sos_races_Goblin;
troshx_sos_races_Goblin.__name__ = ["troshx","sos","races","Goblin"];
troshx_sos_races_Goblin.__super__ = troshx_sos_core_Race;
troshx_sos_races_Goblin.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_Goblin
});
var troshx_sos_races_Dwarf = function() {
	troshx_sos_core_Race.call(this,"Dwarf");
	var _l_ = troshx_sos_core_StaticModifier.create(2,"Dwarf",2);
	this.staticModifiers = _l_;
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(3,"Dwarf",1);
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(14,"Short and Stout",-1);
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(9,"Short and Stout",-2);
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(12,"Sturdy Build",1);
};
$hxClasses["troshx.sos.races.Dwarf"] = troshx_sos_races_Dwarf;
troshx_sos_races_Dwarf.__name__ = ["troshx","sos","races","Dwarf"];
troshx_sos_races_Dwarf.__super__ = troshx_sos_core_Race;
troshx_sos_races_Dwarf.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_Dwarf
});
var troshx_sos_races_Zell = function() {
	troshx_sos_core_Race.call(this,"Zell");
	var _l_ = troshx_sos_core_StaticModifier.create(1,"Zell",1);
	this.staticModifiers = _l_;
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(7,"Zell",2);
};
$hxClasses["troshx.sos.races.Zell"] = troshx_sos_races_Zell;
troshx_sos_races_Zell.__name__ = ["troshx","sos","races","Zell"];
troshx_sos_races_Zell.__super__ = troshx_sos_core_Race;
troshx_sos_races_Zell.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_Zell
});
var troshx_sos_races_Burdinadin = function() {
	troshx_sos_core_Race.call(this,"Burdinadin");
	var _l_ = troshx_sos_core_StaticModifier.create(6,"Burdinadin",1);
	this.staticModifiers = _l_;
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(1,"Burdinadin",1);
};
$hxClasses["troshx.sos.races.Burdinadin"] = troshx_sos_races_Burdinadin;
troshx_sos_races_Burdinadin.__name__ = ["troshx","sos","races","Burdinadin"];
troshx_sos_races_Burdinadin.__super__ = troshx_sos_core_Race;
troshx_sos_races_Burdinadin.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_Burdinadin
});
var troshx_sos_races_Ohanedin = function() {
	troshx_sos_core_Race.call(this,"Ohanedin");
	var _l_ = troshx_sos_core_StaticModifier.create(0,"Ohanedin",1);
	this.staticModifiers = _l_;
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(1,"Ohanedin",1);
	_l_ = _l_.next = troshx_sos_core_StaticModifier.create(7,"Ohanedin",1);
};
$hxClasses["troshx.sos.races.Ohanedin"] = troshx_sos_races_Ohanedin;
troshx_sos_races_Ohanedin.__name__ = ["troshx","sos","races","Ohanedin"];
troshx_sos_races_Ohanedin.__super__ = troshx_sos_core_Race;
troshx_sos_races_Ohanedin.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_Ohanedin
});
var troshx_sos_races_Orredin = function() {
	troshx_sos_core_Race.call(this,"Orredin");
	this.magic = true;
};
$hxClasses["troshx.sos.races.Orredin"] = troshx_sos_races_Orredin;
troshx_sos_races_Orredin.__name__ = ["troshx","sos","races","Orredin"];
troshx_sos_races_Orredin.__super__ = troshx_sos_core_Race;
troshx_sos_races_Orredin.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_Orredin
});
var troshx_sos_races_StarVampire = function() {
	troshx_sos_core_Race.call(this,"Star Vampire");
	this.magic = true;
};
$hxClasses["troshx.sos.races.StarVampire"] = troshx_sos_races_StarVampire;
troshx_sos_races_StarVampire.__name__ = ["troshx","sos","races","StarVampire"];
troshx_sos_races_StarVampire.__super__ = troshx_sos_core_Race;
troshx_sos_races_StarVampire.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_StarVampire
});
var troshx_sos_races_SaturiChosen = function() {
	troshx_sos_core_Race.call(this,"Saturi Chosen");
};
$hxClasses["troshx.sos.races.SaturiChosen"] = troshx_sos_races_SaturiChosen;
troshx_sos_races_SaturiChosen.__name__ = ["troshx","sos","races","SaturiChosen"];
troshx_sos_races_SaturiChosen.__super__ = troshx_sos_core_Race;
troshx_sos_races_SaturiChosen.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_SaturiChosen
});
var troshx_sos_races_GenosianPaladin = function() {
	troshx_sos_core_Race.call(this,"Genosian Paladin");
};
$hxClasses["troshx.sos.races.GenosianPaladin"] = troshx_sos_races_GenosianPaladin;
troshx_sos_races_GenosianPaladin.__name__ = ["troshx","sos","races","GenosianPaladin"];
troshx_sos_races_GenosianPaladin.__super__ = troshx_sos_core_Race;
troshx_sos_races_GenosianPaladin.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_GenosianPaladin
});
var troshx_sos_races_DessianSilverGuard = function() {
	troshx_sos_core_Race.call(this,"Dessian Silver Guard");
};
$hxClasses["troshx.sos.races.DessianSilverGuard"] = troshx_sos_races_DessianSilverGuard;
troshx_sos_races_DessianSilverGuard.__name__ = ["troshx","sos","races","DessianSilverGuard"];
troshx_sos_races_DessianSilverGuard.__super__ = troshx_sos_core_Race;
troshx_sos_races_DessianSilverGuard.prototype = $extend(troshx_sos_core_Race.prototype,{
	__class__: troshx_sos_races_DessianSilverGuard
});
var troshx_sos_schools_EsotericSchool = function() {
	troshx_sos_core_School.call(this,"Esoteric School",4,8);
};
$hxClasses["troshx.sos.schools.EsotericSchool"] = troshx_sos_schools_EsotericSchool;
troshx_sos_schools_EsotericSchool.__name__ = ["troshx","sos","schools","EsotericSchool"];
troshx_sos_schools_EsotericSchool.__super__ = troshx_sos_core_School;
troshx_sos_schools_EsotericSchool.prototype = $extend(troshx_sos_core_School.prototype,{
	customRequire: function($char) {
		var test = troshx_sos_schools_EsotericSchool.TEST != null ? troshx_sos_schools_EsotericSchool.TEST : troshx_sos_schools_EsotericSchool.TEST = new troshx_sos_bnb_CompleteMonster();
		var testAssign = Reflect.field($char.banes.hash,test.name);
		if(testAssign != null) {
			return testAssign.rank == 0;
		} else {
			return true;
		}
	}
	,getSchoolBonuses: function(charSheet) {
		return new troshx_sos_schools_EsotericSchoolBonuses();
	}
	,__class__: troshx_sos_schools_EsotericSchool
});
var troshx_sos_schools_EsotericSchoolBonuses = function() {
	this.__hasUIFields__ = true;
	this.flags = 3;
	troshx_sos_core_SchoolBonuses.call(this);
};
$hxClasses["troshx.sos.schools.EsotericSchoolBonuses"] = troshx_sos_schools_EsotericSchoolBonuses;
troshx_sos_schools_EsotericSchoolBonuses.__name__ = ["troshx","sos","schools","EsotericSchoolBonuses"];
troshx_sos_schools_EsotericSchoolBonuses.__super__ = troshx_sos_core_SchoolBonuses;
troshx_sos_schools_EsotericSchoolBonuses.prototype = $extend(troshx_sos_core_SchoolBonuses.prototype,{
	getTags: function() {
		var arr = [];
		var flags = this.flags;
		if((flags & 1) != 0) {
			arr.push("Simplicity");
		}
		if((flags & 2) != 0) {
			arr.push("Flowing Water");
		}
		if((flags & 4) != 0) {
			arr.push("Raging Flame");
		}
		if((flags & 8) != 0) {
			arr.push("Biting Wind");
		}
		if((flags & 16) != 0) {
			arr.push("Stoic Earth");
		}
		return arr;
	}
	,getUIFields: function() {
		return [{ prop : "flags", type : "SingleSelection", label : "Choose Benefit(s)", labels : ["Simplicity, Flowing Water","Raging Flame","Biting Wind","Stoic Earth"], values : [3,4,8,16]}];
	}
	,__class__: troshx_sos_schools_EsotericSchoolBonuses
});
var troshx_sos_schools_Noble = function() {
	troshx_sos_core_School.call(this,"Noble",3,5);
	this.costMoney = troshx_sos_core_Money.create(15,0,0);
};
$hxClasses["troshx.sos.schools.Noble"] = troshx_sos_schools_Noble;
troshx_sos_schools_Noble.__name__ = ["troshx","sos","schools","Noble"];
troshx_sos_schools_Noble.__super__ = troshx_sos_core_School;
troshx_sos_schools_Noble.prototype = $extend(troshx_sos_core_School.prototype,{
	getSchoolBonuses: function(charSheet) {
		return new troshx_sos_schools_NobleBonuses();
	}
	,__class__: troshx_sos_schools_Noble
});
var troshx_sos_schools_NobleBonuses = function() {
	troshx_sos_core_SchoolBonuses.call(this);
};
$hxClasses["troshx.sos.schools.NobleBonuses"] = troshx_sos_schools_NobleBonuses;
troshx_sos_schools_NobleBonuses.__name__ = ["troshx","sos","schools","NobleBonuses"];
troshx_sos_schools_NobleBonuses.__super__ = troshx_sos_core_SchoolBonuses;
troshx_sos_schools_NobleBonuses.prototype = $extend(troshx_sos_core_SchoolBonuses.prototype,{
	getTags: function() {
		return ["Superior Instruction","Confidence"];
	}
	,getUIFields: function() {
		return [];
	}
	,__class__: troshx_sos_schools_NobleBonuses
});
var troshx_sos_schools_Officer = function() {
	troshx_sos_core_School.call(this,"Officer",4,3);
	this.costMoney = troshx_sos_core_Money.create(5,0,0);
};
$hxClasses["troshx.sos.schools.Officer"] = troshx_sos_schools_Officer;
troshx_sos_schools_Officer.__name__ = ["troshx","sos","schools","Officer"];
troshx_sos_schools_Officer.__super__ = troshx_sos_core_School;
troshx_sos_schools_Officer.prototype = $extend(troshx_sos_core_School.prototype,{
	getSchoolBonuses: function(charSheet) {
		return new troshx_sos_schools_OfficerBonuses();
	}
	,__class__: troshx_sos_schools_Officer
});
var troshx_sos_schools_OfficerBonuses = function() {
	this.__hasUIFields__ = true;
	this.choice2 = "Protect the Banner!";
	troshx_sos_core_SchoolBonuses.call(this);
};
$hxClasses["troshx.sos.schools.OfficerBonuses"] = troshx_sos_schools_OfficerBonuses;
troshx_sos_schools_OfficerBonuses.__name__ = ["troshx","sos","schools","OfficerBonuses"];
troshx_sos_schools_OfficerBonuses.__super__ = troshx_sos_core_SchoolBonuses;
troshx_sos_schools_OfficerBonuses.prototype = $extend(troshx_sos_core_SchoolBonuses.prototype,{
	getTags: function() {
		return ["By Example!",this.choice2];
	}
	,getUIFields: function() {
		return [{ prop : "choice2", type : "SingleSelectionStr", label : "Choose Benefit #2", labels : ["Protect the Banner!","Ride to Ruin!"]}];
	}
	,__class__: troshx_sos_schools_OfficerBonuses
});
var troshx_sos_schools_Schools = function() { };
$hxClasses["troshx.sos.schools.Schools"] = troshx_sos_schools_Schools;
troshx_sos_schools_Schools.__name__ = ["troshx","sos","schools","Schools"];
troshx_sos_schools_Schools.getList = function() {
	if(troshx_sos_schools_Schools.LIST != null) {
		return troshx_sos_schools_Schools.LIST;
	} else {
		return troshx_sos_schools_Schools.LIST = troshx_sos_schools_Schools.getNewList();
	}
};
troshx_sos_schools_Schools.getNewList = function() {
	return [new troshx_sos_schools_Scrapper(),new troshx_sos_schools_Soldier(),new troshx_sos_schools_Officer(),new troshx_sos_schools_Noble(),new troshx_sos_schools_TraditionalFencer(),new troshx_sos_schools_UnorthodoxFencer(),new troshx_sos_schools_EsotericSchool()];
};
var troshx_sos_schools_Scrapper = function() {
	troshx_sos_core_School.call(this,"Scrapper",4,0);
};
$hxClasses["troshx.sos.schools.Scrapper"] = troshx_sos_schools_Scrapper;
troshx_sos_schools_Scrapper.__name__ = ["troshx","sos","schools","Scrapper"];
troshx_sos_schools_Scrapper.__super__ = troshx_sos_core_School;
troshx_sos_schools_Scrapper.prototype = $extend(troshx_sos_core_School.prototype,{
	getSchoolBonuses: function(charSheet) {
		return new troshx_sos_schools_ScrapperBonuses();
	}
	,__class__: troshx_sos_schools_Scrapper
});
var troshx_sos_schools_ScrapperBonuses = function() {
	troshx_sos_core_SchoolBonuses.call(this);
};
$hxClasses["troshx.sos.schools.ScrapperBonuses"] = troshx_sos_schools_ScrapperBonuses;
troshx_sos_schools_ScrapperBonuses.__name__ = ["troshx","sos","schools","ScrapperBonuses"];
troshx_sos_schools_ScrapperBonuses.__super__ = troshx_sos_core_SchoolBonuses;
troshx_sos_schools_ScrapperBonuses.prototype = $extend(troshx_sos_core_SchoolBonuses.prototype,{
	getTags: function() {
		return ["Dirty Trick","Grapple"];
	}
	,getUIFields: function() {
		return [];
	}
	,__class__: troshx_sos_schools_ScrapperBonuses
});
var troshx_sos_schools_Soldier = function() {
	troshx_sos_core_School.call(this,"Soldier",10,1);
	this.staticModifiers = troshx_sos_core_StaticModifier.create(20,"Warrior's Grit",2);
};
$hxClasses["troshx.sos.schools.Soldier"] = troshx_sos_schools_Soldier;
troshx_sos_schools_Soldier.__name__ = ["troshx","sos","schools","Soldier"];
troshx_sos_schools_Soldier.__super__ = troshx_sos_core_School;
troshx_sos_schools_Soldier.prototype = $extend(troshx_sos_core_School.prototype,{
	getSchoolBonuses: function(charSheet) {
		return new troshx_sos_schools_SoldierBonuses();
	}
	,__class__: troshx_sos_schools_Soldier
});
var troshx_sos_schools_SoldierBonuses = function() {
	troshx_sos_core_SchoolBonuses.call(this);
};
$hxClasses["troshx.sos.schools.SoldierBonuses"] = troshx_sos_schools_SoldierBonuses;
troshx_sos_schools_SoldierBonuses.__name__ = ["troshx","sos","schools","SoldierBonuses"];
troshx_sos_schools_SoldierBonuses.__super__ = troshx_sos_core_SchoolBonuses;
troshx_sos_schools_SoldierBonuses.prototype = $extend(troshx_sos_core_SchoolBonuses.prototype,{
	getTags: function() {
		return ["Discipline","Warrior's Grit"];
	}
	,getUIFields: function() {
		return [];
	}
	,__class__: troshx_sos_schools_SoldierBonuses
});
var troshx_sos_schools_TraditionalFencer = function() {
	troshx_sos_core_School.call(this,"Traditional Fencer",4,5);
	this.costMoney = troshx_sos_core_Money.create(10,0,0);
};
$hxClasses["troshx.sos.schools.TraditionalFencer"] = troshx_sos_schools_TraditionalFencer;
troshx_sos_schools_TraditionalFencer.__name__ = ["troshx","sos","schools","TraditionalFencer"];
troshx_sos_schools_TraditionalFencer.__super__ = troshx_sos_core_School;
troshx_sos_schools_TraditionalFencer.prototype = $extend(troshx_sos_core_School.prototype,{
	getSchoolBonuses: function(charSheet) {
		return new troshx_sos_schools_TraditionalFencerBonuses();
	}
	,__class__: troshx_sos_schools_TraditionalFencer
});
var troshx_sos_schools_TraditionalFencerBonuses = function() {
	troshx_sos_core_SchoolBonuses.call(this);
};
$hxClasses["troshx.sos.schools.TraditionalFencerBonuses"] = troshx_sos_schools_TraditionalFencerBonuses;
troshx_sos_schools_TraditionalFencerBonuses.__name__ = ["troshx","sos","schools","TraditionalFencerBonuses"];
troshx_sos_schools_TraditionalFencerBonuses.__super__ = troshx_sos_core_SchoolBonuses;
troshx_sos_schools_TraditionalFencerBonuses.prototype = $extend(troshx_sos_core_SchoolBonuses.prototype,{
	getTags: function() {
		return ["Extreme Repetition","Centered"];
	}
	,getUIFields: function() {
		return [];
	}
	,__class__: troshx_sos_schools_TraditionalFencerBonuses
});
var troshx_sos_schools_UnorthodoxFencer = function() {
	troshx_sos_core_School.call(this,"Unorthodox Fencer",6,5);
	this.costMoney = troshx_sos_core_Money.create(5,0,0);
};
$hxClasses["troshx.sos.schools.UnorthodoxFencer"] = troshx_sos_schools_UnorthodoxFencer;
troshx_sos_schools_UnorthodoxFencer.__name__ = ["troshx","sos","schools","UnorthodoxFencer"];
troshx_sos_schools_UnorthodoxFencer.__super__ = troshx_sos_core_School;
troshx_sos_schools_UnorthodoxFencer.prototype = $extend(troshx_sos_core_School.prototype,{
	getSchoolBonuses: function(charSheet) {
		return new troshx_sos_schools_UnorthodoxFencerBonuses();
	}
	,__class__: troshx_sos_schools_UnorthodoxFencer
});
var troshx_sos_schools_UnorthodoxFencerBonuses = function() {
	troshx_sos_core_SchoolBonuses.call(this);
};
$hxClasses["troshx.sos.schools.UnorthodoxFencerBonuses"] = troshx_sos_schools_UnorthodoxFencerBonuses;
troshx_sos_schools_UnorthodoxFencerBonuses.__name__ = ["troshx","sos","schools","UnorthodoxFencerBonuses"];
troshx_sos_schools_UnorthodoxFencerBonuses.__super__ = troshx_sos_core_SchoolBonuses;
troshx_sos_schools_UnorthodoxFencerBonuses.prototype = $extend(troshx_sos_core_SchoolBonuses.prototype,{
	getTags: function() {
		return ["The Meisterhau","Treachery"];
	}
	,getUIFields: function() {
		return [];
	}
	,__class__: troshx_sos_schools_UnorthodoxFencerBonuses
});
var troshx_sos_sheets_CharSheet = function() {
	this.woundHash = { };
	this.wounds = [];
	this.body = troshx_sos_core_BodyChar.getInstance();
	this.inventory = new troshx_sos_core_Inventory();
	this.arcFlaw = "";
	this.arcGlory = "";
	this.arcBelief = "";
	this.arcEpic = "";
	this.arcSaga = "";
	this.arcSpent = 0;
	this.arcPointsAccum = 0;
	this.banes = new troshx_ds_HashedArray();
	this.boons = new troshx_ds_HashedArray();
	this.direPast = false;
	this.talents = [];
	this.skills = troshx_sos_core_SkillTable.getNewEmptySkillTable(troshx_sos_core_SkillTable.getDefaultSkillTable());
	this.wealthAssetAssignCount = 0;
	this.wealthAssets = [];
	this.socialClass = new troshx_sos_core_SocialClass("",new troshx_sos_core_Money(),0);
	this.money = new troshx_sos_core_Money();
	this.situationalModifierTable = troshx_sos_core_Modifier.getSituationalModifierSlots();
	this.staticModifierTable = troshx_sos_core_Modifier.getStaticModifierSlots();
	this.ingame = false;
	this.fatique = 0;
	this.talentNotes = [];
	this.masteryManueverNotes = [];
	this.superiorManueverNotes = [];
	this.profsCustom = null;
	this.profsRanged = 0;
	this.profsMelee = 0;
	this.schoolLevel = 0;
	this.schoolBonuses = null;
	this.school = null;
	this.gritAccum = 0;
	this.prone = false;
	this.healthLoss = 0;
	this.version = 2;
	this.perception = 1;
	this.intelligence = 1;
	this.wit = 1;
	this.willpower = 1;
	this.health = 1;
	this.endurance = 1;
	this.agility = 1;
	this.strength = 1;
	this.age = -1;
	this.leftHanded = false;
	this.gender = 0;
	this.race = null;
	this.title = "";
	this.notes = "";
	this.faction = "";
	this.nickname = "";
	this.name = "";
};
$hxClasses["troshx.sos.sheets.CharSheet"] = troshx_sos_sheets_CharSheet;
troshx_sos_sheets_CharSheet.__name__ = ["troshx","sos","sheets","CharSheet"];
troshx_sos_sheets_CharSheet.getTotalLiquidity = function(wealthAssets,customLen) {
	if(customLen == null) {
		customLen = 0;
	}
	var i = customLen != 0 ? customLen : wealthAssets.length;
	var c = 0;
	while(--i > -1) {
		var w = wealthAssets[i];
		c += w.liquidate ? w.worth * 6 : 0;
	}
	return c;
};
troshx_sos_sheets_CharSheet.dynSetField = function(obj,prop,val) {
	obj[prop] = val;
};
troshx_sos_sheets_CharSheet.dynDelField = function(woundHash,uid) {
	Reflect.deleteField(woundHash,uid);
};
troshx_sos_sheets_CharSheet.prototype = {
	get_uid: function() {
		return (this.title != "" ? this.title + " " : "") + this.name + (this.nickname != "" ? " \"" + this.nickname + "\"" : "") + (this.faction != "" ? " of " + this.faction : "");
	}
	,set_race: function(r) {
		var oldR = this.race;
		if(oldR != r) {
			if(oldR != null) {
				var modifier = oldR.staticModifiers;
				if(modifier != null) {
					var t = this.staticModifierTable[modifier.index];
					var s = t.splice(t.indexOf(modifier),1);
					var m = modifier.next;
					while(m != null) {
						t = this.staticModifierTable[m.index];
						s = t.splice(t.indexOf(m),1);
						m = m.next;
					}
				}
				var modifier1 = oldR.situationalModifiers;
				if(modifier1 != null) {
					var t1 = this.situationalModifierTable[modifier1.index];
					var s1 = t1.splice(t1.indexOf(modifier1),1);
					var m1 = modifier1.next;
					while(m1 != null) {
						t1 = this.situationalModifierTable[m1.index];
						s1 = t1.splice(t1.indexOf(m1),1);
						m1 = m1.next;
					}
				}
			}
			if(r != null) {
				var modifier2 = r.staticModifiers;
				if(modifier2 != null) {
					var t2 = this.staticModifierTable[modifier2.index];
					t2.push(modifier2);
					var m2 = modifier2.next;
					while(m2 != null) {
						t2 = this.staticModifierTable[m2.index];
						t2.push(m2);
						m2 = m2.next;
					}
				}
				var modifier3 = r.situationalModifiers;
				if(modifier3 != null) {
					var t3 = this.situationalModifierTable[modifier3.index];
					t3.push(modifier3);
					var m3 = modifier3.next;
					while(m3 != null) {
						t3 = this.situationalModifierTable[m3.index];
						t3.push(m3);
						m3 = m3.next;
					}
				}
			}
			this.race = r;
		}
		return r;
	}
	,get_labelGender: function() {
		if(this.gender == 0) {
			return "Male";
		} else {
			return "Female";
		}
	}
	,postSerialization: function() {
		this.postSerialize_2();
	}
	,postSerialize_2: function() {
		if(this.version == null || this.version < 2) {
			this.version = 2;
		} else {
			return false;
		}
		if(!this.ingame) {
			this.ingame = true;
		}
		if(this.healthLoss == null) {
			this.healthLoss = 0;
		}
		if(this.prone == null) {
			this.prone = false;
		}
		this.inventory.postSerialization();
		return true;
	}
	,get_STR: function() {
		return this.clampIntZero(this.getModifiedValue(0,this.strength));
	}
	,get_AGI: function() {
		return this.clampIntZero(this.getModifiedValue(1,this.agility));
	}
	,get_END: function() {
		return this.clampIntZero(this.getModifiedValue(2,this.endurance));
	}
	,get_HLT: function() {
		return Math.floor(this.getModifiedValue(3,this.health)) - this.healthLoss;
	}
	,get_WIP: function() {
		return this.clampIntZero(this.getModifiedValue(4,this.willpower));
	}
	,get_WIT: function() {
		return this.clampIntZero(this.getModifiedValue(5,this.wit));
	}
	,get_INT: function() {
		return this.clampIntZero(this.getModifiedValue(6,this.intelligence));
	}
	,get_PER: function() {
		return this.clampIntZero(this.getModifiedValue(7,this.perception));
	}
	,set_school: function(r) {
		var oldR = this.school;
		if(oldR != r) {
			if(oldR != null) {
				var modifier = oldR.staticModifiers;
				if(modifier != null) {
					var t = this.staticModifierTable[modifier.index];
					var s = t.splice(t.indexOf(modifier),1);
					var m = modifier.next;
					while(m != null) {
						t = this.staticModifierTable[m.index];
						s = t.splice(t.indexOf(m),1);
						m = m.next;
					}
				}
				var modifier1 = oldR.situationalModifiers;
				if(modifier1 != null) {
					var t1 = this.situationalModifierTable[modifier1.index];
					var s1 = t1.splice(t1.indexOf(modifier1),1);
					var m1 = modifier1.next;
					while(m1 != null) {
						t1 = this.situationalModifierTable[m1.index];
						s1 = t1.splice(t1.indexOf(m1),1);
						m1 = m1.next;
					}
				}
			}
			if(r != null) {
				var modifier2 = r.staticModifiers;
				if(modifier2 != null) {
					var t2 = this.staticModifierTable[modifier2.index];
					t2.push(modifier2);
					var m2 = modifier2.next;
					while(m2 != null) {
						t2 = this.staticModifierTable[m2.index];
						t2.push(m2);
						m2 = m2.next;
					}
				}
				var modifier3 = r.situationalModifiers;
				if(modifier3 != null) {
					var t3 = this.situationalModifierTable[modifier3.index];
					t3.push(modifier3);
					var m3 = modifier3.next;
					while(m3 != null) {
						t3 = this.situationalModifierTable[m3.index];
						t3.push(m3);
						m3 = m3.next;
					}
				}
			}
			this.school = r;
		}
		return r;
	}
	,set_schoolBonuses: function(r) {
		var oldR = this.schoolBonuses;
		if(oldR != r) {
			if(oldR != null) {
				var modifier = oldR.situationalModifiers;
				if(modifier != null) {
					var t = this.situationalModifierTable[modifier.index];
					var s = t.splice(t.indexOf(modifier),1);
					var m = modifier.next;
					while(m != null) {
						t = this.situationalModifierTable[m.index];
						s = t.splice(t.indexOf(m),1);
						m = m.next;
					}
				}
			}
			if(r != null) {
				var modifier1 = r.situationalModifiers;
				if(modifier1 != null) {
					var t1 = this.situationalModifierTable[modifier1.index];
					t1.push(modifier1);
					var m1 = modifier1.next;
					while(m1 != null) {
						t1 = this.situationalModifierTable[m1.index];
						t1.push(m1);
						m1 = m1.next;
					}
				}
			}
			this.schoolBonuses = r;
		}
		return r;
	}
	,get_assetWorth: function() {
		var i = this.wealthAssets.length;
		var c = 0;
		while(--i > -1) c += this.wealthAssets[i].worth;
		return c;
	}
	,getAssetsWithWorth: function(worth) {
		var arr = [];
		var _g1 = 0;
		var _g = this.wealthAssets.length;
		while(_g1 < _g) {
			var i = _g1++;
			var w = this.wealthAssets[i];
			if(w.worth == worth) {
				arr.push(w);
			}
		}
		return arr;
	}
	,getEmptyWealthAssetAssign: function(worth) {
		var w = { name : "", liquidate : false, uid : this.wealthAssetAssignCount, worth : worth};
		this.wealthAssetAssignCount++;
		return w;
	}
	,get_assetLiquidateTotal: function() {
		return troshx_sos_sheets_CharSheet.getTotalLiquidity(this.wealthAssets);
	}
	,get_boonsArray: function() {
		return this.boons.list;
	}
	,addBoon: function(assign) {
		this.boons.add(assign);
	}
	,removeBoon: function(assign) {
		this.boons["delete"](assign);
	}
	,get_banesArray: function() {
		return this.banes.list;
	}
	,addBane: function(assign) {
		this.banes.add(assign);
	}
	,removeBane: function(assign) {
		this.banes["delete"](assign);
	}
	,mayRemoveBane: function(assign) {
		if(this.banes.contains(assign)) {
			this.banes["delete"](assign);
		}
	}
	,boonRankUpdated: function(assign,newRank,oldRank) {
		if(oldRank > 0) {
			if(assign.boon.staticModifiers != null && assign.boon.staticModifiers.length >= oldRank) {
				var modifier = assign.boon.staticModifiers[oldRank - 1];
				if(modifier != null) {
					var t = this.staticModifierTable[modifier.index];
					var s = t.splice(t.indexOf(modifier),1);
					var m = modifier.next;
					while(m != null) {
						t = this.staticModifierTable[m.index];
						s = t.splice(t.indexOf(m),1);
						m = m.next;
					}
				}
			}
			if(assign.boon.situationalModifiers != null && assign.boon.situationalModifiers.length >= oldRank) {
				var modifier1 = assign.boon.situationalModifiers[oldRank - 1];
				if(modifier1 != null) {
					var t1 = this.situationalModifierTable[modifier1.index];
					var s1 = t1.splice(t1.indexOf(modifier1),1);
					var m1 = modifier1.next;
					while(m1 != null) {
						t1 = this.situationalModifierTable[m1.index];
						s1 = t1.splice(t1.indexOf(m1),1);
						m1 = m1.next;
					}
				}
			}
			if(assign.situationalModifiers != null && assign.situationalModifiers.length >= oldRank) {
				var modifier2 = assign.situationalModifiers[oldRank - 1];
				if(modifier2 != null) {
					var t2 = this.situationalModifierTable[modifier2.index];
					var s2 = t2.splice(t2.indexOf(modifier2),1);
					var m2 = modifier2.next;
					while(m2 != null) {
						t2 = this.situationalModifierTable[m2.index];
						s2 = t2.splice(t2.indexOf(m2),1);
						m2 = m2.next;
					}
				}
			}
		}
		if(newRank > 0) {
			if(assign.boon.staticModifiers != null && assign.boon.staticModifiers.length >= newRank) {
				var modifier3 = assign.boon.staticModifiers[newRank - 1];
				if(modifier3 != null) {
					var t3 = this.staticModifierTable[modifier3.index];
					t3.push(modifier3);
					var m3 = modifier3.next;
					while(m3 != null) {
						t3 = this.staticModifierTable[m3.index];
						t3.push(m3);
						m3 = m3.next;
					}
				}
			}
			if(assign.boon.situationalModifiers != null && assign.boon.situationalModifiers.length >= newRank) {
				var modifier4 = assign.boon.situationalModifiers[newRank - 1];
				if(modifier4 != null) {
					var t4 = this.situationalModifierTable[modifier4.index];
					t4.push(modifier4);
					var m4 = modifier4.next;
					while(m4 != null) {
						t4 = this.situationalModifierTable[m4.index];
						t4.push(m4);
						m4 = m4.next;
					}
				}
			}
			if(assign.situationalModifiers != null && assign.situationalModifiers.length >= newRank) {
				var modifier5 = assign.situationalModifiers[newRank - 1];
				if(modifier5 != null) {
					var t5 = this.situationalModifierTable[modifier5.index];
					t5.push(modifier5);
					var m5 = modifier5.next;
					while(m5 != null) {
						t5 = this.situationalModifierTable[m5.index];
						t5.push(m5);
						m5 = m5.next;
					}
				}
			}
		}
	}
	,baneRankUpdated: function(assign,newRank,oldRank) {
		if(oldRank > 0) {
			if(assign.bane.staticModifiers != null && assign.bane.staticModifiers.length >= oldRank) {
				var modifier = assign.bane.staticModifiers[oldRank - 1];
				if(modifier != null) {
					var t = this.staticModifierTable[modifier.index];
					var s = t.splice(t.indexOf(modifier),1);
					var m = modifier.next;
					while(m != null) {
						t = this.staticModifierTable[m.index];
						s = t.splice(t.indexOf(m),1);
						m = m.next;
					}
				}
			}
			if(assign.bane.situationalModifiers != null && assign.bane.situationalModifiers.length >= oldRank) {
				var modifier1 = assign.bane.situationalModifiers[oldRank - 1];
				if(modifier1 != null) {
					var t1 = this.situationalModifierTable[modifier1.index];
					var s1 = t1.splice(t1.indexOf(modifier1),1);
					var m1 = modifier1.next;
					while(m1 != null) {
						t1 = this.situationalModifierTable[m1.index];
						s1 = t1.splice(t1.indexOf(m1),1);
						m1 = m1.next;
					}
				}
			}
			if(assign.situationalModifiers != null && assign.situationalModifiers.length >= oldRank) {
				var modifier2 = assign.situationalModifiers[oldRank - 1];
				if(modifier2 != null) {
					var t2 = this.situationalModifierTable[modifier2.index];
					var s2 = t2.splice(t2.indexOf(modifier2),1);
					var m2 = modifier2.next;
					while(m2 != null) {
						t2 = this.situationalModifierTable[m2.index];
						s2 = t2.splice(t2.indexOf(m2),1);
						m2 = m2.next;
					}
				}
			}
		}
		if(newRank > 0) {
			if(assign.bane.staticModifiers != null && assign.bane.staticModifiers.length >= newRank) {
				var modifier3 = assign.bane.staticModifiers[newRank - 1];
				if(modifier3 != null) {
					var t3 = this.staticModifierTable[modifier3.index];
					t3.push(modifier3);
					var m3 = modifier3.next;
					while(m3 != null) {
						t3 = this.staticModifierTable[m3.index];
						t3.push(m3);
						m3 = m3.next;
					}
				}
			}
			if(assign.bane.situationalModifiers != null && assign.bane.situationalModifiers.length >= newRank) {
				var modifier4 = assign.bane.situationalModifiers[newRank - 1];
				if(modifier4 != null) {
					var t4 = this.situationalModifierTable[modifier4.index];
					t4.push(modifier4);
					var m4 = modifier4.next;
					while(m4 != null) {
						t4 = this.situationalModifierTable[m4.index];
						t4.push(m4);
						m4 = m4.next;
					}
				}
			}
			if(assign.situationalModifiers != null && assign.situationalModifiers.length >= newRank) {
				var modifier5 = assign.situationalModifiers[newRank - 1];
				if(modifier5 != null) {
					var t5 = this.situationalModifierTable[modifier5.index];
					t5.push(modifier5);
					var m5 = modifier5.next;
					while(m5 != null) {
						t5 = this.situationalModifierTable[m5.index];
						t5.push(m5);
						m5 = m5.next;
					}
				}
			}
		}
	}
	,boonRankCanceledChange: function(assign,newCanceled,oldCanceled) {
		this.boonRankUpdated(assign,newCanceled ? 0 : assign.rank,oldCanceled ? 0 : assign.rank);
	}
	,baneRankCanceledChange: function(assign,newCanceled,oldCanceled) {
		this.baneRankUpdated(assign,newCanceled ? 0 : assign.rank,oldCanceled ? 0 : assign.rank);
	}
	,boonAssignReplaced: function(newAssign,oldAssign) {
		if(oldAssign.boon.staticModifiers != null && oldAssign.boon.staticModifiers.length >= oldAssign.rank) {
			var modifier = oldAssign.boon.staticModifiers[oldAssign.rank - 1];
			if(modifier != null) {
				var t = this.staticModifierTable[modifier.index];
				var s = t.splice(t.indexOf(modifier),1);
				var m = modifier.next;
				while(m != null) {
					t = this.staticModifierTable[m.index];
					s = t.splice(t.indexOf(m),1);
					m = m.next;
				}
			}
		}
		if(oldAssign.boon.situationalModifiers != null && oldAssign.boon.situationalModifiers.length >= oldAssign.rank) {
			var modifier1 = oldAssign.boon.situationalModifiers[oldAssign.rank - 1];
			if(modifier1 != null) {
				var t1 = this.situationalModifierTable[modifier1.index];
				var s1 = t1.splice(t1.indexOf(modifier1),1);
				var m1 = modifier1.next;
				while(m1 != null) {
					t1 = this.situationalModifierTable[m1.index];
					s1 = t1.splice(t1.indexOf(m1),1);
					m1 = m1.next;
				}
			}
		}
		if(oldAssign.situationalModifiers != null && oldAssign.situationalModifiers.length >= oldAssign.rank) {
			var modifier2 = oldAssign.situationalModifiers[oldAssign.rank - 1];
			if(modifier2 != null) {
				var t2 = this.situationalModifierTable[modifier2.index];
				var s2 = t2.splice(t2.indexOf(modifier2),1);
				var m2 = modifier2.next;
				while(m2 != null) {
					t2 = this.situationalModifierTable[m2.index];
					s2 = t2.splice(t2.indexOf(m2),1);
					m2 = m2.next;
				}
			}
		}
		if(newAssign.boon.staticModifiers != null && newAssign.boon.staticModifiers.length >= newAssign.rank) {
			var modifier3 = newAssign.boon.staticModifiers[newAssign.rank - 1];
			if(modifier3 != null) {
				var t3 = this.staticModifierTable[modifier3.index];
				t3.push(modifier3);
				var m3 = modifier3.next;
				while(m3 != null) {
					t3 = this.staticModifierTable[m3.index];
					t3.push(m3);
					m3 = m3.next;
				}
			}
		}
		if(newAssign.boon.situationalModifiers != null && newAssign.boon.situationalModifiers.length >= newAssign.rank) {
			var modifier4 = newAssign.boon.situationalModifiers[newAssign.rank - 1];
			if(modifier4 != null) {
				var t4 = this.situationalModifierTable[modifier4.index];
				t4.push(modifier4);
				var m4 = modifier4.next;
				while(m4 != null) {
					t4 = this.situationalModifierTable[m4.index];
					t4.push(m4);
					m4 = m4.next;
				}
			}
		}
		if(newAssign.situationalModifiers != null && newAssign.situationalModifiers.length >= newAssign.rank) {
			var modifier5 = newAssign.situationalModifiers[newAssign.rank - 1];
			if(modifier5 != null) {
				var t5 = this.situationalModifierTable[modifier5.index];
				t5.push(modifier5);
				var m5 = modifier5.next;
				while(m5 != null) {
					t5 = this.situationalModifierTable[m5.index];
					t5.push(m5);
					m5 = m5.next;
				}
			}
		}
	}
	,removeStaticModifier: function(modifier) {
		if(modifier != null) {
			var t = this.staticModifierTable[modifier.index];
			var s = t.splice(t.indexOf(modifier),1);
			var m = modifier.next;
			while(m != null) {
				t = this.staticModifierTable[m.index];
				s = t.splice(t.indexOf(m),1);
				m = m.next;
			}
		}
	}
	,removeSituationalModifier: function(modifier) {
		if(modifier != null) {
			var t = this.situationalModifierTable[modifier.index];
			var s = t.splice(t.indexOf(modifier),1);
			var m = modifier.next;
			while(m != null) {
				t = this.situationalModifierTable[m.index];
				s = t.splice(t.indexOf(m),1);
				m = m.next;
			}
		}
	}
	,addStaticModifier: function(modifier) {
		if(modifier != null) {
			var t = this.staticModifierTable[modifier.index];
			t.push(modifier);
			var m = modifier.next;
			while(m != null) {
				t = this.staticModifierTable[m.index];
				t.push(m);
				m = m.next;
			}
		}
	}
	,addSituationalModifier: function(modifier) {
		if(modifier != null) {
			var t = this.situationalModifierTable[modifier.index];
			t.push(modifier);
			var m = modifier.next;
			while(m != null) {
				t = this.situationalModifierTable[m.index];
				t.push(m);
				m = m.next;
			}
		}
	}
	,getModifiedValue: function(modifierIndex,base) {
		var staticList = this.staticModifierTable[modifierIndex];
		var val = base;
		var _g1 = 0;
		var _g = staticList.length;
		while(_g1 < _g) {
			var i = _g1++;
			var s = staticList[i];
			val *= s.multiply;
		}
		var _g11 = 0;
		var _g2 = staticList.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var s1 = staticList[i1];
			val += s1.add;
		}
		var situationalList = this.situationalModifierTable[modifierIndex];
		var _g12 = 0;
		var _g3 = situationalList.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var s2 = situationalList[i2];
			val = s2.getModifiedValueMultiply(this,base,val);
		}
		var _g13 = 0;
		var _g4 = situationalList.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			var s3 = situationalList[i3];
			val = s3.getModifiedValueAdd(this,base,val);
		}
		return val;
	}
	,get_totalWeight: function() {
		return this.inventory.calculateTotalWeight();
	}
	,applyWound: function(w) {
		var uid = w.getUID(this.body);
		if(!Object.prototype.hasOwnProperty.call(this.woundHash,uid)) {
			troshx_sos_sheets_CharSheet.dynSetField(this.woundHash,uid,w);
			this.wounds.push(w);
		} else {
			var fw = this.woundHash[uid];
			fw.updateAgainst(w);
		}
	}
	,hasWound: function(w) {
		var uid = w.getUID(this.body);
		return Object.prototype.hasOwnProperty.call(this.woundHash,uid);
	}
	,getWound: function(w) {
		return this.woundHash[w.getUID(this.body)];
	}
	,removeWound: function(w) {
		var uid = w.getUID(this.body);
		if(Object.prototype.hasOwnProperty.call(this.woundHash,uid)) {
			troshx_sos_sheets_CharSheet.dynDelField(this.woundHash,uid);
		} else {
			console.log("Warning: No wound found to be removed for uid:" + w.getUID(this.body));
		}
		var index = this.wounds.indexOf(w);
		if(index >= 0) {
			this.wounds.splice(index,1);
		} else {
			console.log("Warning: No wound found to be removed for array index:" + index);
		}
	}
	,wealthAssetsWorth: function() {
		var i = this.wealthAssets.length;
		var c = 0;
		while(--i > -1) c += this.wealthAssets[i].worth;
		return c;
	}
	,get_totalPain: function() {
		var c = 0;
		var gotInfinite = false;
		var _g1 = 0;
		var _g = this.wounds.length;
		while(_g1 < _g) {
			var i = _g1++;
			var w = this.wounds[i];
			c += (w.flags & 2) != 0 ? Math.floor(w.pain * .5) : w.pain;
			if(w.pain < 0) {
				gotInfinite = true;
			}
		}
		if(gotInfinite) {
			return 999999999;
		} else {
			return c;
		}
	}
	,get_totalBloodLost: function() {
		var c = 0;
		var _g1 = 0;
		var _g = this.wounds.length;
		while(_g1 < _g) {
			var i = _g1++;
			var w = this.wounds[i];
			c += (w.flags & 3) == 0 ? w.BL : 0;
		}
		return c;
	}
	,get_adr: function() {
		return (this.agility + this.wit) / 2 | 0;
	}
	,get_mob: function() {
		return (this.strength + this.agility + this.endurance) / 2 | 0;
	}
	,get_car: function() {
		return this.strength + this.endurance;
	}
	,get_cha: function() {
		return (this.willpower + this.wit + this.perception) / 2 | 0;
	}
	,get_tou: function() {
		return 4;
	}
	,get_ADR: function() {
		return this.clampIntZero(this.getModifiedValue(8,(this.agility + this.wit) / 2 | 0));
	}
	,get_MOB: function() {
		var row = this.get_encumbranceLvlRow();
		return row.mobMult * this.clampIntZero(this.getModifiedValue(9,(this.strength + this.agility + this.endurance) / 2 | 0) + row.mob + troshx_sos_sheets_FatiqueTable.getTable()[this.get_fatiqueLevel()].mob);
	}
	,get_CAR: function() {
		return this.clampIntZero(this.getModifiedValue(10,this.clampIntZero(this.getModifiedValue(16,this.strength + this.endurance))));
	}
	,get_CHA: function() {
		return this.clampIntZero(this.getModifiedValue(11,(this.willpower + this.wit + this.perception) / 2 | 0));
	}
	,get_startingGrit: function() {
		return this.clampIntZero(this.getModifiedValue(20,this.willpower / 2 | 0));
	}
	,get_GRIT: function() {
		return this.clampIntZero(this.getModifiedValue(20,this.willpower / 2 | 0)) + this.gritAccum | 0;
	}
	,get_baseGrit: function() {
		return this.willpower / 2 | 0;
	}
	,clampIntZero: function(val) {
		var r = val | 0;
		if(r < 0) {
			return 0;
		} else {
			return r;
		}
	}
	,hasStaticModifier: function(mod) {
		return this.staticModifierTable[mod.index].indexOf(mod) >= 0;
	}
	,hasSituationalCharModifier: function(mod) {
		return this.situationalModifierTable[mod.index].indexOf(mod) >= 0;
	}
	,get_TOU: function() {
		return this.clampIntZero(this.getModifiedValue(12,4));
	}
	,get_SDB: function() {
		return this.get_STR() / 2 | 0;
	}
	,get_labelRace: function() {
		if(this.race != null) {
			return this.race.name;
		} else {
			return "Unspecified";
		}
	}
	,get_labelSchool: function() {
		if(this.school != null) {
			return this.school.name;
		} else {
			return "";
		}
	}
	,get_labelSocialClass: function() {
		if(this.socialClass != null) {
			return this.socialClass.name;
		} else {
			return "";
		}
	}
	,get_baseCP: function() {
		return (this.schoolLevel >= 1 ? this.schoolLevel + 4 : 0) + this.clampIntZero(this.getModifiedValue(8,(this.agility + this.wit) / 2 | 0));
	}
	,get_CP: function() {
		var row = this.get_encumbranceLvlRow();
		return row.cpMult * this.clampIntZero(this.getModifiedValue(13,(this.schoolLevel >= 1 ? this.schoolLevel + 4 : 0) + this.clampIntZero(this.getModifiedValue(8,(this.agility + this.wit) / 2 | 0))) * (this.prone ? 0.5 : 1) + row.cp + troshx_sos_sheets_FatiqueTable.getTable()[this.get_fatiqueLevel()].cp);
	}
	,get_meleeCP: function() {
		var row = this.get_encumbranceLvlRow();
		return row.cpMult * this.clampIntZero(this.getModifiedValue(13,(this.schoolLevel >= 1 ? this.schoolLevel + 4 : 0) + this.clampIntZero(this.getModifiedValue(8,(this.agility + this.wit) / 2 | 0))) * (this.prone ? 0.5 : 1) + row.cp + troshx_sos_sheets_FatiqueTable.getTable()[this.get_fatiqueLevel()].cp) - this.get_totalPain();
	}
	,get_schoolCP: function() {
		if(this.schoolLevel >= 1) {
			return this.schoolLevel + 4;
		} else {
			return 0;
		}
	}
	,get_arcPointsAvailable: function() {
		var r = this.arcPointsAccum - this.arcSpent;
		if(r >= 0) {
			return r;
		} else {
			return 0;
		}
	}
	,get_skillPenalty: function() {
		return this.get_encumbranceLvlRow().skill + troshx_sos_sheets_FatiqueTable.getTable()[this.get_fatiqueLevel()].skill;
	}
	,get_recoveryRate: function() {
		return this.clampIntZero(this.get_encumbranceLvlRow().recovery);
	}
	,get_encumbranceLvlRow: function() {
		var tabler = troshx_sos_sheets_EncumbranceTable.getTable();
		return tabler[Math.floor(this.inventory.calculateTotalWeight() / this.clampIntZero(this.getModifiedValue(10,this.clampIntZero(this.getModifiedValue(16,this.strength + this.endurance))))) >= tabler.length ? tabler.length - 1 : Math.floor(this.inventory.calculateTotalWeight() / this.clampIntZero(this.getModifiedValue(10,this.clampIntZero(this.getModifiedValue(16,this.strength + this.endurance))))) < 0 ? 0 : Math.floor(this.inventory.calculateTotalWeight() / this.clampIntZero(this.getModifiedValue(10,this.clampIntZero(this.getModifiedValue(16,this.strength + this.endurance)))))];
	}
	,get_encumbranceLvl: function() {
		return Math.floor(this.inventory.calculateTotalWeight() / this.clampIntZero(this.getModifiedValue(10,this.clampIntZero(this.getModifiedValue(16,this.strength + this.endurance)))));
	}
	,get_encumberedBeyond: function() {
		return Math.floor(this.inventory.calculateTotalWeight() / this.clampIntZero(this.getModifiedValue(10,this.clampIntZero(this.getModifiedValue(16,this.strength + this.endurance))))) >= 5;
	}
	,get_exhaustionRate: function() {
		return this.get_encumbranceLvlRow().exhaustion;
	}
	,get_fatiqueLevel: function() {
		var hlt = this.get_HLT();
		if(hlt < 0) {
			hlt = 0;
		} else {
			hlt = hlt;
		}
		return troshx_sos_sheets_FatiqueTable.getFatiqueLevel(this.fatique,hlt);
	}
	,get_fatiqueSkillPenalty: function() {
		return troshx_sos_sheets_FatiqueTable.getTable()[this.get_fatiqueLevel()].skill;
	}
	,get_fatiqueMobPenalty: function() {
		return troshx_sos_sheets_FatiqueTable.getTable()[this.get_fatiqueLevel()].mob;
	}
	,get_fatiqueCPPenalty: function() {
		return troshx_sos_sheets_FatiqueTable.getTable()[this.get_fatiqueLevel()].cp;
	}
	,__class__: troshx_sos_sheets_CharSheet
};
var troshx_sos_sheets_EncumbranceTable = function() { };
$hxClasses["troshx.sos.sheets.EncumbranceTable"] = troshx_sos_sheets_EncumbranceTable;
troshx_sos_sheets_EncumbranceTable.__name__ = ["troshx","sos","sheets","EncumbranceTable"];
troshx_sos_sheets_EncumbranceTable.getTable = function() {
	if(troshx_sos_sheets_EncumbranceTable.TABLE != null) {
		return troshx_sos_sheets_EncumbranceTable.TABLE;
	} else {
		return troshx_sos_sheets_EncumbranceTable.TABLE = troshx_sos_sheets_EncumbranceTable.getNewTable();
	}
};
troshx_sos_sheets_EncumbranceTable.getNewTable = function() {
	return [{ name : "Unencumbered", cp : 0, mob : 0, skill : 0, exhaustion : 1, recovery : 1, cpMult : 1, mobMult : 1},{ name : "Light", cp : -1, mob : -2, skill : 1, exhaustion : 1.5, recovery : 1, cpMult : 1, mobMult : 1},{ name : "Medium", cp : -2, mob : -4, skill : 2, exhaustion : 2, recovery : 0.5, cpMult : 1, mobMult : 1},{ name : "Heavy", cp : -3, mob : -6, skill : 3, exhaustion : 3, recovery : 0.25, cpMult : 1, mobMult : 1},{ name : "Overloaded", cp : -4, mob : -8, skill : 4, exhaustion : 3.5, recovery : 0, cpMult : 1, mobMult : 1},{ name : "Beyond Overloaded!", cp : -4, mob : -8, skill : 4, exhaustion : 3.5, recovery : 0, cpMult : 0, mobMult : 0}];
};
var troshx_sos_sheets_FatiqueTable = function() { };
$hxClasses["troshx.sos.sheets.FatiqueTable"] = troshx_sos_sheets_FatiqueTable;
troshx_sos_sheets_FatiqueTable.__name__ = ["troshx","sos","sheets","FatiqueTable"];
troshx_sos_sheets_FatiqueTable.getTable = function() {
	if(troshx_sos_sheets_FatiqueTable.TABLE != null) {
		return troshx_sos_sheets_FatiqueTable.TABLE;
	} else {
		return troshx_sos_sheets_FatiqueTable.TABLE = troshx_sos_sheets_FatiqueTable.getNewTable();
	}
};
troshx_sos_sheets_FatiqueTable.getFatiqueLevel = function(fatique,hlt) {
	var f = Math.ceil((fatique - 5 - hlt) / 5);
	if(f >= 0) {
		if(f < 5) {
			return f;
		} else {
			return 4;
		}
	} else {
		return 0;
	}
};
troshx_sos_sheets_FatiqueTable.getNewTable = function() {
	return [{ name : "Fresh", cp : 0, mob : 0, skill : 0},{ name : "Winded", cp : -1, mob : -1, skill : -1},{ name : "Tired", cp : -2, mob : -2, skill : -2},{ name : "Very Tired", cp : -4, mob : -4, skill : -4},{ name : "Exhausted", cp : -6, mob : -6, skill : -6}];
};
var troshx_sos_vue_CharGen = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_CharVueMixin.getSampleInstance(),new troshx_sos_vue_InventoryStandalone(null)];
};
$hxClasses["troshx.sos.vue.CharGen"] = troshx_sos_vue_CharGen;
troshx_sos_vue_CharGen.__name__ = ["troshx","sos","vue","CharGen"];
troshx_sos_vue_CharGen.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_CharGen.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return new troshx_sos_chargen_CharGenData();
	}
	,Created: function() {
		this.$data.privateInit();
		troshx_sos_sheets_CharSheet.dynSetField = Vue.set;
		troshx_sos_sheets_CharSheet.dynDeleteField = Vue["delete"];
		troshx_sos_chargen_CharGenData.dynSetField = Vue.set;
		troshx_sos_chargen_CharGenData.dynDeleteField = Vue["delete"];
		troshx_sos_chargen_CharGenData.dynSetArray = Vue.set;
	}
	,setInventory: function(chk) {
		this["char"].inventory = chk;
	}
	,watch_maxBoonsSpendableLeft: function(newValue) {
		var arr = this.boonsArray;
		var i = arr.length;
		while(--i > -1) {
			var v = arr[i];
			v._remainingCached = newValue;
		}
	}
	,watch_raceTier: function(newValue) {
		if(this.selectedTierIndex >= newValue) {
			var _this = this.$data;
			_this.selectedTierIndex = 0;
			_this["char"].set_race(_this.raceTierTable[0][0]);
		}
	}
	,watch_socialEitherMaxIndex: function(newValue) {
		this.$data.constraintSocialWealth();
	}
	,watch_wealthEitherMaxIndex: function(newValue) {
		this.$data.constraintSocialWealth();
	}
	,watch_syncSocialWealth: function(newValue) {
		this.$data.constraintSocialWealth();
	}
	,watch_socialClassIndex: function(newValue,lastValue) {
		this.$data.updateSocialToCharsheet();
	}
	,watch_wealthIndex: function(newValue) {
		this.$data.updateMoneyToCharsheet();
	}
	,watch_socialBenefit1: function(newValue,oldValue) {
		this.$data.updateSocialBenefitsToBoon(newValue,oldValue);
	}
	,watch_socialBenefit2: function(newValue,oldValue) {
		this.$data.updateSocialBenefitsToBoon(newValue,oldValue);
	}
	,watch_socialBenefit3: function(newValue,oldValue) {
		this.$data.updateSocialBenefitsToBoon(newValue,oldValue);
	}
	,schoolSelectChangeHandler: function(select) {
		var valueAsNum = Std.parseInt(select.value);
		if(valueAsNum >= 0) {
			var s = this.schoolAssignList[valueAsNum];
			this.$data.selectSchoolAssign(s);
		} else {
			this.$data.selectSchoolAssign(null);
		}
	}
	,watch_validAffordCurrentSchool: function(newValue,oldValue) {
		if(!newValue) {
			var s = this.schoolAssignList[0];
			this.$data.selectSchoolAssign(s);
		}
	}
	,get_totalDraftedProfSlots: function() {
		return this.profCoreListRanged.length + this.profCoreListMelee.length;
	}
	,get_maxBuyableProfSlots: function() {
		var rm = this.ProfPoints - this.schoolArcCost - this.levelsExpenditure;
		var cost = this.profArcCost;
		if(cost > 0) {
			rm = rm / cost | 0;
		} else {
			rm = this.totalAvailProfSlots;
		}
		if(this["char"].school != null) {
			return rm;
		} else {
			return 0;
		}
	}
	,get_excessDraftedSlots: function() {
		return this.totalDraftedProfSlots - this.maxBuyableProfSlots;
	}
	,watch_excessDraftedSlots: function(newValue,oldValue) {
		if(newValue < 1) {
			return;
		}
		var a = this.profCoreListRanged;
		var newArr = [];
		var _g1 = 0;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(newValue > 0 && a[i] == 0) {
				--newValue;
			} else {
				newArr.push(a[i]);
			}
		}
		this.profCoreListRanged = newArr;
		if(newValue < 1) {
			return;
		}
		a = this.profCoreListMelee;
		newArr = [];
		var _g11 = 0;
		var _g2 = a.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(newValue > 0 && a[i1] == 0) {
				--newValue;
			} else {
				newArr.push(a[i1]);
			}
		}
		this.profCoreListMelee = newArr;
		if(newValue < 1) {
			return;
		}
		a = this.profCoreListRanged;
		while(--newValue >= 0 && a.length > 0) a.pop();
	}
	,get_validAffordCurrentSchool: function() {
		if(this.hasSchool) {
			if(this["char"].school.canAffordWith(this.ProfPoints,this.moneyAvailable)) {
				return this["char"].school.customRequire(this["char"]);
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,get_notBankrupt: function() {
		return this.moneyLeft.cp >= 0;
	}
	,isValidAll: function(warnings) {
		var score;
		if(this["char"].name == "") {
			warnings.push("Please enter a Character name!");
		}
		var r1 = this.promptSettleRaceTier;
		if(r1) {
			warnings.push("Race: Please Finalise Race tier by clicking on the button!");
		}
		var r2 = this.promptSettleSocialTier;
		if(r2) {
			warnings.push("Social Class: Please Finalise Social class tier by clicking on the button!");
		}
		score = this.categoriesRemainingAssignable;
		var a = score >= 0;
		if(warnings != null) {
			if(a && score > 0) {
				warnings.push("Categories: You still have PCP to spend on categories.");
			}
			if(!a) {
				warnings.push("Categories: You are at a deficit of Character PCP usage!");
			}
		}
		var b;
		score = this.remainingAttributePoints;
		if(score >= 0) {
			b = !this.negativeOrZeroStat;
		} else {
			b = false;
		}
		if(warnings != null) {
			if(b && score > 0) {
				warnings.push("Attributes: You still have Attribute points to spend.");
			}
			if(!b) {
				if(this.negativeOrZeroStat) {
					warnings.push("Attributes: You aren't allowed to checkout with zero or negative core stat!");
				}
				if(score < 0) {
					warnings.push("Attributes: You are at a deficit of Attribute points!");
				}
			}
		}
		score = this.totalBnBScore;
		var c = score >= 0;
		if(warnings != null) {
			if(c && score > 0) {
				warnings.push("Boons & Banes: You still have B&B points to spend.");
			}
			if(!c) {
				warnings.push("Boons & Banes: You still have a deficit of B&B points!");
			}
		}
		var d = this.notBankrupt;
		if(warnings != null) {
			if(!d) {
				warnings.push("Inventory: You have negative cash value!");
			}
		}
		score = this.totalSkillPointsLeft;
		var e = score >= 0;
		if(warnings != null) {
			if(e && score > 0) {
				warnings.push("Skills: You still have skill points left to spend.");
			}
			if(!e) {
				warnings.push("Skills: You are at a deficit of skill points!");
			}
		}
		var f;
		score = this.profPointsLeft;
		if(score >= 0) {
			if(this.ProfPoints == 0) {
				f = true;
			} else {
				f = this["char"].school != null;
			}
		} else {
			f = false;
		}
		if(warnings != null) {
			if(f) {
				if(this.stillHaveProfSpend) {
					warnings.push("School: You can still spend profeciency points on school/school-levels.");
				}
				if(!(this.profCoreListMelee.length >= this.maxMeleeProfSlots && this.traceProfCoreMeleeCount == this.maxMeleeProfSlots)) {
					warnings.push("Profeciencies: You still have have melee profeciency slots to use.");
				}
				if(!(this.profCoreListRanged.length >= this.maxRangedProfSlots && this.traceProfCoreRangedCount == this.maxRangedProfSlots)) {
					warnings.push("Profeciencies: You still have have ranged profeciency slots to use.");
				}
			}
			if(!f) {
				if(score < 0) {
					warnings.push("School & Profeciencies: You are at a deficit of Prof points!");
				}
				if(this.ProfPoints > 0 && this["char"].school == null) {
					warnings.push("School: You must select at least a school (eg. Scrapper) if you have at least 1 Prof point!");
				}
			}
		}
		this.warningMsgs = warnings;
		if(this["char"].name != "" && a && b && c && d && e && f && !r1) {
			return !r2;
		} else {
			return false;
		}
	}
	,get_stillHaveProfSpend: function() {
		var a = this.profPointsLeft > 0;
		var b = this.$data.canStillSpendSchool(this.profPointsLeft);
		if(a) {
			return b;
		} else {
			return false;
		}
	}
	,saveFinaliseAll: function(finalising) {
		if(finalising == null) {
			finalising = false;
		}
		var warnings = finalising ? null : [];
		if(this.isValidAll(warnings)) {
			if(warnings != null && warnings.length > 0) {
				this.$refs.finaliseWarning.open();
				return;
			} else {
				this.$data.saveFinaliseCleanupChar(this.moneyLeft);
				this["char"].ingame = true;
				var savedCharString = this.saveCharToBox();
				if(this.finaliseSaveCallback != null) {
					this.finaliseSaveCallback(savedCharString);
				}
			}
		} else if(warnings != null && warnings.length > 0) {
			this.$refs.finaliseError.open();
		}
	}
	,saveCharToBox: function() {
		var s = new haxe_Serializer();
		s.useCache = true;
		s.serialize(this["char"]);
		var str = s.toString();
		this.savedCharContents = str;
		return str;
	}
	,executeCopyContents: function() {
		var textarea = this.$refs.savedTextArea;
		textarea.select();
		var result = window.document.execCommand("copy");
		if(result != null) {
			var htmlElem = this.$refs.copyNotify;
			htmlElem.style.display = "inline-block";
			haxe_Timer.delay(function() {
				htmlElem.style.display = "none";
			},3000);
		} else {
			js_Browser.alert("Sorry, failed to copy to clipboard!");
		}
	}
	,confirmFinaliseAll: function() {
		this.saveFinaliseAll(true);
	}
	,get_moneyLeft: function() {
		if(this.tempMoneyLeft == null) {
			this.tempMoneyLeft = new troshx_sos_core_Money();
		}
		var tmp = this["char"].school != null && this["char"].school.costMoney != null ? this["char"].school.costMoney : troshx_sos_core_Money.ZERO;
		return this.tempMoneyLeft.matchWith(this.socialClassList[this.wealthIndex].socialClass.money).addValues(this.liquidity,0,0).subtractAgainst(tmp).subtractAgainst(this.inventoryCost).addValues(0,0,this.startingMoneyBonusCP).subtractValues(0,0,this.startingMoneyPenaltyCP);
	}
	,get_moneyLeftStr: function() {
		return this.moneyLeft.changeToHighest().getLabel();
	}
	,get_liquidity: function() {
		var _this = this.$data;
		var len = _this.wealthAssets.length;
		var max = _this.get_maxWealthAssets();
		var len1 = len >= max ? max : len;
		return troshx_sos_sheets_CharSheet.getTotalLiquidity(this.wealthAssets,len1);
	}
	,get_liquidityStr: function() {
		return troshx_sos_core_Money.getLabelWith(this.liquidity,0,0);
	}
	,get_startingMoneyModifiedCP: function() {
		var sample = troshx_sos_vue_CharGen.STARTING_MONEY_MOD != null ? troshx_sos_vue_CharGen.STARTING_MONEY_MOD : troshx_sos_vue_CharGen.STARTING_MONEY_MOD = new troshx_sos_core_Money();
		sample.sp = 0;
		sample.cp = 0;
		sample.gp = 0;
		var _this = this.moneyAvailable;
		var baseCP = _this.gp * 240 + _this.sp * 12 + _this.cp;
		var _this1 = this.moneyAvailable;
		return (this["char"].getModifiedValue(19,_this1.gp * 240 + _this1.sp * 12 + _this1.cp) | 0) - baseCP;
	}
	,get_startingMoneyBonusCP: function() {
		if(this.startingMoneyModifiedCP > 0) {
			return this.startingMoneyModifiedCP;
		} else {
			return 0;
		}
	}
	,get_startingMoneyPenaltyCP: function() {
		if(this.startingMoneyModifiedCP < 0) {
			return -this.startingMoneyModifiedCP;
		} else {
			return 0;
		}
	}
	,get_inventoryCost: function() {
		return this["char"].inventory.calculateTotalCost(true);
	}
	,get_moneyAvailable: function() {
		return this.socialClassList[this.wealthIndex].socialClass.money;
	}
	,get_moneyAvailableStr: function() {
		return this.moneyAvailable.getLabel();
	}
	,get_checkoutBonuses: function() {
		if(this.startingMoneyBonusCP != 0) {
			return troshx_sos_core_Money.TEMP.matchWith(troshx_sos_core_Money.ZERO).matchWithValues(0,0,this.startingMoneyBonusCP).changeToHighest().getLabel();
		} else {
			return "0";
		}
	}
	,get_checkoutPenalties: function() {
		if(this.startingMoneyPenaltyCP != 0) {
			return troshx_sos_core_Money.TEMP.matchWith(troshx_sos_core_Money.ZERO).matchWithValues(0,0,this.startingMoneyPenaltyCP).changeToHighest().getLabel();
		} else {
			return "0";
		}
	}
	,get_checkoutSchool: function() {
		if(this["char"].school != null && this["char"].school.costMoney != null) {
			return this["char"].school.costMoney.getLabel();
		} else {
			return "0";
		}
	}
	,get_checkoutInventory: function() {
		return this.inventoryCost.getLabel();
	}
	,exitInventory: function() {
		var _gthis = this;
		this.insideInventory = false;
		Vue.nextTick(function() {
			var htmlElement = _gthis.$refs.checkoutHeader;
			window.scroll({ top : htmlElement.offsetTop});
		});
	}
	,proceedToInventory: function() {
		var _gthis = this;
		this.insideInventory = true;
		Vue.nextTick(function() {
			var htmlElement = _gthis.$refs.inventoryHolder;
			window.scroll({ top : htmlElement.offsetTop});
		});
	}
	,Components: function() {
		var _m_ = { };
		_m_["CategoryPCPInput"] = new troshx_sos_vue_inputs_impl_CategoryPCPInput();
		_m_["AttributeInput"] = new troshx_sos_vue_inputs_impl_AttributeInput();
		_m_["SchoolLevelInput"] = new troshx_sos_vue_inputs_impl_SchoolLevelInput();
		_m_["BoonBaneInput"] = new troshx_sos_vue_inputs_impl_BoonBaneInput();
		_m_["bb-apply"] = new troshx_sos_vue_widgets_BoonBaneApplyDetails();
		_m_["SchoolSheetDetails"] = new troshx_sos_vue_widgets_SchoolSheetDetails();
		_m_["SkillPacketInput"] = new troshx_sos_vue_inputs_impl_SkillPacketInput();
		_m_["SkillLibInput"] = new troshx_sos_vue_inputs_impl_SkillLibInput();
		_m_["SkillSubjectCreator"] = new troshx_sos_vue_widgets_SkillSubjectCreator();
		_m_["InputNameLabel"] = new troshx_sos_vue_inputs_impl_InputNameLabel();
		_m_["ModifierList"] = new troshx_sos_vue_widgets_ModifierList();
		_m_["ArrayOf"] = new troshx_sos_vue_uifields_ArrayOf();
		_m_["ArrayOfBits"] = new troshx_sos_vue_uifields_ArrayOfBits();
		_m_["inventory"] = new troshx_sos_vue_InventoryManager();
		return _m_;
	}
	,Template: function() {
		return "<div class=\"chargen\" :class=\"{'in-inventory':insideInventory}\">\r\n\t<h1>Song of Swords: Character Creation</h1>\r\n\t\r\n\t<div class=\"chargen__body\" v-if=\"!insideInventory && !char.ingame\">\r\n\t\t\r\n\t\t<section class=\"gen-general\" id=\"gen-general\">\r\n\t\t\t<div><label>Name:<InputNameLabel :obj=\"char\" prop=\"name\"></InputNameLabel></label></div>\r\n\t\t\t<div><label>Title <i>(optional)</i>:<InputNameLabel :obj=\"char\" prop=\"title\"></InputNameLabel></label></div>\r\n\t\t\t<div><label>Nickname <i>(optional)</i>:<InputNameLabel :obj=\"char\" prop=\"nickname\"></InputNameLabel></label></div>\r\n\t\t\t<div><label>Faction/Assosiation <i>(optional)</i>:<InputNameLabel :obj=\"char\" prop=\"faction\"></InputNameLabel></label></div>\r\n\t\t\t<div><label>Gender:</label><select number v-model.number=\"char.gender\"><option :value=\"0\">Male</option><option :value=\"1\">Female</option></select></div>\r\n\t\t\t<div><label>Left-handed?:<input type=\"checkbox\" v-model=\"char.leftHanded\"></input></label></div>\r\n\t\t\t<br/>\r\n\t\t\t<b>{{addressedAs}}</b>\r\n\t\t</section>\r\n\t\t\r\n\t\t<section class=\"gen-campaign-type\">\r\n\t\t\t<h2>Campaign Power</h2>\r\n\t\t\t<div v-for=\"(li, i) in campaignPowerLevels\">\r\n\t\t\t\t<label><input type=\"radio\" name=\"campaign-power\" v-on:click=\"campaignPowLevelIndex=i\" :checked=\"campaignPowLevelIndex == i\">{{li.name}} (<span class=\"num\">{{li.pcp}}</span> PCP Total) (Max <span class=\"num\">{{li.maxCategoryPCP}}</span> PCP per category) </input></label>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t\t\t\r\n\t\t<section class=\"gen-categories\">\r\n\t\t\t<h2>Categories <span class=\"valuer\" :class=\"{'still-have':categoriesRemainingAssignable>0}\">({{ categoriesRemainingAssignable }} remaining PCP)</span> <span class=\"valid\" v-show=\"categoriesRemainingAssignable==0\" style=\"color:green\">Ok!</span></h2>\r\n\t\t\t<div v-for=\"(li, i) in categories\"><label>{{li.name}}: </label><CategoryPCPInput :obj=\"li\" prop=\"pcp\" :magic=\"li.magic\" :remainingAssignable=\"categoriesRemainingAssignable\" :maxPCPPerCategory=\"campaignPowLevel.maxCategoryPCP\" />PCP &nbsp;&nbsp;|{{campaignPowLevel.maxCategoryPCP}}</div>\r\n\t\t</section>\r\n\t\t\t\r\n\t\t\t\r\n\t\t<hr/>\r\n\t\t\t\r\n\t\t\t\r\n\t\t<!-- for each category -->\r\n\t\t<section class=\"gen-race\" id=\"gen-race\">\r\n\t\t\t<h2>Race <span class=\"valuer\">(Tier {{raceTier}}) </span> <span class=\"valid\" v-show=\"!promptSettleRaceTier\" style=\"color:green\">Ready.</span></h2>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div v-for=\"(tier, ti) in raceTierTable\" :key=\"ti\">\r\n\t\t\t\t\t<span class=\"index-num\">{{ ti + 1 }}:</span> ({{pcpForTiers[ti]}} PCP)\r\n\t\t\t\t\t<label :class=\"{disabled:ti>=raceTier}\" v-for=\"(race, ri) in tier\"><input type=\"radio\" :disabled=\"ti>=raceTier\" name=\"race\" :checked=\"race.name == selectedRaceName\" v-on:click=\"selectRaceAt(ti, ri)\" :key=\"ri\"></input>{{ race.name }}</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-show=\"promptSettleRaceTier\"><button style=\"margin-top:10px\"  v-on:click=\"settleRaceTier()\">Finalise Race/Tier!</button> <span class=\"invalid\" style=\"color:red\">&lt;&lt; Click this to confirm.</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t\t\r\n\t\t<hr/>\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t<section class=\"gen-social-class\"  id=\"gen-social-class\">\r\n\t\t\t<h2>Social Class/Wealth <span class=\"valuer\">({{categorySocialClassWealth.pcp}} PCP assigned)</span></h2>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div class=\"socialclass-li\">\r\n\t\t\t\t\t<span class=\"index-num\"></span><span class=\"col-social-class\" style=\"text-align:right;\">Sync Wealth?</span><span class=\"col-wealth\"><input type=\"checkbox\" v-model=\"syncSocialWealth\"></input><label v-show=\"!syncSocialWealth\">&#128275;</label><label v-show=\"syncSocialWealth\">&#128274;</label> <label>{{ socialClassIndex == wealthIndex ? \"==\" :  \"!=\"}}</label></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-for=\"(li, i) in socialClassList\" class=\"socialclass-li\">\r\n\t\t\t\t\t<span class=\"index-num\">{{i+1}}:</span> <label class=\"col-social-class\" :class=\"{disabled:socialEitherMaxIndex<i}\"><input type=\"radio\" v-on:click=\"setSocialClassIndex(i)\" name=\"social-class\" :checked=\"socialClassIndex==i\"></input>{{ li.socialClass.name }}</label> <label class=\"col-wealth\" :class=\"{disabled:wealthEitherMaxIndex<i}\"><input type=\"radio\" v-on:click=\"setWealthIndex(i)\" name=\"wealth\" :disabled=\"syncSocialWealth\" :checked=\"wealthIndex==i\"></input>{{ li.socialClass.money.getLabel() }}{{ li.socialClass.wealth!= 0 ? \", [\"+li.socialClass.wealth+\"W]\" : \"\" }}</label>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div v-show=\"wealthIndex != socialClassIndex\" class=\"custom-label\"><label>Custom Label: <input type=\"text\" :placeholder=\"socialClassPlaceHolderName\" v-model=\"char.socialClass.name\"></input></label></div>\r\n\t\t\t\t<div class=\"social-benefits\">\r\n\t\t\t\t\t<div class=\"social-benefit\"><label>Social Benefit #1: </label><select  v-on:change=\"socialBenefitSelectChangeHandler(1, $event.target.selectedIndex)\"><option v-for=\"(li,i) in socialBenefitChoices\" :disabled=\"socialBenefit2.name===li.name || (curSelectedSocialClass.maxBoons >= 3 && socialBenefit3.name===li.name)\" :selected=\"li===socialBenefit1\" :key=\"li.label\">{{ li.label }}</option></select></div>\r\n\t\t\t\t\t<div class=\"social-benefit\"  v-show=\"curSelectedSocialClass.maxBoons>= 2\"><label>Social Benefit #2: </label><select v-on:change=\"socialBenefitSelectChangeHandler(2, $event.target.selectedIndex)\" :disabled=\"curSelectedSocialClass.maxBoons<2\"><option v-for=\"(li,i) in socialBenefitChoices\" :disabled=\"socialBenefit1.name===li.name || (curSelectedSocialClass.maxBoons>=3 && socialBenefit3.name===li.name)\" :selected=\"li===socialBenefit2\" :key=\"li.label\">{{ li.label }}</option></select></div>\r\n\t\t\t\t\t<div class=\"social-benefit\"  v-show=\"curSelectedSocialClass.maxBoons>=3\"><label>Social Benefit #3: </label><select v-on:change=\"socialBenefitSelectChangeHandler(3, $event.target.selectedIndex)\" :disabled=\"curSelectedSocialClass.maxBoons<3\"><option v-for=\"(li,i) in socialBenefitChoices\" :disabled=\"socialBenefit1.name===li.name || (curSelectedSocialClass.maxBoons >=2 && socialBenefit2.name===li.name)\" :selected=\"li===socialBenefit3\" :key=\"li.label\">{{ li.label }}</option></select></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"modified-wealth-assets\" v-show=\"availableWealthPointsBase!=availableWealthPoints\" :class=\"[availableWealthPoints<availableWealthPointsBase ? 'lower' : 'higher']\">\r\n\t\t\t\t\t<label>Modified Wealth: <b>{{ availableWealthPoints }}W</b></label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"wealth-assets\" v-show=\"availableWealthPoints > 0\">\r\n\t\t\t\t\t<label>Your Wealth Assets: <span class=\"valuer\" v-show=\"remainingWealthPoints>0\" :class=\"{'still-have':remainingWealthPoints>0}\">({{remainingWealthPoints}}  Wealth Point(s) remaining.)</span></label>\r\n\t\t\t\t\t<ArrayOf of=\"WealthAssetAssign\" :defaultValue=\"getEmptyWealthAssign\" :obj=\"$data\" prop=\"wealthAssets\" :minLength=\"0\" :maxLength=\"maxWealthAssets\" :remainingWealth=\"remainingWealthPoints\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t<div v-show=\"promptSettleSocialTier\"><button style=\"margin-top:10px\"  v-on:click=\"settleSocialTier()\">Finalise Social Class/Wealth!</button> <span class=\"invalid\" style=\"color:red\">&lt;&lt; Click this to confirm. </span><span v-show=\"!syncSocialWealth\">( <b>{{socialPCPRequired }}</b> PCP instead. )</span>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n\t\t<hr/>\r\n\t\t\t\r\n\t\t<section class=\"gen-attributes\" id=\"gen-attributes\">\r\n\t\t\t<h2>Attributes <span class=\"valuer\" :class=\"{'still-have':remainingAttributePoints>0 || negativeOrZeroStat}\">({{remainingAttributePoints}}  Attribute Points remaining.)</span> <span class=\"valuer\">(Available: {{availableAttributePoints}}) </span><span class=\"valid\" v-show=\"remainingAttributePoints==0 && !negativeOrZeroStat\" style=\"color:green\">Ok!</span></h2>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div><label>Strength:</label><AttributeInput :obj=\"char\" prop=\"strength\" :remainingAttributePoints=\"remainingAttributePoints\" /><span class=\"modified-attribute\" v-show=\"strength != STR\" :class=\"[STR<strength ? 'lower' : 'higher', {'zero-neg':STR<=0} ]\">{{STR}}</span></div>\r\n\t\t\t\t<div><label>Agility:</label><AttributeInput :obj=\"char\" prop=\"agility\" :remainingAttributePoints=\"remainingAttributePoints\" /><span class=\"modified-attribute\" v-show=\"agility != AGI\" :class=\"[AGI<agility ? 'lower' : 'higher', {'zero-neg':AGI<=0}]\">{{AGI}}</span></div>\r\n\t\t\t\t<div><label>Endurance:</label><AttributeInput :obj=\"char\" prop=\"endurance\" :remainingAttributePoints=\"remainingAttributePoints\" /><span class=\"modified-attribute\" v-show=\"endurance != END\" :class=\"[END<endurance ? 'lower' : 'higher', {'zero-neg':END<=0}]\">{{END}}</span></div>\r\n\t\t\t\t<div><label>Health:</label><AttributeInput :obj=\"char\" prop=\"health\" :remainingAttributePoints=\"remainingAttributePoints\" /><span class=\"modified-attribute\" v-show=\"health != HLT\" :class=\"[HLT<health ? 'lower' : 'higher', {'zero-neg':HLT<=0}]\">{{HLT}}</span></div>\r\n\t\t\t\t<div><label>Willpower:</label><AttributeInput :obj=\"char\" prop=\"willpower\" :remainingAttributePoints=\"remainingAttributePoints\" /><span class=\"modified-attribute\" v-show=\"willpower != WIP\" :class=\"[WIP<willpower ? 'lower' : 'higher', {'zero-neg':WIP<=0}]\">{{WIP}}</span></div>\r\n\t\t\t\t<div><label>Wit:</label><AttributeInput :obj=\"char\" prop=\"wit\" :remainingAttributePoints=\"remainingAttributePoints\" /><span class=\"modified-attribute\" v-show=\"wit != WIT\" :class=\"[WIT<wit ? 'lower' : 'higher', {'zero-neg':WIT<=0}]\">{{WIT}}</span></div>\r\n\t\t\t\t<div><label>Intelligence:</label><AttributeInput :obj=\"char\" prop=\"intelligence\" :remainingAttributePoints=\"remainingAttributePoints\" /><span class=\"modified-attribute\" v-show=\"intelligence != INT\" :class=\"[INT<intelligence ? 'lower' : 'higher', {'zero-neg':INT<=0}]\">{{INT}}</span></div>\r\n\t\t\t\t<div><label>Perception:</label><AttributeInput :obj=\"char\" prop=\"perception\" :remainingAttributePoints=\"remainingAttributePoints\" /><span class=\"modified-attribute\" v-show=\"perception != PER\" :class=\"[PER<perception ? 'lower' : 'higher', {'zero-neg':PER<=0}]\">{{PER}}</span></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div><b>ADR</b> (Adroitness): <span class=\"modified-attribute\" :class=\"[ADR==adr ?'base' : ADR<adr ? 'lower' : 'higher']\"><b>{{ADR}}</b></span><i v-show=\"adr!=ADR\" class=\"baseshow\">({{adr}})</i></div>\r\n\t\t\t\t<div><b>SDB</b> (Strength Damage Bonus): <span><b>{{SDB}}</b></span></div>\r\n\t\t\t\t<div><b>GRIT</b> (Grit): <span class=\"modified-attribute\" :class=\"[baseGrit==GRIT ?'base' : GRIT<baseGrit ? 'lower' : 'higher']\"><b>{{GRIT}}</b></span><i v-show=\"baseGrit!=GRIT\" class=\"baseshow\">({{baseGrit}})</i></div>\r\n\t\t\t\r\n\t\t\t\t<div><b>MOB</b> (Mobility): <span class=\"modified-attribute\" :class=\"[MOB==mob ?'base' : MOB<mob ? 'lower' : 'higher']\"><b>{{MOB}}</b></span><i v-show=\"mob!=MOB\" class=\"baseshow\">({{mob}})</i></div>\r\n\t\t\t\t<div><b>CAR</b> (Carry): <span class=\"modified-attribute\" :class=\"[CAR==car ?'base' : CAR<car ? 'lower' : 'higher']\"><b>{{CAR}}</b></span><i v-show=\"car!=CAR\" class=\"baseshow\">({{car}})</i></div>\r\n\t\t\t\t\r\n\t\t\t\t<div><b>CHA</b> (Charisma): <span class=\"modified-attribute\" :class=\"[CHA==cha ?'base' : CHA<cha ? 'lower' : 'higher']\"><b>{{CHA}}</b></span><i v-show=\"cha!=CHA\" class=\"baseshow\">({{cha}})</i></div>\r\n\t\t\t\t\r\n\t\t\t\t<div><i>TOU</i> (Toughness): <span class=\"modified-attribute\" :class=\"[TOU==tou ?'base' : TOU<tou ? 'lower' : 'higher']\"><b>{{TOU}}</b></span><i v-show=\"tou!=TOU\" class=\"baseshow\">({{tou}})</i></div>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div>Weight/Carry: <b>{{inventoryWeightLbl}}</b> / <b :style=\"{fontWeight:encumbranceLvl>=1 ?'normal':'bold'}\">{{CAR}}</b></div>\r\n\t\t\t\t<div>Master-hand: <span v-if=\"masterHandItem!=null\"><b>{{masterHandItem.name}}</b> <span v-show=\"masterWeapon!=null\"><span v-html=\"masterWeapon.ranged ? '&#9678;' : '&#9876;'\"></span></span><span v-if=\"carriedShield!=null && carriedShield==masterHandItem\"><span class=\"shield-icon-inv\">☗</span><select v-model.number=\"char.inventory.shieldPosition\" number><option :value=\"0\">Low</option><option :value=\"1\">High</option></select></span></span></div>\r\n\t\t\t\t<div>Off-hand: <span v-if=\"offHandItem!=null\"><b>{{offHandItem.name}}</b> <span v-show=\"offhandWeapon!=null\"><span v-html=\"offhandWeapon.ranged ? '&#9678;' : '&#9876;'\"></span></span><span v-if=\"carriedShield!=null && carriedShield==offHandItem\"><span class=\"shield-icon-inv\">☗</span><select v-model.number=\"char.inventory.shieldPosition\" number><option :value=\"0\">Low</option><option :value=\"1\">High</option></select></span></span></div>\r\n\t\t\t\t<div>Reach: <span class=\"modified-attribute\" :class=\"[reachBase==reach ?'base' : reach<reachBase ? 'lower' : 'higher']\"><b>{{reach}}</b></span><i v-show=\"reachBase!=reach\" class=\"baseshow\">({{reachBase}})</i></div>\r\n\t\t\t\t<div>Perception Penalty: <b>{{ perceptionPenalty }}</b></div>\r\n\t\t\t\t<div v-if=\"heldProfeciencies!=null\">{{heldProfeciencyIcons}}: <b style=\"max-width:120px\">{{heldProfeciencies}}</b></div>\r\n\t\t\t\t<div v-else>Defaulting&#9876;from:<br/><b style=\"max-width:120px\">{{defaultProfs}}</b></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div>School Level: <b>{{char.schoolLevel}}</b></div>\r\n\t\t\t\t<div class=\"cp\"><b>CP</b> (Melee Combat Pool): <span :class=\"[CP==baseCP ?'base' : CP<baseCP ? 'lower' : 'higher', {'modified-attribute':CP != baseCP}]\"><b>{{CP}}</b></span><i v-show=\"CP!=baseCP\" class=\"baseshow\">({{baseCP}})</i>  (<i>{{CP-char.schoolLevel}}</i> CP without &#9876;)</div>\r\n\t\t\t\t\r\n\t\t\t\t<div><i>CP - Pain(<span v-show=\"totalPain>0\" class=\"got-pain\">{{totalPain}}</span>):</i> <b>{{meleeCP}}</b> (<i>{{meleeCP-char.schoolLevel}}</i> CP without &#9876;)</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>Encumbrance Level: <span><b>{{encumbranceLvlRow.name}}</b>({{encumbranceLvl}})</span></div>\r\n\t\t\t\t<div>Skill Penalty: <span><b>{{skillPenalty}}</b></span></div>\r\n\t\t\t\t<div>Exhaustion Rate: <span><b>{{exhaustionRate}}x</b></span></div>\r\n\t\t\t\t<div>Recovery Amount: <span class=\"modified-attribute\" :class=\"[recoveryRateAmount==recoveryRateAmountBase ?'base' : recoveryRateAmount<recoveryRateAmountBase ? 'lower' : 'higher']\"><b>{{recoveryRateAmount}} <i>({{recoveryRate}}x)</i></b></span><i v-show=\"recoveryRateAmount!=recoveryRateAmountBase\" class=\"baseshow\">({{recoveryRateAmountBase}})</i></div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\r\n\t\t<hr/>\r\n\t\t\r\n\t\t\t\r\n\t\t<section class=\"gen-bnb\"  id=\"gen-bnb\">\r\n\t\t\t<h2>Boons &amp; Banes <span class=\"valuer\">(<span class=\"num\">{{totalBnBScore }}</span> B&amp;B Points currently. (Pool: {{BnBpoints}} Points) ) </span>\r\n\t\t\t\r\n\t\t\t<span v-show=\"totalBnBScore<0\" class=\"invalid\"><span style=\"color:red\">invalid!</span><i style=\"font-size:13px\">(Need &gt;=0 B&amp;B points!<br/>Assign more PCP to 'Boons &amp; Banes' or buy more Banes to pay off debt!)</i></span>\r\n\t\t\t<span v-show=\"totalBnBScore>=0\" class=\"valid\">\r\n\t\t\t\t<span style=\"color:green\">Ok!</span><br/><span v-show=\"totalBnBScore>0\" style=\"color:#ff4444;font-size:13px\">(but you have additional {{ totalBnBScore }} B&amp;B Points!)</span>\r\n\t\t\t\t<div class=\"opencloselink\"><a href=\"#\" v-show=\"showBnBs\" v-on:click.prevent=\"showBnBs=false\">^ Hide</a><a href=\"#\" v-show=\"!showBnBs\" v-on:click.prevent=\"showBnBs=true\">Open &gt;</a> &nbsp;&nbsp;<a style=\"font-size:12px;float:right\" href=\"#gen-skills\" class=\"jumplink\">Skip to Skills..</a></div>\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t\t</h2>\r\n\t\t\t<div v-show=\"shouldShowBnBs\">\r\n\t\t\t\t<h3>Choose Boons: -{{ totalBoonExpenditure }}   <span v-show=\"true\" style=\"color:#aaaaaa\">&nbsp;&nbsp;({{maxBoonsSpendableLeft }})</span></h3>\r\n\t\t\t\t<div class=\"boon-tags\">\r\n\t\t\t\t\t<BoonBaneInput v-for=\"(li, i) in boonAssignList\" :key=\"i\" :obj=\"li\" prop=\"rank\" v-on:resetBB=\"resetBB\" v-on:uncancel=\"uncancel\" v-on:addBB=\"addBB\" v-on:removeBB=\"removeBB\"  :remaining=\"maxBoonsSpendableLeft\" v-on:updateRankBB=\"updateRankBB\" v-on:updateCanceledBB=\"updateCanceledBB\" />\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<h3>Choose Banes: +{{ totalBanePointsEarned }}, ~{{ totalBanePointsSpent }}</h3>\r\n\t\t\t\t<div class=\"bane-tags\">\r\n\t\t\t\t\t<BoonBaneInput v-for=\"(li, i) in baneAssignList\" :key=\"i\" :obj=\"li\" prop=\"rank\" v-on:resetBB=\"resetBB\" v-on:uncancel=\"uncancel\"  v-on:addBB=\"addBB\" v-on:removeBB=\"removeBB\"  v-on:updateRankBB=\"updateRankBB\" v-on:updateCanceledBB=\"updateCanceledBB\" />\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<br/>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"bb-details\">\r\n\t\t\t\t<h3><span class=\"underline\">Boon(s):</span><span class=\"header-liners\"><a :href=\"li.__hasUIFields__ ? '#'+getBnBSlug(li.boon.name) : undefined\" :class=\"{canceled:li._canceled}\" v-for=\"li in boonsArray\">{{li.boon.name}}</a></span></h3>\r\n\t\t\t\t<bb-apply v-for=\"(li,i) in boonsArray\" :key=\"li.get_uid()\" :assign=\"li\" :remainingPoints=\"maxBoonsSpendableLeft\" :ingame=\"char.ingame\"></bb-apply>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"bb-details\">\r\n\t\t\t\t\t<h3><span>Bane(s):</span><span class=\"header-liners\"></span><span class=\"header-liners\"><a :href=\"li.__hasUIFields__ ? '#'+getBnBSlug(li.bane.name) : undefined\"  :class=\"{canceled:li._canceled}\" v-for=\"li in banesArray\">{{li.bane.name}}</a></span></h3>\r\n\t\t\t\t\t<bb-apply v-for=\"(li,i) in banesArray\" :key=\"li.get_uid()\" :assign=\"li\" :ingame=\"char.ingame\" v-on:callback=\"onBaneCallbackReceived\"></bb-apply>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t\t\r\n\t\t<hr/>\r\n\t\t\t\r\n\t\t<section class=\"gen-skills\"  id=\"gen-skills\">\r\n\t\t\t<h2>Skills <span class=\"valuer\" :class=\"{'still-have':totalSkillPointsLeft!=0}\">({{totalSkillPointsLeft}} Skill Points remaining.) {{ individualSkillsRemaining }}</span> <span class=\"valuer\">(Available: {{totalSkillPointsProvided}})</span><span class=\"formula\">(PCP-1)*3+INT*2</span></h2>\r\n\t\t<h3>Skill(s):</h3>\r\n\t\t\t<div class=\"skill-lib\">\r\n\t\t\t\t<SkillLibInput v-for=\"(skillObj, i) in skillObjs\" v-if=\"!skillsTable.requiresSpecialisation[skillObj.name]\" :index=\"i\" :key=\"skillObj.name\" :obj=\"skillValues\" :prop=\"skillObj.name\" :skillsTable=\"skillsTable\" :skillLevelsPacket=\"skillPacketValues\" :remaining=\"individualSkillsRemaining\" :canDelete=\"i>=startingSkillObjsCount\" v-on:change=\"onSkillIndividualChange\" v-on:delete=\"deleteSkillInput\" />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"packet-selection-mode\">\r\n\t\t\t\t<b>Buy Packets:</b> (cost 3 skill points each)\r\n\t\t\t\t<label><input type=\"radio\" name=\"packetSelectionMode\" :checked=\"!packetChoosy\" v-on:click=\"packetChoosy = false\"></input>Pennywise</label>\r\n\t\t\t\t<label><input type=\"radio\" name=\"packetSelectionMode\" :checked=\"packetChoosy\" v-on:click=\"packetChoosy = true\"></input>Pennywise and Choosy</label>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"packet-list\">\r\n\t\t\t\t<SkillPacketInput v-for=\"(packet,i) in skillPackets\" v-on:change=\"onSkillPacketChange\" :obj=\"packet\" prop=\"qty\" :labelMap=\"skillLabelMappings\" :labelSchema=\"skillLabelMappingBases\" :key=\"packet.name\" :index=\"i\" :skillPacketsRemaining=\"skillPacketsRemaining\" :skillValues=\"skillPacketValues\"  :packetChoosy=\"packetChoosy\" :skillSubjectHash=\"skillSubjectHash\"  />\r\n\t\t\t\t<SkillSubjectCreator :skillSubjects=\"skillSubjects\" :skillValues=\"skillValues\" :permaHash=\"skillSubjectsInitial\" :skillList=\"specialisedSkills\" :skillSubjectHash=\"skillSubjectHash\" v-on:addSkill=\"addSkill\" />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t</section>\r\n\t\t\t\r\n\t\t<hr/>\r\n\t\t\r\n\t\t\r\n\t\r\n\t\t<section class=\"gen-schoolprofs\"  id=\"gen-schoolprofs\">\r\n\t\t\t<h2>School &amp; Profeciencies <span class=\"valuer\" :class=\"{'still-have':stillHaveProfSpend }\">( {{profPointsLeft}} Profeciency Points remaining. )</span> <span class=\"valuer\">(Available: {{ProfPoints}}) </span></h2>\r\n\t\t\t<div class=\"select-school\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label class=\"lbl-school\">School: <select number v-on:change=\"schoolSelectChangeHandler($event.target)\"><option :value=\"-1\" :selected=\"char.school==null\"></option><option :value=\"i\" v-for=\"(li, i) in schoolAssignList\" :disabled=\"!li.school.canAffordWith(ProfPoints, moneyLeft, char.school) || !li.school.customRequire(char)\" :selected=\"char.school==li.school\">{{ li.school.name }} ({{ li.school.costArc }}) {{ li.school.costMoney != null ? \" - \"+li.school.costMoney.getLabel() : \"\" }}</option></select></label> <label class=\"lbl-level\">Level:<SchoolLevelInput :obj=\"char\" prop=\"schoolLevel\" :levelCosts=\"schoolLevelCosts\" :remainingArc=\"profPointsLeft\" :disabled=\"char.school==null\" /></label>\r\n\t\t\t\t</div>\r\n\t\r\n\t\t\t</div>\r\n\t\t\t<div class=\"school-info\" v-if=\"hasSchool\">\r\n\t\t\t\t<div>Max Profeciencies: {{ char.school.profLimit }}</div>\r\n\t\t\t\t<div class=\"cost-info\">Learning Profeciency/Arc Point Cost: ( <span :class=\"{selected:isHuman}\"><b class=\"color-free\">Free</b> - Human</span>, &nbsp; <span :class=\"{selected:!isHuman}\"><b>3 points</b> - Non-human)</span></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"prof-list\">\r\n\t\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t\t<h5>&#9876; Melee Profeciencies: <span class=\"valid ready\" style=\"color:green\" v-if=\"$data.profCoreListMelee.length>=maxMeleeProfSlots && traceProfCoreMeleeCount == maxMeleeProfSlots\">{{ maxMeleeProfSlots > 0 ? \"Full!\" : \"Not available.\" }}</span><span class=\"invalid\" style=\"color:brown\" v-else>Not Full!</span></h5>\r\n\t\t\t\t\t<ArrayOfBits :obj=\"$data\" prop=\"profCoreListMelee\" :labels=\"profCoreMeleeListNames\" :bitmaskSetObj=\"char\" bitmaskSetProp=\"profsMelee\" :maxLength=\"maxMeleeProfSlots\"  />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t\t<h5>&#9678; Ranged Profeciencies: <span class=\"valid ready\" style=\"color:green\" v-if=\"$data.profCoreListRanged.length>=maxRangedProfSlots && traceProfCoreRangedCount == maxRangedProfSlots\">{{ maxRangedProfSlots > 0 ? \"Full!\" : \"Not available.\" }}</span><span class=\"invalid\" style=\"color:brown\" v-else>Not Full!</span></h5>\r\n\t\t\t\t\t<ArrayOfBits :obj=\"$data\" prop=\"profCoreListRanged\" :labels=\"profCoreRangedListNames\" :bitmaskSetObj=\"char\" bitmaskSetProp=\"profsRanged\" :maxLength=\"maxRangedProfSlots\"  />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"manuever-list gen-col\">\r\n\t\t\t\t<h5>Superior Manuevers: <span class=\"valid ready\" style=\"color:green\" v-show=\"char.superiorManueverNotes.length>=maxSuperiorSlots\">{{ maxSuperiorSlots > 0 ? \"Full!\" : \"Not available.\" }}</span><span class=\"invalid\" style=\"color:brown\" v-show=\"char.superiorManueverNotes.length<maxSuperiorSlots\">Not Full!</span></h5>\r\n\t\t\t\t<ArrayOf of=\"String\" defaultValue=\"\" :obj=\"char\" prop=\"superiorManueverNotes\"  :maxLength=\"maxSuperiorSlots\"/>\r\n\t\t\t\t<h5>Mastery Manuever: <span class=\"valid ready\" style=\"color:green\" v-show=\"char.masteryManueverNotes.length>=maxMasterySlots\">{{ maxMasterySlots > 0 ? \"Full!\" : \"Not available.\" }}</span><span class=\"invalid\" style=\"color:brown\" v-show=\"char.masteryManueverNotes.length<maxMasterySlots\">Not Full!</span></h5>\r\n\t\t\t\t<ArrayOf of=\"String\" defaultValue=\"\" :obj=\"char\" prop=\"masteryManueverNotes\" :maxLength=\"maxMasterySlots\"  />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"talent-list gen-col\">\r\n\t\t\t\t<h5>Talents: <span class=\"valid ready\" style=\"color:green\" v-show=\"char.talentNotes.length>=maxTalentSlots\">{{maxTalentSlots > 0 ? \"Full!\" : \"Not available.\" }}</span><span class=\"invalid\" style=\"color:brown\" v-show=\"char.talentNotes.length<maxTalentSlots\">Not Full!</span></h5>\r\n\t\t\t\t<ArrayOf of=\"String\" defaultValue=\"\" :obj=\"char\" prop=\"talentNotes\" :maxLength=\"maxTalentSlots\" />\r\n\t\t\t</div>\t\t\r\n\t\t\t<div class=\"school-benefits gen-col\" v-if=\"char.schoolBonuses != null\">\r\n\t\t\t\t<h5>Benefits: <span class=\"tag\" v-for=\"li in schoolTags\" :key=\"li\">{{li}}</span></h5>\r\n\t\t\t\t<SchoolSheetDetails :bonuses=\"char.schoolBonuses\" />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</section>\r\n\t\t\t\r\n\t\t<hr/>\r\n\t\t\t\r\n\t\t<section class=\"gen-checkout\" ref=\"checkoutHeader\">\r\n\t\t\t<h2>Checkout <span class=\"legend valuer\">( &#128167;Liquidity&nbsp;&nbsp; &#9650;Bonuses &#10060;Penalties&nbsp;&nbsp; &#9876;School&nbsp;&nbsp; &#10064;Inventory&nbsp;&nbsp; [Remaining] )</span><span class=\"valid\" v-show=\"notBankrupt\" style=\"color:green\"> &nbsp;Ready.</span><span class=\"invalid\" v-show=\"!notBankrupt\" style=\"color:red\"> &nbsp;Bankrupt!</span></h2>\r\n\t\t\t<div class=\"checkout\">\r\n\t\t\t\t<div class=\"cash\">Money Remaining: ({{ moneyAvailableStr }})  + &#128167;({{liquidity}}) + &#9650;({{checkoutBonuses}}) &nbsp; - &#10060;({{checkoutPenalties}}) - &#9876;({{checkoutSchool}}) - &#10064;({{checkoutInventory}}) = [{{ moneyLeftStr }}]</div>\r\n\t\t\t\t<div class=\"carry\">Carry: <b :class=\"{encumbered:encumbered}\">{{inventoryWeightLbl}}</b> / <span class=\"modified-attribute\" :class=\"[CAR==car ?'base' : CAR<car ? 'lower' : 'higher']\"><b>{{CAR}}</b></span></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"inventory-section\">\r\n\t\t\t\t<button v-on:click=\"proceedToInventory()\" v-show=\"!insideInventory\">&#10064; Proceed to Inventory &gt;&gt;</button>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<hr/>\r\n\t</div>\r\n\t\t\t\r\n\t<div class=\"chargen__footer\" v-if=\"!insideInventory && !char.ingame\">\r\n\t\t<section class=\"arcs\">\r\n\t\t\t<h2>Arcs</h2>\r\n\t\t\t<div><label>Saga:</label><textarea v-model=\"char.arcSaga\" class=\"notes\"></textarea></div>\r\n\t\t\t<div><label>Epic:</label><textarea v-model=\"char.arcEpic\" class=\"notes\"></textarea></div>\r\n\t\t\t<div><label>Belief:</label><textarea v-model=\"char.arcBelief\" class=\"notes\"></textarea></div>\r\n\t\t\t<div><label>Glory:</label><textarea v-model=\"char.arcGlory\" class=\"notes\"></textarea></div>\r\n\t\t\t<div><label>Flaw:</label><textarea :disabled=\"!isHuman\" v-model=\"char.arcFlaw\" class=\"notes\"></textarea></div>\r\n\t\t</section>\r\n\t\t<hr/>\r\n\t\t\r\n\t\t<button :disabled=\"char.ingame\" v-on:click=\"saveFinaliseAll()\">Save Character!</button>\r\n\t</div>\r\n\t\t\t\t\r\n\t<div class=\"chargen__done\" v-if=\"char.ingame\">\r\n\t\t<p>Congratulations <b>{{addressedAs}}</b>. Your character has been created. Copy the loadable serialized stream text contents below to clipboard, and paste it somewhere else for saving it manually!</p>\r\n\t\t<div><textarea character-set=\"UTF-8\"  readonly=\"readonly\" ref=\"savedTextArea\" v-model=\"savedCharContents\">\r\n\t\t</textarea><button v-on:click=\"executeCopyContents()\" ref=\"copyButton\">Copy</button><i class=\"copy-notify\" ref=\"copyNotify\" style=\"display:none\">copied!</i></div>\r\n\t\t<div v-if=\"exitBtnCallback!=null\">\r\n\t\t\t<i>You character's loadable contents is also listed on exit.</i>\r\n\t\t</div>\r\n\t\t<button v-if=\"exitBtnCallback!=null\" v-on:click=\"exitBtnCallback()\">Exit</button>\r\n\t\t\r\n\t\t<hr/>\r\n\t\tConsider pasting the copied serialized data content into a Gingko card,<br/>and storing all your data (for free) in a Gingko tree which {{ exitBtnCallback!=null ? \"is\" : \"will be\"}} loadable online by {{exitBtnCallback!=null ? \"the\" : \"an upcoming\" }} integrated suite's file browser!<br/>\r\n\t\t(eg. <a href=\"https://gingkoapp.com/sos-weapons-and-armour\" target=\"_blank\">https://gingkoapp.com/sos-weapons-and-armour</a> ).<br/> Create a Gingko account now and {{ exitBtnCallback!=null? \"start sharing your creations!\" : \"prepare your creations to be viewable through combined inventory/character sheets coming your way.\" }} \r\n\t</div>\r\n\t\r\n\t<div ref=\"inventoryHolder\">\r\n\t\t<inventory v-if=\"insideInventory\" :backBtnCallback=\"exitInventory\" v-on:loadSheet=\"loadSheet\" :inventory=\"char.inventory\" :maxCostCopper=\"moneyLeft.getCPValue()\" :maxWeight=\"CAR\" :includeDroppedCost=\"true\" />\t\r\n\t</div>\r\n\t\t\r\n\t<sweet-modal ref=\"finaliseWarning\">\r\n\t\t<div class=\"finalise-form finalise-warning\">\r\n\t\t\t<h3>Warning!</h3>\r\n\t\t\t<p>You may have missed out some things.</p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li v-for=\"li in warningMsgs\" v-show=\"li.charAt(li.length-1)!='!'\">{{li}}</li>\r\n\t\t\t</ul>\r\n\t\t\t<button v-on:click=\"$refs.finaliseWarning.close()\">&lt; Back</button>\r\n\t\t\t<br/><br/>\r\n\t\t\t<i>You still sure you want to proceed with build?</i><br/>\r\n\t\t\t<button v-on:click=\"$refs.finaliseWarning.close(); saveFinaliseAll(true)\">Proceed with Build</button>\r\n\t\t</div>\r\n\t</sweet-modal>\r\n\t<sweet-modal ref=\"finaliseError\">\r\n\t\t<div class=\"finalise-form finalise-errors\">\t\r\n\t\t\t<h3>Invalid!</h3>\r\n\t\t\t<p>You can't save this character yet and would need to rectify the following:</p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li v-for=\"li in warningMsgs\" v-show=\"li.charAt(li.length-1)=='!'\">{{li}}</li>\r\n\t\t\t</ul>\r\n\t\t\t<button v-on:click=\"$refs.finaliseError.close()\">&lt; Back</button>\r\n\t\t</div>\r\n\t</sweet-modal>\r\n</div>\r\n";
	}
	,get_placeholder: function() {
		return "[placeholder]";
	}
	,get_shouldShowBnBs: function() {
		return this.$data.get_shouldShowBnBs();
	}
	,privateInit: function() {
		this.$data.privateInit();
		return;
	}
	,get_campaignPowLevel: function() {
		var _this = this.$data;
		return _this.campaignPowerLevels[_this.campaignPowLevelIndex];
	}
	,get_categoryRace: function() {
		return this.$data.categories[0];
	}
	,get_categoryAttributes: function() {
		return this.$data.categories[1];
	}
	,get_categorySocialClassWealth: function() {
		return this.$data.categories[4];
	}
	,get_categoriesRemainingAssignable: function() {
		return this.$data.get_categoriesRemainingAssignable();
	}
	,get_isValidCategories: function() {
		return this.$data.get_isValidCategories();
	}
	,checkWarningCategories: function() {
		return this.$data.checkWarningCategories();
	}
	,get_isHuman: function() {
		var _this = this.$data;
		return (_this["char"].race != null ? _this["char"].race.name : "") == "Human";
	}
	,get_selectedRaceName: function() {
		var _this = this.$data;
		if(_this["char"].race != null) {
			return _this["char"].race.name;
		} else {
			return "";
		}
	}
	,resetToHuman: function() {
		var _this = this.$data;
		_this.selectedTierIndex = 0;
		_this["char"].set_race(_this.raceTierTable[0][0]);
		return;
	}
	,selectRaceAt: function(ti,ri) {
		var _this = this.$data;
		_this.selectedTierIndex = ti;
		_this["char"].set_race(_this.raceTierTable[ti][ri]);
		return;
	}
	,settleRaceTier: function() {
		var _this = this.$data;
		_this.categories[0].pcp = _this.pcpForTiers[_this.selectedTierIndex];
		return;
	}
	,get_promptSettleRaceTier: function() {
		return this.$data.get_promptSettleRaceTier();
	}
	,get_raceTier: function() {
		return this.$data.get_raceTier();
	}
	,getRaceTierFromPCP: function(pcp) {
		return this.$data.getRaceTierFromPCP(pcp);
	}
	,get_totalAttributePointsSpent: function() {
		return this.$data.get_totalAttributePointsSpent();
	}
	,get_remainingAttributePoints: function() {
		return this.$data.get_remainingAttributePoints();
	}
	,get_availableAttributePoints: function() {
		return this.$data.get_availableAttributePoints();
	}
	,canBuyMoreAttributeLevels: function() {
		return this.$data.canBuyMoreAttributeLevels();
	}
	,checkWarningAttributes: function() {
		return this.$data.checkWarningAttributes();
	}
	,updateSocialBenefitsToBoon: function(newValue,oldValue) {
		this.$data.updateSocialBenefitsToBoon(newValue,oldValue);
		return;
	}
	,validateSocialBenefitsWithClass: function(zoneNum) {
		this.$data.validateSocialBenefitsWithClass(zoneNum);
		return;
	}
	,socialBenefitSelectChangeHandler: function(zoneNum,selectedIndex) {
		this.$data.socialBenefitSelectChangeHandler(zoneNum,selectedIndex);
		return;
	}
	,get_availableWealthPointsBase: function() {
		var _this = this.$data;
		return _this.socialClassList[_this.wealthIndex].socialClass.wealth;
	}
	,get_availableWealthPoints: function() {
		var _this = this.$data;
		var r = Math.floor(_this["char"].getModifiedValue(18,_this.socialClassList[_this.wealthIndex].socialClass.wealth));
		if(r < 0) {
			r = 0;
		}
		return r;
	}
	,get_remainingWealthPointsFull: function() {
		var _this = this.$data;
		var r = Math.floor(_this["char"].getModifiedValue(18,_this.socialClassList[_this.wealthIndex].socialClass.wealth));
		if(r < 0) {
			r = 0;
		}
		return r - _this.wealthAssetsWorthFullArray();
	}
	,get_remainingWealthPoints: function() {
		var _this = this.$data;
		var r = Math.floor(_this["char"].getModifiedValue(18,_this.socialClassList[_this.wealthIndex].socialClass.wealth));
		if(r < 0) {
			r = 0;
		}
		return r - _this.wealthAssetsWorth();
	}
	,wealthAssetsWorthLen: function() {
		var _this = this.$data;
		var len = _this.wealthAssets.length;
		var max = _this.get_maxWealthAssets();
		if(len >= max) {
			return max;
		} else {
			return len;
		}
	}
	,wealthAssetsWorth: function() {
		return this.$data.wealthAssetsWorth();
	}
	,get_socialBenefitChoices: function() {
		var _this = this.$data;
		return _this.socialClassList[_this.socialClassIndex].boons;
	}
	,get_curSelectedSocialClass: function() {
		var _this = this.$data;
		return _this.socialClassList[_this.socialClassIndex];
	}
	,get_maxSocialClassIndex: function() {
		return this.$data.categories[4].pcp - 1;
	}
	,constraintSocialWealth: function() {
		this.$data.constraintSocialWealth();
		return;
	}
	,get_socialEitherMaxIndex: function() {
		return this.$data.get_socialEitherMaxIndex();
	}
	,get_wealthEitherMaxIndex: function() {
		return this.$data.get_wealthEitherMaxIndex();
	}
	,get_socialClassPlaceHolderName: function() {
		return this.$data.get_socialClassPlaceHolderName();
	}
	,get_promptSettleSocialTier: function() {
		var _this = this.$data;
		return (_this.socialClassIndex != _this.wealthIndex ? _this.get_unevenSocialPCPRequired() : _this.socialClassIndex + 1) != _this.categories[4].pcp;
	}
	,get_socialPCPRequired: function() {
		var _this = this.$data;
		if(_this.socialClassIndex != _this.wealthIndex) {
			return _this.get_unevenSocialPCPRequired();
		} else {
			return _this.socialClassIndex + 1;
		}
	}
	,settleSocialTier: function() {
		this.$data.settleSocialTier();
		return;
	}
	,get_unevenSocialPCPRequired: function() {
		return this.$data.get_unevenSocialPCPRequired();
	}
	,get_unevenMaxSocialClassIndex: function() {
		return this.$data.get_unevenMaxSocialClassIndex();
	}
	,get_unevenMaxWealthIndex: function() {
		return this.$data.get_unevenMaxWealthIndex();
	}
	,setSocialClassIndex: function(index) {
		this.$data.setSocialClassIndex(index);
		return;
	}
	,setWealthIndex: function(index) {
		this.$data.setWealthIndex(index);
		return;
	}
	,updateSocialToCharsheet: function() {
		this.$data.updateSocialToCharsheet();
		return;
	}
	,get_maxWealthAssets: function() {
		return this.$data.get_maxWealthAssets();
	}
	,updateMoneyToCharsheet: function() {
		this.$data.updateMoneyToCharsheet();
		return;
	}
	,saveFinaliseSocial: function(moneyLeft) {
		this.$data.saveFinaliseSocial(moneyLeft);
		return;
	}
	,get_totalBaneExpenditure: function() {
		return this.$data.get_totalBaneExpenditure();
	}
	,get_maxBanePointsEarnable: function() {
		var _this = this.$data;
		if(_this.get_BnBpoints() < 0) {
			return 15 - _this.get_BnBpoints();
		} else {
			return 15;
		}
	}
	,get_totalBanePointsEarned: function() {
		return this.$data.get_totalBanePointsEarned();
	}
	,get_totalBanePointsSpent: function() {
		return this.$data.get_totalBanePointsSpent();
	}
	,get_totalBoonExpenditure: function() {
		return this.$data.get_totalBoonExpenditure();
	}
	,get_boonsArray: function() {
		return this.$data["char"].boons.list;
	}
	,get_banesArray: function() {
		return this.$data["char"].banes.list;
	}
	,get_BnBpoints: function() {
		return this.$data.get_BnBpoints();
	}
	,get_totalBnBScore: function() {
		return this.$data.get_totalBnBScore();
	}
	,get_maxBoonsSpendable: function() {
		return this.$data.get_maxBoonsSpendable();
	}
	,get_maxBoonsSpendableLeft: function() {
		return this.$data.get_maxBoonsSpendableLeft();
	}
	,get_maxBanesSpendable: function() {
		return this.$data.get_maxBanesSpendable();
	}
	,get_maxBanesSpendableLeft: function() {
		return this.$data.get_maxBanesSpendableLeft();
	}
	,addSkill: function(skill,special) {
		this.$data.addSkill(skill,special);
		return;
	}
	,deleteSkillInput: function(index) {
		this.$data.deleteSkillInput(index);
		return;
	}
	,onSkillPacketChange: function(index,vector,clickedPlus) {
		this.$data.onSkillPacketChange(index,vector,clickedPlus);
		return;
	}
	,onSkillIndividualChange: function(vector) {
		this.$data.onSkillIndividualChange(vector);
		return;
	}
	,saveFinaliseSkillsFromPackets: function() {
		this.$data.saveFinaliseSkillsFromPackets();
		return;
	}
	,clampSkillValue: function(value) {
		var _this = this.$data;
		if(value >= 5) {
			return 5;
		} else {
			return value;
		}
	}
	,isSkillLabelBinded: function(s) {
		var _this = this.$data;
		return s.charAt(0) == "~";
	}
	,get_SkillPoints: function() {
		return this.$data.get_SkillPoints();
	}
	,get_individualSkillsSpent: function() {
		return this.$data.get_individualSkillsSpent();
	}
	,get_maxSkillPacketsAllowed: function() {
		return this.$data.get_maxSkillPacketsAllowed();
	}
	,get_maxIndividualSkillsSpendable: function() {
		return this.$data.get_maxIndividualSkillsSpendable();
	}
	,get_individualSkillsRemaining: function() {
		return this.$data.get_individualSkillsRemaining();
	}
	,get_totalSkillPointsProvided: function() {
		return this.$data.get_totalSkillPointsProvided();
	}
	,get_skillPacketsRemaining: function() {
		return this.$data.get_skillPacketsRemaining();
	}
	,get_skillPacketsBought: function() {
		return this.$data.get_skillPacketsBought();
	}
	,get_totalSkillPointsLeft: function() {
		return this.$data.get_totalSkillPointsLeft();
	}
	,selectSchoolAssign: function(s) {
		this.$data.selectSchoolAssign(s);
		return;
	}
	,canStillSpendSchool: function(remainingPoints) {
		return this.$data.canStillSpendSchool(remainingPoints);
	}
	,get_hasSchool: function() {
		return this.$data["char"].school != null;
	}
	,get_schoolProfLevel: function() {
		var _this = this.$data;
		if(_this["char"].school != null) {
			return _this["char"].schoolLevel;
		} else {
			return 0;
		}
	}
	,get_ProfPoints: function() {
		return (this.$data.categories[5].pcp - 1) * 3;
	}
	,get_totalAvailProfSlots: function() {
		var _this = this.$data;
		if(_this["char"].school != null) {
			return _this["char"].school.profLimit;
		} else {
			return 0;
		}
	}
	,get_profArcCost: function() {
		var _this = this.$data;
		if((_this["char"].race != null ? _this["char"].race.name : "") == "Human") {
			return 0;
		} else {
			return 3;
		}
	}
	,get_schoolArcCost: function() {
		var _this = this.$data;
		if(_this["char"].school != null) {
			return _this["char"].school.costArc;
		} else {
			return 0;
		}
	}
	,get_profExpenditure: function() {
		return this.$data.get_profExpenditure();
	}
	,get_totalProfSlotExpenditure: function() {
		var _this = this.$data;
		var c = (_this["char"].race != null ? _this["char"].race.name : "") == "Human" ? 0 : 3;
		return c * _this.profCoreListRanged.length + c * _this.profCoreListMelee.length;
	}
	,get_maxAvailableProfSlots: function() {
		var _this = this.$data;
		if(_this["char"].school != null) {
			return _this["char"].school.profLimit;
		} else {
			return 0;
		}
	}
	,get_maxMeleeProfSlots: function() {
		return this.$data.get_maxMeleeProfSlots();
	}
	,get_maxRangedProfSlots: function() {
		return this.$data.get_maxRangedProfSlots();
	}
	,get_maxTalentSlots: function() {
		return this.$data.get_maxTalentSlots();
	}
	,get_maxSuperiorSlots: function() {
		return this.$data.get_maxSuperiorSlots();
	}
	,get_maxMasterySlots: function() {
		return this.$data.get_maxMasterySlots();
	}
	,get_totalProfecienciesBought: function() {
		return this.$data.get_totalProfecienciesBought();
	}
	,get_maxClampedMeleeProfs: function() {
		var _this = this.$data;
		var a = _this.get_maxMeleeProfSlots();
		var b = _this.profCoreListMelee.length;
		if(a < b) {
			return a;
		} else {
			return b;
		}
	}
	,get_maxClampedRangedProfs: function() {
		var _this = this.$data;
		var a = _this.get_maxRangedProfSlots();
		var b = _this.profCoreListRanged.length;
		if(a < b) {
			return a;
		} else {
			return b;
		}
	}
	,get_levelsExpenditure: function() {
		var _this = this.$data;
		if(_this["char"].school != null && _this["char"].schoolLevel > 0) {
			return _this.schoolLevelCosts[_this["char"].schoolLevel - 1];
		} else {
			return 0;
		}
	}
	,get_totalProfArcExpenditure: function() {
		var _this = this.$data;
		return _this.get_totalProfecienciesBought() * ((_this["char"].race != null ? _this["char"].race.name : "") == "Human" ? 0 : 3);
	}
	,get_profPointsLeft: function() {
		var _this = this.$data;
		return (_this.categories[5].pcp - 1) * 3 - _this.get_totalProfecienciesBought() * ((_this["char"].race != null ? _this["char"].race.name : "") == "Human" ? 0 : 3) - (_this["char"].school != null ? _this["char"].school.costArc : 0) - (_this["char"].school != null && _this["char"].schoolLevel > 0 ? _this.schoolLevelCosts[_this["char"].schoolLevel - 1] : 0);
	}
	,get_traceProfCoreRangedCurrent: function() {
		return this.$data.get_traceProfCoreRangedCurrent();
	}
	,get_traceProfCoreMeleeCurrent: function() {
		return this.$data.get_traceProfCoreMeleeCurrent();
	}
	,get_traceProfCoreRangedCount: function() {
		return this.$data.get_traceProfCoreRangedCount();
	}
	,get_traceProfCoreMeleeCount: function() {
		return this.$data.get_traceProfCoreMeleeCount();
	}
	,saveFinaliseCleanupChar: function(moneyLeft) {
		this.$data.saveFinaliseCleanupChar(moneyLeft);
		return;
	}
	,_Init: function() {
		var cls = troshx_sos_vue_CharGen;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.created = clsP.Created;
		this.components = this.Components();
		this.template = this.Template();
		this.computed = { validAffordCurrentSchool : clsP.get_validAffordCurrentSchool, moneyLeft : clsP.get_moneyLeft, moneyLeftStr : clsP.get_moneyLeftStr, liquidity : clsP.get_liquidity, liquidityStr : clsP.get_liquidityStr, startingMoneyModifiedCP : clsP.get_startingMoneyModifiedCP, startingMoneyBonusCP : clsP.get_startingMoneyBonusCP, startingMoneyPenaltyCP : clsP.get_startingMoneyPenaltyCP, inventoryCost : clsP.get_inventoryCost, moneyAvailable : clsP.get_moneyAvailable, moneyAvailableStr : clsP.get_moneyAvailableStr, checkoutBonuses : clsP.get_checkoutBonuses, checkoutPenalties : clsP.get_checkoutPenalties, checkoutSchool : clsP.get_checkoutSchool, checkoutInventory : clsP.get_checkoutInventory, shouldShowBnBs : clsP.get_shouldShowBnBs, campaignPowLevel : clsP.get_campaignPowLevel, categoryRace : clsP.get_categoryRace, categoryAttributes : clsP.get_categoryAttributes, categorySocialClassWealth : clsP.get_categorySocialClassWealth, categoriesRemainingAssignable : clsP.get_categoriesRemainingAssignable, isValidCategories : clsP.get_isValidCategories, isHuman : clsP.get_isHuman, selectedRaceName : clsP.get_selectedRaceName, promptSettleRaceTier : clsP.get_promptSettleRaceTier, raceTier : clsP.get_raceTier, totalAttributePointsSpent : clsP.get_totalAttributePointsSpent, remainingAttributePoints : clsP.get_remainingAttributePoints, availableAttributePoints : clsP.get_availableAttributePoints, availableWealthPointsBase : clsP.get_availableWealthPointsBase, availableWealthPoints : clsP.get_availableWealthPoints, remainingWealthPointsFull : clsP.get_remainingWealthPointsFull, remainingWealthPoints : clsP.get_remainingWealthPoints, socialBenefitChoices : clsP.get_socialBenefitChoices, curSelectedSocialClass : clsP.get_curSelectedSocialClass, maxSocialClassIndex : clsP.get_maxSocialClassIndex, socialEitherMaxIndex : clsP.get_socialEitherMaxIndex, wealthEitherMaxIndex : clsP.get_wealthEitherMaxIndex, socialClassPlaceHolderName : clsP.get_socialClassPlaceHolderName, promptSettleSocialTier : clsP.get_promptSettleSocialTier, socialPCPRequired : clsP.get_socialPCPRequired, unevenSocialPCPRequired : clsP.get_unevenSocialPCPRequired, unevenMaxSocialClassIndex : clsP.get_unevenMaxSocialClassIndex, unevenMaxWealthIndex : clsP.get_unevenMaxWealthIndex, maxWealthAssets : clsP.get_maxWealthAssets, totalBaneExpenditure : clsP.get_totalBaneExpenditure, maxBanePointsEarnable : clsP.get_maxBanePointsEarnable, totalBanePointsEarned : clsP.get_totalBanePointsEarned, totalBanePointsSpent : clsP.get_totalBanePointsSpent, totalBoonExpenditure : clsP.get_totalBoonExpenditure, boonsArray : clsP.get_boonsArray, banesArray : clsP.get_banesArray, BnBpoints : clsP.get_BnBpoints, totalBnBScore : clsP.get_totalBnBScore, maxBoonsSpendable : clsP.get_maxBoonsSpendable, maxBoonsSpendableLeft : clsP.get_maxBoonsSpendableLeft, maxBanesSpendable : clsP.get_maxBanesSpendable, maxBanesSpendableLeft : clsP.get_maxBanesSpendableLeft, SkillPoints : clsP.get_SkillPoints, individualSkillsSpent : clsP.get_individualSkillsSpent, maxSkillPacketsAllowed : clsP.get_maxSkillPacketsAllowed, maxIndividualSkillsSpendable : clsP.get_maxIndividualSkillsSpendable, individualSkillsRemaining : clsP.get_individualSkillsRemaining, totalSkillPointsProvided : clsP.get_totalSkillPointsProvided, skillPacketsRemaining : clsP.get_skillPacketsRemaining, skillPacketsBought : clsP.get_skillPacketsBought, totalSkillPointsLeft : clsP.get_totalSkillPointsLeft, hasSchool : clsP.get_hasSchool, schoolProfLevel : clsP.get_schoolProfLevel, ProfPoints : clsP.get_ProfPoints, totalAvailProfSlots : clsP.get_totalAvailProfSlots, profArcCost : clsP.get_profArcCost, schoolArcCost : clsP.get_schoolArcCost, profExpenditure : clsP.get_profExpenditure, totalProfSlotExpenditure : clsP.get_totalProfSlotExpenditure, maxAvailableProfSlots : clsP.get_maxAvailableProfSlots, maxMeleeProfSlots : clsP.get_maxMeleeProfSlots, maxRangedProfSlots : clsP.get_maxRangedProfSlots, maxTalentSlots : clsP.get_maxTalentSlots, maxSuperiorSlots : clsP.get_maxSuperiorSlots, maxMasterySlots : clsP.get_maxMasterySlots, totalProfecienciesBought : clsP.get_totalProfecienciesBought, maxClampedMeleeProfs : clsP.get_maxClampedMeleeProfs, maxClampedRangedProfs : clsP.get_maxClampedRangedProfs, levelsExpenditure : clsP.get_levelsExpenditure, totalProfArcExpenditure : clsP.get_totalProfArcExpenditure, profPointsLeft : clsP.get_profPointsLeft, traceProfCoreRangedCurrent : clsP.get_traceProfCoreRangedCurrent, traceProfCoreMeleeCurrent : clsP.get_traceProfCoreMeleeCurrent, traceProfCoreRangedCount : clsP.get_traceProfCoreRangedCount, traceProfCoreMeleeCount : clsP.get_traceProfCoreMeleeCount, totalDraftedProfSlots : clsP.get_totalDraftedProfSlots, maxBuyableProfSlots : clsP.get_maxBuyableProfSlots, excessDraftedSlots : clsP.get_excessDraftedSlots, notBankrupt : clsP.get_notBankrupt, stillHaveProfSpend : clsP.get_stillHaveProfSpend, placeholder : clsP.get_placeholder};
		this.methods = { setInventory : clsP.setInventory, watch_maxBoonsSpendableLeft : clsP.watch_maxBoonsSpendableLeft, watch_raceTier : clsP.watch_raceTier, watch_socialEitherMaxIndex : clsP.watch_socialEitherMaxIndex, watch_wealthEitherMaxIndex : clsP.watch_wealthEitherMaxIndex, watch_syncSocialWealth : clsP.watch_syncSocialWealth, watch_socialClassIndex : clsP.watch_socialClassIndex, watch_wealthIndex : clsP.watch_wealthIndex, watch_socialBenefit1 : clsP.watch_socialBenefit1, watch_socialBenefit2 : clsP.watch_socialBenefit2, watch_socialBenefit3 : clsP.watch_socialBenefit3, schoolSelectChangeHandler : clsP.schoolSelectChangeHandler, watch_validAffordCurrentSchool : clsP.watch_validAffordCurrentSchool, get_totalDraftedProfSlots : clsP.get_totalDraftedProfSlots, get_maxBuyableProfSlots : clsP.get_maxBuyableProfSlots, get_excessDraftedSlots : clsP.get_excessDraftedSlots, watch_excessDraftedSlots : clsP.watch_excessDraftedSlots, get_validAffordCurrentSchool : clsP.get_validAffordCurrentSchool, get_notBankrupt : clsP.get_notBankrupt, isValidAll : clsP.isValidAll, get_stillHaveProfSpend : clsP.get_stillHaveProfSpend, saveFinaliseAll : clsP.saveFinaliseAll, saveCharToBox : clsP.saveCharToBox, executeCopyContents : clsP.executeCopyContents, confirmFinaliseAll : clsP.confirmFinaliseAll, get_moneyLeft : clsP.get_moneyLeft, get_moneyLeftStr : clsP.get_moneyLeftStr, get_liquidity : clsP.get_liquidity, get_liquidityStr : clsP.get_liquidityStr, get_startingMoneyModifiedCP : clsP.get_startingMoneyModifiedCP, get_startingMoneyBonusCP : clsP.get_startingMoneyBonusCP, get_startingMoneyPenaltyCP : clsP.get_startingMoneyPenaltyCP, get_inventoryCost : clsP.get_inventoryCost, get_moneyAvailable : clsP.get_moneyAvailable, get_moneyAvailableStr : clsP.get_moneyAvailableStr, get_checkoutBonuses : clsP.get_checkoutBonuses, get_checkoutPenalties : clsP.get_checkoutPenalties, get_checkoutSchool : clsP.get_checkoutSchool, get_checkoutInventory : clsP.get_checkoutInventory, exitInventory : clsP.exitInventory, proceedToInventory : clsP.proceedToInventory, get_placeholder : clsP.get_placeholder, get_shouldShowBnBs : clsP.get_shouldShowBnBs, privateInit : clsP.privateInit, get_campaignPowLevel : clsP.get_campaignPowLevel, get_categoryRace : clsP.get_categoryRace, get_categoryAttributes : clsP.get_categoryAttributes, get_categorySocialClassWealth : clsP.get_categorySocialClassWealth, get_categoriesRemainingAssignable : clsP.get_categoriesRemainingAssignable, get_isValidCategories : clsP.get_isValidCategories, checkWarningCategories : clsP.checkWarningCategories, get_isHuman : clsP.get_isHuman, get_selectedRaceName : clsP.get_selectedRaceName, resetToHuman : clsP.resetToHuman, selectRaceAt : clsP.selectRaceAt, settleRaceTier : clsP.settleRaceTier, get_promptSettleRaceTier : clsP.get_promptSettleRaceTier, get_raceTier : clsP.get_raceTier, getRaceTierFromPCP : clsP.getRaceTierFromPCP, get_totalAttributePointsSpent : clsP.get_totalAttributePointsSpent, get_remainingAttributePoints : clsP.get_remainingAttributePoints, get_availableAttributePoints : clsP.get_availableAttributePoints, canBuyMoreAttributeLevels : clsP.canBuyMoreAttributeLevels, checkWarningAttributes : clsP.checkWarningAttributes, updateSocialBenefitsToBoon : clsP.updateSocialBenefitsToBoon, validateSocialBenefitsWithClass : clsP.validateSocialBenefitsWithClass, socialBenefitSelectChangeHandler : clsP.socialBenefitSelectChangeHandler, get_availableWealthPointsBase : clsP.get_availableWealthPointsBase, get_availableWealthPoints : clsP.get_availableWealthPoints, get_remainingWealthPointsFull : clsP.get_remainingWealthPointsFull, get_remainingWealthPoints : clsP.get_remainingWealthPoints, wealthAssetsWorthLen : clsP.wealthAssetsWorthLen, wealthAssetsWorth : clsP.wealthAssetsWorth, get_socialBenefitChoices : clsP.get_socialBenefitChoices, get_curSelectedSocialClass : clsP.get_curSelectedSocialClass, get_maxSocialClassIndex : clsP.get_maxSocialClassIndex, constraintSocialWealth : clsP.constraintSocialWealth, get_socialEitherMaxIndex : clsP.get_socialEitherMaxIndex, get_wealthEitherMaxIndex : clsP.get_wealthEitherMaxIndex, get_socialClassPlaceHolderName : clsP.get_socialClassPlaceHolderName, get_promptSettleSocialTier : clsP.get_promptSettleSocialTier, get_socialPCPRequired : clsP.get_socialPCPRequired, settleSocialTier : clsP.settleSocialTier, get_unevenSocialPCPRequired : clsP.get_unevenSocialPCPRequired, get_unevenMaxSocialClassIndex : clsP.get_unevenMaxSocialClassIndex, get_unevenMaxWealthIndex : clsP.get_unevenMaxWealthIndex, setSocialClassIndex : clsP.setSocialClassIndex, setWealthIndex : clsP.setWealthIndex, updateSocialToCharsheet : clsP.updateSocialToCharsheet, get_maxWealthAssets : clsP.get_maxWealthAssets, updateMoneyToCharsheet : clsP.updateMoneyToCharsheet, saveFinaliseSocial : clsP.saveFinaliseSocial, get_totalBaneExpenditure : clsP.get_totalBaneExpenditure, get_maxBanePointsEarnable : clsP.get_maxBanePointsEarnable, get_totalBanePointsEarned : clsP.get_totalBanePointsEarned, get_totalBanePointsSpent : clsP.get_totalBanePointsSpent, get_totalBoonExpenditure : clsP.get_totalBoonExpenditure, get_boonsArray : clsP.get_boonsArray, get_banesArray : clsP.get_banesArray, get_BnBpoints : clsP.get_BnBpoints, get_totalBnBScore : clsP.get_totalBnBScore, get_maxBoonsSpendable : clsP.get_maxBoonsSpendable, get_maxBoonsSpendableLeft : clsP.get_maxBoonsSpendableLeft, get_maxBanesSpendable : clsP.get_maxBanesSpendable, get_maxBanesSpendableLeft : clsP.get_maxBanesSpendableLeft, addSkill : clsP.addSkill, deleteSkillInput : clsP.deleteSkillInput, onSkillPacketChange : clsP.onSkillPacketChange, onSkillIndividualChange : clsP.onSkillIndividualChange, saveFinaliseSkillsFromPackets : clsP.saveFinaliseSkillsFromPackets, clampSkillValue : clsP.clampSkillValue, isSkillLabelBinded : clsP.isSkillLabelBinded, get_SkillPoints : clsP.get_SkillPoints, get_individualSkillsSpent : clsP.get_individualSkillsSpent, get_maxSkillPacketsAllowed : clsP.get_maxSkillPacketsAllowed, get_maxIndividualSkillsSpendable : clsP.get_maxIndividualSkillsSpendable, get_individualSkillsRemaining : clsP.get_individualSkillsRemaining, get_totalSkillPointsProvided : clsP.get_totalSkillPointsProvided, get_skillPacketsRemaining : clsP.get_skillPacketsRemaining, get_skillPacketsBought : clsP.get_skillPacketsBought, get_totalSkillPointsLeft : clsP.get_totalSkillPointsLeft, selectSchoolAssign : clsP.selectSchoolAssign, canStillSpendSchool : clsP.canStillSpendSchool, get_hasSchool : clsP.get_hasSchool, get_schoolProfLevel : clsP.get_schoolProfLevel, get_ProfPoints : clsP.get_ProfPoints, get_totalAvailProfSlots : clsP.get_totalAvailProfSlots, get_profArcCost : clsP.get_profArcCost, get_schoolArcCost : clsP.get_schoolArcCost, get_profExpenditure : clsP.get_profExpenditure, get_totalProfSlotExpenditure : clsP.get_totalProfSlotExpenditure, get_maxAvailableProfSlots : clsP.get_maxAvailableProfSlots, get_maxMeleeProfSlots : clsP.get_maxMeleeProfSlots, get_maxRangedProfSlots : clsP.get_maxRangedProfSlots, get_maxTalentSlots : clsP.get_maxTalentSlots, get_maxSuperiorSlots : clsP.get_maxSuperiorSlots, get_maxMasterySlots : clsP.get_maxMasterySlots, get_totalProfecienciesBought : clsP.get_totalProfecienciesBought, get_maxClampedMeleeProfs : clsP.get_maxClampedMeleeProfs, get_maxClampedRangedProfs : clsP.get_maxClampedRangedProfs, get_levelsExpenditure : clsP.get_levelsExpenditure, get_totalProfArcExpenditure : clsP.get_totalProfArcExpenditure, get_profPointsLeft : clsP.get_profPointsLeft, get_traceProfCoreRangedCurrent : clsP.get_traceProfCoreRangedCurrent, get_traceProfCoreMeleeCurrent : clsP.get_traceProfCoreMeleeCurrent, get_traceProfCoreRangedCount : clsP.get_traceProfCoreRangedCount, get_traceProfCoreMeleeCount : clsP.get_traceProfCoreMeleeCount, saveFinaliseCleanupChar : clsP.saveFinaliseCleanupChar};
		this.props = { exitBtnCallback : { required : false, type : Function}, finaliseSaveCallback : { required : false, type : Function}};
		this.watch = { maxBoonsSpendableLeft : clsP.watch_maxBoonsSpendableLeft, raceTier : clsP.watch_raceTier, socialEitherMaxIndex : clsP.watch_socialEitherMaxIndex, wealthEitherMaxIndex : clsP.watch_wealthEitherMaxIndex, syncSocialWealth : clsP.watch_syncSocialWealth, socialClassIndex : clsP.watch_socialClassIndex, wealthIndex : clsP.watch_wealthIndex, socialBenefit1 : clsP.watch_socialBenefit1, socialBenefit2 : clsP.watch_socialBenefit2, socialBenefit3 : clsP.watch_socialBenefit3, validAffordCurrentSchool : clsP.watch_validAffordCurrentSchool, excessDraftedSlots : clsP.watch_excessDraftedSlots};
	}
	,__class__: troshx_sos_vue_CharGen
});
var troshx_sos_vue_CharSheetVue = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_CharVueMixin.getSampleInstance(),troshx_sos_vue_input_MixinInput.getInstance(),new troshx_sos_vue_InventoryStandalone(null)];
};
$hxClasses["troshx.sos.vue.CharSheetVue"] = troshx_sos_vue_CharSheetVue;
troshx_sos_vue_CharSheetVue.__name__ = ["troshx","sos","vue","CharSheetVue"];
troshx_sos_vue_CharSheetVue.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_CharSheetVue.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	setInventory: function(chk) {
		this["char"].inventory = chk;
	}
	,get_domainId: function() {
		return troshx_sos_vue_Globals.DOMAIN_CHARACTER;
	}
	,Mounted: function() {
		if(this.autoLoadChar != null) {
			this.openTreeBrowser();
		}
	}
	,recoverFatique: function(amt) {
		this["char"].fatique -= amt;
		if(this["char"].fatique < 0) {
			this["char"].fatique = 0;
		}
	}
	,Data: function() {
		return new troshx_sos_vue_CharSheetVueData(this.injectChar);
	}
	,Created: function() {
		troshx_sos_sheets_CharSheet.dynSetField = Vue.set;
		troshx_sos_sheets_CharSheet.dynDeleteField = Vue["delete"];
	}
	,Components: function() {
		var _m_ = { };
		_m_["BoonBaneInput"] = new troshx_sos_vue_inputs_impl_BoonBaneInput();
		_m_["bb-apply"] = new troshx_sos_vue_widgets_BoonBaneApplyDetails();
		_m_["SkillLibInput"] = new troshx_sos_vue_inputs_impl_SkillLibInput();
		_m_["SkillSubjectCreator"] = new troshx_sos_vue_widgets_SkillSubjectCreator();
		_m_["InputNameLabel"] = new troshx_sos_vue_inputs_impl_InputNameLabel();
		_m_["ArrayOf"] = new troshx_sos_vue_uifields_ArrayOf();
		_m_["ArrayOfBits"] = new troshx_sos_vue_uifields_ArrayOfBits();
		_m_["Bitmask"] = new troshx_sos_vue_uifields_Bitmask();
		_m_["Money"] = new troshx_sos_vue_uifields_MoneyField();
		_m_["ModifierList"] = new troshx_sos_vue_widgets_ModifierList();
		_m_["inventory"] = new troshx_sos_vue_InventoryVue();
		_m_["inventory-manager"] = new troshx_sos_vue_InventoryManager();
		_m_["tree-browser"] = new troshx_sos_vue_widgets_GingkoTreeBrowser();
		return _m_;
	}
	,openTreeBrowser: function() {
		var _gthis = this;
		if(!this.treeBrowserInited) {
			this.treeBrowserInited = true;
		}
		Vue.nextTick(function() {
			_gthis.$refs.treeBrowser.open();
		});
	}
	,openClipboardWindow: function() {
		this.clipboardLoadContents = "";
		this.$refs.clipboardWindow.open();
	}
	,openFromTreeBrowser: function(contents,filename,disableCallback) {
		if(this.loadCharContents(contents)) {
			this.$refs.treeBrowser.close();
		}
		this.autoLoadChar = null;
	}
	,openModifiersWindow: function() {
		this.$refs.modifiersWindow.open();
	}
	,get_availableTypes: function() {
		return { "troshx.sos.sheets.CharSheet" : true};
	}
	,get_hasSampleWound: function() {
		return this["char"].hasWound(this.sampleWound);
	}
	,get_sampleWoundGotSide: function() {
		return this["char"].body.gotSideWithId(this.sampleWound.locationId);
	}
	,deleteWound: function(w) {
		this["char"].removeWound(w);
	}
	,checkConfirmDeleteWound: function(w) {
		this.woundMayDelete = w;
		this.$refs.confirmDeleteWoundWindow.open();
	}
	,confirmDeleteWound: function() {
		this.deleteWound(this.woundMayDelete);
		this.$refs.confirmDeleteWoundWindow.close();
	}
	,confirmAddWound: function() {
		var lastWound = this.sampleWound;
		if(this.forceNewSampleWound) {
			lastWound.makeUnique();
		}
		this.sampleWound = null;
		this["char"].applyWound(lastWound);
		this.$refs.addWoundWindow.close();
	}
	,get_woundFlagLabels: function() {
		return troshx_sos_core_Wound.getFlagLabels();
	}
	,get_damageTypeLabels: function() {
		return troshx_sos_core_DamageType.getFlagLabels();
	}
	,matchExistingSampleWound: function() {
		var sample = this.sampleWound;
		var _this = this["char"];
		var wound = _this.woundHash[sample.getUID(_this.body)];
		sample.pain = wound.pain;
		sample.BL = wound.BL;
		sample.stun = wound.stun;
	}
	,openAddNewWound: function() {
		this.sampleWound = troshx_sos_core_Wound.getNewEmptyAssign();
		this.forceNewSampleWound = false;
		this.$refs.addWoundWindow.open();
	}
	,exitInventory: function() {
		var _gthis = this;
		this.insideInventory = false;
		Vue.nextTick(function() {
			var htmlElement = _gthis.$refs.inventoryHolder;
			window.scroll({ top : htmlElement.offsetTop});
		});
	}
	,proceedToInventory: function() {
		var _gthis = this;
		this.insideInventory = true;
		Vue.nextTick(function() {
			var htmlElement = _gthis.$refs.inventoryHolder;
			window.scroll({ top : htmlElement.offsetTop});
		});
	}
	,saveFinaliseSkills: function() {
		this["char"].skills.clearAllSkills(true);
		var _g1 = 0;
		var _g = this.skillObjs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ss = this.skillObjs[i];
			var total = this.skillValues[ss.name];
			if(total > 0) {
				this["char"].skills.skillHash[ss.name] = total;
			}
		}
	}
	,loadCharacter: function() {
		this.loadCharContents(this.savedCharContents);
	}
	,loadCharacterClipboardWindow: function() {
		if(this.loadCharContents(this.clipboardLoadContents)) {
			this.$refs.clipboardWindow.close();
		}
	}
	,loadCharContents: function(contents) {
		var newItem;
		try {
			newItem = new haxe_Unserializer(contents).unserialize();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			console.log(e);
			js_Browser.alert("Sorry, failed to unserialize save-content string!");
			return false;
		}
		if(!js_Boot.__instanceof(newItem,troshx_sos_sheets_CharSheet)) {
			console.log(newItem);
			js_Browser.alert("Sorry, unserialized type isn't CharSeet!");
			return false;
		}
		var me = js_Boot.__instanceof(newItem,troshx_sos_sheets_CharSheet) ? newItem : null;
		me.postSerialization();
		this["char"] = me;
		return true;
	}
	,saveCharacter: function() {
		this.saveFinaliseSkills();
		this.saveFinaliseCleanupChar();
		this.saveCharToBox();
	}
	,saveFinaliseCleanupChar: function() {
		this["char"].boons.filter(function(bb) {
			return !bb._canceled;
		});
		this["char"].banes.filter(function(bb1) {
			return !bb1._canceled;
		});
		this["char"].inventory.cleanupBeforeSerialize();
	}
	,executeCopyContents: function() {
		var textarea = this.$refs.savedCharTextArea;
		textarea.select();
		var result = window.document.execCommand("copy");
		if(result != null) {
			var htmlElem = this.$refs.copyNotify;
			htmlElem.style.display = "inline-block";
			haxe_Timer.delay(function() {
				htmlElem.style.display = "none";
			},3000);
		} else {
			js_Browser.alert("Sorry, failed to copy to clipboard!");
		}
	}
	,saveCharToBox: function() {
		var s = new haxe_Serializer();
		s.useCache = true;
		s.serialize(this["char"]);
		var str = s.toString();
		this.savedCharContents = str;
		return str;
	}
	,get_maxAvailableProfSlots: function() {
		if(this["char"].school != null) {
			return this["char"].school.profLimit;
		} else {
			return 0;
		}
	}
	,get_maxMeleeProfSlots: function() {
		var r = this.maxAvailableProfSlots - this.profCoreListRanged.length;
		if(this["char"].school != null) {
			if(r < 0) {
				return 0;
			} else {
				return r;
			}
		} else {
			return 0;
		}
	}
	,get_maxRangedProfSlots: function() {
		var r = this.maxAvailableProfSlots - this.profCoreListMelee.length;
		if(this["char"].school != null) {
			if(r < 0) {
				return 0;
			} else {
				return r;
			}
		} else {
			return 0;
		}
	}
	,get_talentsAvailable: function() {
		return troshx_sos_chargen_CharGenData.getTalentsAvailable();
	}
	,get_superiorsAvailable: function() {
		return troshx_sos_chargen_CharGenData.getSuperiorsAvailable();
	}
	,get_maxTalentSlots: function() {
		var r = this["char"].schoolLevel > 0 ? this.talentsAvailable[this["char"].schoolLevel - 1] : 0;
		if(this["char"].school != null) {
			return r;
		} else {
			return 0;
		}
	}
	,get_maxSuperiorSlots: function() {
		var r = this["char"].schoolLevel > 0 ? this.superiorsAvailable[this["char"].schoolLevel - 1] : 0;
		if(this["char"].school != null) {
			return r;
		} else {
			return 0;
		}
	}
	,addSkill: function(skill,special) {
		var skillToSpecial;
		var specialToSkill;
		skillToSpecial = this.skillSubjectHash[skill];
		if(skillToSpecial == null) {
			skillToSpecial = [];
			Vue.set(this.skillSubjectHash,skill,skillToSpecial);
		}
		specialToSkill = this.skillSubjectHash[special];
		if(specialToSkill == null) {
			specialToSkill = [];
			Vue.set(this.skillSubjectHash,special,specialToSkill);
		}
		skillToSpecial.push(special);
		specialToSkill.push(skill);
		var name = skill + " (" + special + ")";
		Vue.set(this.skillValues,name,0);
		this.skillObjs.push({ name : name, attribs : 0});
	}
	,deleteSkillInput: function(index) {
		var obj = this.skillObjs[index];
		var spl = troshx_sos_core_Skill.getSplitFromSpecialisation(obj.name);
		var skill = spl[0];
		var special = spl[1];
		var skillToSpecial = this.skillSubjectHash[skill];
		var specialToSkill = this.skillSubjectHash[special];
		skillToSpecial.splice(skillToSpecial.indexOf(special),1);
		specialToSkill.splice(skillToSpecial.indexOf(skill),1);
		troshx_sos_chargen_CharGenData.dynDeleteField(this.skillValues,obj.name);
		this.skillObjs.splice(index,1);
	}
	,Template: function() {
		return "<div class=\"chargen\">\r\n\t<br/>\r\n\t<h1>Song of Swords: Character Sheet &nbsp;&nbsp;<button v-on:click=\"openTreeBrowser\" v-show=\"!insideInventory\">&#127759;</button> <button  v-show=\"!insideInventory\" v-on:click=\"$refs.clipboardWindow.open()\">&#128203;</button></h1>\r\n\t\r\n\t<sweet-modal ref=\"treeBrowser\" :class=\"{reset:true}\" v-if=\"treeBrowserInited\" >\t\t\r\n\t\t<tree-browser :availableTypes=\"availableTypes\" v-on:open=\"openFromTreeBrowser\" :initialDomain=\"domainId\" :autoLoad=\"autoLoadChar\" />\r\n\t</sweet-modal>\r\n\t\r\n\t<sweet-modal ref=\"confirmDeleteWoundWindow\" >\r\n\t\t<h3>Delete Wound?</h3>\r\n\t\t<button v-on:click=\"confirmDeleteWound\">Confirm</button>\r\n\t</sweet-modal>\r\n\t\r\n\t<sweet-modal ref=\"modifiersWindow\" >\r\n\t\ttodo: include missing sweet-modal-tab\r\n\t</sweet-modal>\r\n\t\r\n\t<sweet-modal ref=\"addWoundWindow\" >\r\n\t\t<div v-if=\"sampleWound!=null\">\r\n\t\t\t<h3>Add/Apply Wound</h3>\r\n\t\t\t<div>Location: \r\n\t\t\t<select v-model=\"sampleWound.locationId\">\r\n\t\t\t\t<option value=\"\" :key=\"\"></option>\r\n\t\t\t\t<option v-for=\"(li, i) in char.body.hitLocations\" :value=\"li.get_uid()\" :key=\"li.get_uid()\">{{li.name}}</option>\r\n\t\t\t</select> <span :style=\"!sampleWoundGotSide ? {'pointer-events':'none','opacity':.17} : undefined\"><label>L<input type=\"radio\" :checked=\"sampleWound.leftSide\" v-on:click=\"sampleWound.leftSide=true\"></input></label><label>R<input type=\"radio\" v-on:click=\"sampleWound.leftSide=false\" :checked=\"!sampleWound.leftSide\"></input></label></span></div>\r\n\t\t\t<div>Level: <InputInt :obj=\"sampleWound\" prop=\"level\" :min=\"0\" /></div>\r\n\t\t\t<div>Damage Type: \r\n\t\t\t<select v-model.number=\"sampleWound.damageType\" number>\r\n\t\t\t\t<option :value=\"-1\" :key=\"-1\"></option>\r\n\t\t\t\t<option v-for=\"(label, index) in damageTypeLabels\" :key=\"index\" :value=\"index\">{{ label }}</option>\r\n\t\t\t</select></div>\r\n\t\t\t<div :style=\"{opacity: (!hasSampleWound ? .5 : 1), 'pointer-events': (!hasSampleWound ? 'none':'auto') }\"><label>Force New? <input type=\"checkbox\" v-model=\"forceNewSampleWound\"></input></label></div>\r\n\t\t\t<div><button v-on:click=\"confirmAddWound\">Confirm {{ !hasSampleWound || forceNewSampleWound ? 'Add' : 'Re-inflict' }}</button></div>\r\n\t\t\t<hr/>\r\n\t\t\t<div>-<i>Inflict stats</i>-<button v-show=\"hasSampleWound\" v-on:click=\"matchExistingSampleWound()\">Set Existing</button></div>\r\n\t\t\t<div>Stun: <InputInt :obj=\"sampleWound\" prop=\"stun\" :min=\"-1\" /> <i v-show=\"sampleWound.stun<0\">Infinite!</i></div>\r\n\t\t\t<div>Pain: <InputInt :obj=\"sampleWound\" prop=\"pain\" :min=\"-1\" /> <i v-show=\"sampleWound.pain<0\">Infinite!</i></div>\r\n\t\t\t<div>BloodLost (BL): <InputInt :obj=\"sampleWound\" prop=\"BL\" :min=\"0\" /></div>\r\n\t\t</div>\r\n\t</sweet-modal>\r\n\t\r\n\t<sweet-modal ref=\"clipboardWindow\" :class=\"{reset:true}\" >\t\t\r\n\t\t<div>\r\n\t\t\tYou can manually paste saved text stream into text-area and click on Load Character to open a new character!\r\n\t\t\t<div>\r\n\t\t\t\t<textarea ref=\"savedCharTextArea\" character-set=\"UTF-8\" v-model=\"clipboardLoadContents\" style=\"min-height:60px;\"></textarea>\t\r\n\t\t\t</div>\r\n\t\t\t<div><button v-on:click=\"loadCharacterClipboardWindow()\">Load Character</button></div>\r\n\t\t</div>\r\n\t</sweet-modal>\r\n\t\r\n\t<div class=\"chargen__body\" v-if=\"char!=null && !insideInventory\">\r\n\t\t\r\n\t\t<sweet-modal ref=\"awardArcWindow\" v-if=\"false\">\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tHow much arc to AWARD?\r\n\t\t\t\t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<InputInt :obj=\"$data\" prop=\"arcAwardQty\" :min=\"1\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<button slot=\"button\" v-on:click=\"awardArc(arcAwardQty)\">Award</button>\r\n\t\t\t</div>\r\n\t\t</sweet-modal>\r\n\t\t\r\n\t\t<sweet-modal ref=\"spendArcWindow\" v-if=\"false\">\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tHow much arc to spend?\r\n\t\t\t\t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<InputInt :obj=\"$data\" prop=\"arcSpendQty\" :min=\"minArcSpendable\" :max=\"maxArcSpendable\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<button slot=\"button\" v-on:click=\"spendArc(arcSpendQty)\">Award</button>\r\n\t\t\t</div>\r\n\t\t</sweet-modal>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\r\n\t\t<section class=\"gen-general\" id=\"gen-general\">\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div><label>Name:<InputNameLabel :obj=\"char\" prop=\"name\"></InputNameLabel></label></div>\r\n\t\t\t\t<div><label>Title <i>(optional)</i>:<InputNameLabel :obj=\"char\" prop=\"title\"></InputNameLabel></label></div>\r\n\t\t\t\t<div><label>Nickname <i>(optional)</i>:<InputNameLabel :obj=\"char\" prop=\"nickname\"></InputNameLabel></label></div>\r\n\t\t\t\t<div><label>Faction/Assosiation <i>(optional)</i>:<InputNameLabel :obj=\"char\" prop=\"faction\"></InputNameLabel></label></div>\r\n\t\t\t\t<div><label>Gender:</label><select number v-model.number=\"char.gender\"><option :value=\"0\">Male</option><option :value=\"1\">Female</option></select></div>\r\n\t\t\t\t<div><label>Left-handed?:<input type=\"checkbox\" v-model=\"char.leftHanded\"></input></label></div>\r\n\t\t\t\t<br/>\r\n\t\t\t\tKnown as: <b>{{addressedAs}}</b>\r\n\t\t\t\t<div>Race: <b>{{raceName}}</b></div>\r\n\t\t\t\t<div>Social Class/Wealth: <b>{{char.socialClass.name}} / {{char.socialClass.wealth}}</b> <label>&#128274;</label><input type=\"checkbox\" v-model=\"lockWealth\"></input></div>\r\n\t\t\t\t<div><Money :obj=\"char\" prop=\"money\" :readonly=\"lockWealth\"></Money></div>\r\n\t\t\t\t<div class=\"wealth-assets\">\r\n\t\t\t\t\t<label>Your Wealth Assets:</label>\r\n\t\t\t\t\t<ArrayOf of=\"WealthAssetAssign\" :defaultValue=\"getEmptyWealthAssign\" :obj=\"char\" prop=\"wealthAssets\" :minLength=\"0\" :readonly=\"lockWealth\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<label style=\"vertical-align:top\">Notes:</label><textarea v-model=\"char.notes\"  class=\"notes\"></textarea>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\r\n\t\t<hr/>\r\n\t\t\t\r\n\t\t<section class=\"gen-attributes\" id=\"gen-attributes\">\r\n\t\t\t<h2>Attributes &amp; Stats <span class=\"valuer\"><label>&#128274;</label><input type=\"checkbox\" v-model=\"lockAttributes\"></input></span></h2>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div><label>Strength:</label><InputInt :obj=\"char\" prop=\"strength\" :min=\"1\" :readonly=\"lockAttributes\" /><span class=\"modified-attribute\" v-show=\"strength != STR\" :class=\"[STR<strength ? 'lower' : 'higher', {'zero-neg':STR<=0} ]\">{{STR}}</span></div>\r\n\t\t\t\t<div><label>Agility:</label><InputInt :obj=\"char\" prop=\"agility\" :min=\"1\" :readonly=\"lockAttributes\" /><span class=\"modified-attribute\" v-show=\"agility != AGI\" :class=\"[AGI<agility ? 'lower' : 'higher', {'zero-neg':AGI<=0}]\">{{AGI}}</span></div>\r\n\t\t\t\t<div><label>Endurance:</label><InputInt :obj=\"char\" prop=\"endurance\" :min=\"1\" :readonly=\"lockAttributes\" /><span class=\"modified-attribute\" v-show=\"endurance != END\" :class=\"[END<endurance ? 'lower' : 'higher', {'zero-neg':END<=0}]\">{{END}}</span></div>\r\n\t\t\t\t<div><label>Health:</label><InputInt :obj=\"char\" prop=\"health\" :min=\"1\" :readonly=\"lockAttributes\" /><span class=\"modified-attribute\" v-show=\"health != HLT\" :class=\"[HLT<health ? 'lower' : 'higher', {'zero-neg':HLT<=0}]\">{{HLT}}</span></div>\r\n\t\t\t\t<div><label>Willpower:</label><InputInt :obj=\"char\" prop=\"willpower\" :min=\"1\" :readonly=\"lockAttributes\" /><span class=\"modified-attribute\" v-show=\"willpower != WIP\" :class=\"[WIP<willpower ? 'lower' : 'higher', {'zero-neg':WIP<=0}]\">{{WIP}}</span></div>\r\n\t\t\t\t<div><label>Wit:</label><InputInt :obj=\"char\" prop=\"wit\" :min=\"1\" :readonly=\"lockAttributes\" /><span class=\"modified-attribute\" v-show=\"wit != WIT\" :class=\"[WIT<wit ? 'lower' : 'higher', {'zero-neg':WIT<=0}]\">{{WIT}}</span></div>\r\n\t\t\t\t<div><label>Intelligence:</label><InputInt :obj=\"char\" prop=\"intelligence\" :min=\"1\" :readonly=\"lockAttributes\" /><span class=\"modified-attribute\" v-show=\"intelligence != INT\" :class=\"[INT<intelligence ? 'lower' : 'higher', {'zero-neg':INT<=0}]\">{{INT}}</span></div>\r\n\t\t\t\t<div><label>Perception:</label><InputInt :obj=\"char\" prop=\"perception\" :min=\"1\" :readonly=\"lockAttributes\" /><span class=\"modified-attribute\" v-show=\"perception != PER\" :class=\"[PER<perception ? 'lower' : 'higher', {'zero-neg':PER<=0}]\">{{PER}}</span></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div><b>ADR</b> (Adroitness): <span class=\"modified-attribute\" :class=\"[ADR==adr ?'base' : ADR<adr ? 'lower' : 'higher']\"><b>{{ADR}}</b></span><i v-show=\"adr!=ADR\" class=\"baseshow\">({{adr}})</i></div>\r\n\t\t\t\t<div><b>SDB</b> (Strength Damage Bonus): <span><b>{{SDB}}</b></span></div>\r\n\t\t\t\t<div><b>GRIT</b> (Grit): <span class=\"modified-attribute\" :class=\"[baseGrit==GRIT ?'base' : GRIT<baseGrit ? 'lower' : 'higher']\"><b>{{GRIT}}</b></span><i v-show=\"baseGrit!=GRIT\" class=\"baseshow\">({{baseGrit}})</i></div>\r\n\t\t\t\r\n\t\t\t\t<div><b>MOB</b> (Mobility): <span class=\"modified-attribute\" :class=\"[MOB==mob ?'base' : MOB<mob ? 'lower' : 'higher']\"><b>{{MOB}}</b></span><i v-show=\"mob!=MOB\" class=\"baseshow\">({{mob}})</i></div>\r\n\t\t\t\t<div><b>CAR</b> (Carry): <span class=\"modified-attribute\" :class=\"[CAR==car ?'base' : CAR<car ? 'lower' : 'higher']\"><b>{{CAR}}</b></span><i v-show=\"car!=CAR\" class=\"baseshow\">({{car}})</i></div>\r\n\t\t\t\t\r\n\t\t\t\t<div><b>CHA</b> (Charisma): <span class=\"modified-attribute\" :class=\"[CHA==cha ?'base' : CHA<cha ? 'lower' : 'higher']\"><b>{{CHA}}</b></span><i v-show=\"cha!=CHA\" class=\"baseshow\">({{cha}})</i></div>\r\n\t\t\t\t\r\n\t\t\t\t<div><i>TOU</i> (Toughness): <span class=\"modified-attribute\" :class=\"[TOU==tou ?'base' : TOU<tou ? 'lower' : 'higher']\"><b>{{TOU}}</b></span><i v-show=\"tou!=TOU\" class=\"baseshow\">({{tou}})</i></div>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div>Weight/Carry: <b>{{inventoryWeightLbl}}</b> / <b :style=\"{fontWeight:encumbranceLvl>=1 ?'normal':'bold'}\">{{CAR}}</b></div>\r\n\t\t\t\t<div>Master-hand: <span v-if=\"masterHandItem!=null\"><b>{{masterHandItem.name}}</b> <span v-show=\"masterWeapon!=null\"><span v-html=\"masterWeapon.ranged ? '&#9678;' : '&#9876;'\"></span></span><span v-if=\"carriedShield!=null && carriedShield==masterHandItem\"><span class=\"shield-icon-inv\">☗</span><select v-model.number=\"char.inventory.shieldPosition\" number><option :value=\"0\">Low</option><option :value=\"1\">High</option></select></span></span></div>\r\n\t\t\t\t<div>Off-hand: <span v-if=\"offHandItem!=null\"><b>{{offHandItem.name}}</b> <span v-show=\"offhandWeapon!=null\"><span v-html=\"offhandWeapon.ranged ? '&#9678;' : '&#9876;'\"></span></span><span v-if=\"carriedShield!=null && carriedShield==offHandItem\"><span class=\"shield-icon-inv\">☗</span><select v-model.number=\"char.inventory.shieldPosition\" number><option :value=\"0\">Low</option><option :value=\"1\">High</option></select></span></span></div>\r\n\t\t\t\t<div>Reach: <span class=\"modified-attribute\" :class=\"[reachBase==reach ?'base' : reach<reachBase ? 'lower' : 'higher']\"><b>{{reach}}</b></span><i v-show=\"reachBase!=reach\" class=\"baseshow\">({{reachBase}})</i></div>\r\n\t\t\t\t<div>Perception Penalty: <b>{{ perceptionPenalty }}</b></div>\r\n\t\t\t\t<div v-if=\"heldProfeciencies!=null\">{{heldProfeciencyIcons}}: <b style=\"max-width:120px\">{{heldProfeciencies}}</b></div>\r\n\t\t\t\t<div v-else>Defaulting&#9876;from:<br/><b style=\"max-width:120px\">{{defaultProfs}}</b></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t<div>School Level: <b>{{char.schoolLevel}}</b></div>\r\n\t\t\t\t<div class=\"cp\"><b>CP</b> (Melee Combat Pool): <span :class=\"[CP==baseCP ?'base' : CP<baseCP ? 'lower' : 'higher', {'modified-attribute':CP != baseCP}]\"><b>{{CP}}</b></span><i v-show=\"CP!=baseCP\" class=\"baseshow\">({{baseCP}})</i>  (<i>{{CP-char.schoolLevel}}</i> CP without &#9876;)</div>\r\n\t\t\t\t\r\n\t\t\t\t<div><i>CP - Pain(<span v-show=\"totalPain>0\" class=\"got-pain\">{{totalPain}}</span>):</i> <b>{{meleeCP}}</b> (<i>{{meleeCP-char.schoolLevel}}</i> CP without &#9876;)</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>Encumbrance Level: <span><b :style=\"{fontWeight:encumbranceLvl>=1 ?'bold':'normal'}\">{{encumbranceLvlRow.name}}</b>({{encumbranceLvl}})</span></div>\r\n\t\t\t\t<div>Skill Penalty: <span><b>{{skillPenalty}}</b></span></div>\r\n\t\t\t\t<div>Exhaustion Rate: <span><b>{{exhaustionRate}}x</b></span></div>\r\n\t\t\t\t<div>Recovery Amount: <span class=\"modified-attribute\" :class=\"[recoveryRateAmount==recoveryRateAmountBase ?'base' : recoveryRateAmount<recoveryRateAmountBase ? 'lower' : 'higher']\"><b>{{recoveryRateAmount}} <i>({{recoveryRate}}x)</i></b></span><i v-show=\"recoveryRateAmount!=recoveryRateAmountBase\" class=\"baseshow\">({{recoveryRateAmountBase}})</i><a v-show=\"char.fatique > 0\" href=\"javascript:;\" v-on:click=\"recoverFatique(recoveryRateAmount)\">[+]</a></div>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div><b>Fatique Points:</b><InputInt :min=\"0\" :obj=\"char\" prop=\"fatique\" /> {{fatiqueLevel}}:<b :style=\"{fontWeight:fatiqueLevel>=1 ?'bold':'normal'}\">{{curFatiqueRow.name}}</b></div>\r\n\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"char.prone\"></input>Prone?</label></div>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div><b>Health Lost:</b><InputInt :min=\"0\" :obj=\"char\" prop=\"healthLoss\" /></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gen-col\" v-show=\"false\">\r\n\t\t\t\t<button v-on:click=\"openModifiersWindow\">&#128200;</button>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\r\n\t\t<hr/>\r\n\t\t\t\t\r\n\t\t<section class=\"gen-wounds\" id=\"gen-wounds\">\r\n\t\t\t<h2>Wounds <span class=\"valuer\"><label>&#128274;</label><input type=\"checkbox\" v-model=\"lockWounds\"></input></span> <span class=\"valuer\"><button v-on:click=\"openAddNewWound()\">Add/Apply Wound</button></span></h2>\r\n\t\t\t<ul v-if=\"char.wounds.length > 0\" class=\"wounds\">\r\n\t\t\t\t<li v-for=\"(li, i) in char.wounds\" :key=\"li.getUID(char.body)\">{{li.getDescLabel(char.body, damageTypeLabels)}} <span class=\"stats\"><span><label>Stun:<InputInt :readonly=\"lockWounds\" :min=\"-1\" :obj=\"li\" prop=\"stun\" /></label><i v-show=\"li.stun<0\">infinite!</i></span> <span><label>Pain:<InputInt :readonly=\"lockWounds\" :min=\"-1\" :obj=\"li\" prop=\"pain\" /></label><i v-show=\"li.pain<0\">infinite!</i></span> <span><label>BL:<InputInt :readonly=\"lockWounds\" :min=\"0\" prop=\"BL\" :obj=\"li\"  /></label></span> <Bitmask :obj=\"li\" prop=\"flags\" :labels=\"woundFlagLabels\" /> <span><label>Notes:<InputString :min=\"0\" prop=\"notes\" :obj=\"li\" class=\"notes\"  /></label></span> <span><label>Age:<InputNumber :min=\"0\" prop=\"age\" :obj=\"li\"  /></label></span> <a href=\"javascript:;\" v-on:click=\"checkConfirmDeleteWound(li)\">[x]</a></span></li>\r\n\t\t\t</ul>\r\n\t\t\t<div>\r\n\t\t\t\t<div>Total Pain: <b>{{totalPain}}</b></div>\r\n\t\t\t\t<div>Total Blood Lost (BL): <b>{{totalBloodLost}}</b></div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t\t\t\r\n\t\t<hr/>\r\n\t\t\t\r\n\t\t<section class=\"gen-bnb\"  id=\"gen-bnb\">\r\n\t\t\t<h2>Boons &amp; Banes</h2>\r\n\t\t\t<h3><span class=\"underline\">Boons (if any):</span><span class=\"header-liners\"><a :href=\"li.__hasUIFields__ ? 'javascript:;' : undefined\" :class=\"{canceled:li._canceled}\" v-for=\"li in boonsArray\"><span v-if=\"li.__hasUIFields__\" v-on:click=\"$refs['bb_'+li.get_uid()][0].open()\">{{li.boon.name}} {{getBracketLabelBnB(li)}}</span><span v-else>{{li.boon.name}} {{getBracketLabelBnB(li)}}</span></a></span></h3>\r\n\t\t\t<h3><span>Banes (if any):</span><span class=\"header-liners\"></span><span class=\"header-liners\"><a :href=\"li.__hasUIFields__ ? 'javascript:;' : undefined\"  :class=\"{canceled:li._canceled}\" v-for=\"li in banesArray\"><span v-if=\"li.__hasUIFields__\" v-on:click=\"$refs['bb_'+li.get_uid()][0].open()\">{{li.bane.name}} {{getBracketLabelBnB(li)}}</span><span v-else>{{li.bane.name}} {{getBracketLabelBnB(li)}}</span></a></span></h3>\r\n\t\t\t<div class=\"opencloselink\"><a href=\"#\" v-show=\"showBnBs\" v-on:click.prevent=\"showBnBs=false\">^ Hide</a><a href=\"#\" v-show=\"!showBnBs\" v-on:click.prevent=\"showBnBs=true\">Show More &gt;</a> &nbsp;&nbsp;</div>\r\n\t\t\t<div v-show=\"showBnBs\">\r\n\t\t\t\t<div class=\"new-bnbs\">\r\n\t\t\t\t\t<h3>Choose Boons <span class=\"valuer\"><label>&#128274;</label><input type=\"checkbox\" v-model=\"lockBoons\"></input></span></h3>\r\n\t\t\t\t\t<div class=\"boon-tags\">\r\n\t\t\t\t\t\t<BoonBaneInput v-for=\"(li, i) in boonAssignList\" :key=\"i\" :obj=\"li\" :readonly=\"lockBoons\" prop=\"rank\" v-on:resetBB=\"resetBB\" v-on:uncancel=\"uncancel\" v-on:addBB=\"addBB\" v-on:removeBB=\"removeBB\"  v-on:updateRankBB=\"updateRankBB\" v-on:updateCanceledBB=\"updateCanceledBB\" />\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<h3>Choose Banes <span class=\"valuer\"><label>&#128274;</label><input type=\"checkbox\" v-model=\"lockBanes\"></input></span></h3>\r\n\t\t\t\t\t<div class=\"bane-tags\">\r\n\t\t\t\t\t\t<BoonBaneInput v-for=\"(li, i) in baneAssignList\" :key=\"i\" :obj=\"li\" :readonly=\"lockBanes\" prop=\"rank\" v-on:resetBB=\"resetBB\" v-on:uncancel=\"uncancel\"  v-on:addBB=\"addBB\" v-on:removeBB=\"removeBB\"  v-on:updateRankBB=\"updateRankBB\" v-on:updateCanceledBB=\"updateCanceledBB\" />\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t\t<sweet-modal v-for=\"(li,i) in boonsArray\" :key=\"'bb_'+li.get_uid()\" :ref=\"'bb_'+li.get_uid()\"  >\t\t\r\n\t\t\t\t<bb-apply :assign=\"li\" :remainingPoints=\"maxBoonsSpendableLeft\" :ingame=\"char.ingame\"></bb-apply>\r\n\t\t\t</sweet-modal>\r\n\r\n\t\t\t\r\n\t\t\t<sweet-modal v-for=\"(li,i) in banesArray\" :key=\"'bb_'+li.get_uid()\" :ref=\"'bb_'+li.get_uid()\"  >\r\n\t\t\t\t<bb-apply :assign=\"li\" :ingame=\"char.ingame\" v-on:callback=\"onBaneCallbackReceived\"></bb-apply>\r\n\t\t\t</sweet-modal>\r\n\t\t\r\n\t\t</section>\r\n\t\t<hr/>\r\n\t\t\t\r\n\t\t<section class=\"gen-skills\"  id=\"gen-skills\">\r\n\t\t\t<h2>Skills</h2>\r\n\t\t\t<h3>Skill(s): <span class=\"header-liners\"><span v-for=\"(skillObj, i) in skillObjs\" :key=\"skillObj.name\" v-if=\"skillValues[skillObj.name]>0\">{{ skillObj.name }}:<b>{{skillValues[skillObj.name]}}</b></span></span></h3>\r\n\t\t\t<div class=\"opencloselink\"><a href=\"#\" v-show=\"showEditSkills\" v-on:click.prevent=\"showEditSkills=false\">^ Hide</a><a href=\"#\" v-show=\"!showEditSkills\" v-on:click.prevent=\"showEditSkills=true\">Show More &gt;</a> &nbsp;&nbsp;</div>\r\n\t\t\t<div v-show=\"showEditSkills\">\r\n\t\t\t\t<div class=\"new-skills\">\r\n\t\t\t\t\t<div class=\"skill-lib\">\r\n\t\t\t\t\t\t<SkillLibInput v-for=\"(skillObj, i) in skillObjs\" v-if=\"!skillsTable.requiresSpecialisation[skillObj.name]\" :index=\"i\" :key=\"skillObj.name\" :obj=\"skillValues\" :prop=\"skillObj.name\" :skillsTable=\"skillsTable\" :canDelete=\"i>=startingSkillObjsCount\"  v-on:delete=\"deleteSkillInput\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<SkillSubjectCreator :skillSubjects=\"skillSubjects\" :skillValues=\"skillValues\" :skillList=\"specialisedSkills\" :skillSubjectHash=\"skillSubjectHash\" v-on:addSkill=\"addSkill\"  />\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t\t\r\n\t\t<hr/>\r\n\r\n\t\t<section class=\"gen-schoolprofs\"  id=\"gen-schoolprofs\">\r\n\t\t\t<h2>School &amp; Profeciencies <span class=\"valuer\"><label>&#128274;</label><input type=\"checkbox\" v-model=\"lockProfs\"></input></span></h2></h2>\r\n\t\t\t<div class=\"select-school\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label class=\"lbl-school\">School:</label> <span v-if=\"char.school!=null\">{{char.school.name}}</span><b v-show=\"char.school==null\">-</b> , <label class=\"lbl-level\">Level:<InputInt :obj=\"char\" prop=\"schoolLevel\" :readonly=\"lockProfs\" /></label>\r\n\t\t\t\t</div>\r\n\t\r\n\t\t\t</div>\r\n\t\t\t<div class=\"school-info\" v-if=\"char.school != null\">\r\n\t\t\t\t<div>Max Profeciencies: {{ char.school.profLimit }}</div>\r\n\t\t\t\t<div class=\"cost-info\">Learning Profeciency/Arc Point Cost: ( <span :class=\"{selected:isHuman}\"><b class=\"color-free\">Free</b> - Human</span>, &nbsp; <span :class=\"{selected:!isHuman}\"><b>3 points</b> - Non-human)</span></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"prof-list\">\r\n\t\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t\t<h5>&#9876; Melee Profeciencies:</h5>\r\n\t\t\t\t\t<ArrayOfBits :obj=\"$data\" prop=\"profCoreListMelee\" :labels=\"profCoreMeleeListNames\" :bitmaskSetObj=\"char\" bitmaskSetProp=\"profsMelee\" :maxLength=\"char.school!=null ? maxMeleeProfSlots : undefined\" :readonly=\"lockProfs\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"gen-col\">\r\n\t\t\t\t\t<h5>&#9678; Ranged Profeciencies:</h5>\r\n\t\t\t\t\t<ArrayOfBits :obj=\"$data\" prop=\"profCoreListRanged\" :labels=\"profCoreRangedListNames\" :bitmaskSetObj=\"char\" bitmaskSetProp=\"profsRanged\" :maxLength=\"char.school!=null ? maxRangedProfSlots : undefined\" :readonly=\"lockProfs\"  />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"manuever-list gen-col\">\r\n\t\t\t\t<h5>Superior Manuevers:</h5>\r\n\t\t\t\t<ArrayOf of=\"String\" defaultValue=\"\" :obj=\"char\" prop=\"superiorManueverNotes\"  :maxLength=\"char.school!=null ? maxSuperiorSlots : undefined\" :readonly=\"lockProfs\" />\r\n\t\t\t\t<h5>Mastery Manuever:</h5>\r\n\t\t\t\t<ArrayOf of=\"String\" defaultValue=\"\" :obj=\"char\" prop=\"masteryManueverNotes\" :maxLength=\"char.school!=null ? maxMasterySlots : undefined\" :readonly=\"lockProfs\" />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"talent-list gen-col\">\r\n\t\t\t\t<h5>Talents:</h5>\r\n\t\t\t\t<ArrayOf of=\"String\" defaultValue=\"\" :obj=\"char\" prop=\"talentNotes\" :maxLength=\"char.school!=null ? maxTalentSlots : undefined\" :readonly=\"lockProfs\" />\r\n\t\t\t</div>\t\t\r\n\t\t\t<div class=\"school-benefits gen-col\" v-if=\"char.schoolBonuses != null\">\r\n\t\t\t\t<h5>Benefits: <span class=\"tag\" v-for=\"li in schoolTags\" :key=\"li\">{{li}}</span></h5>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</section>\r\n\t\t\r\n\t\t<hr/>\r\n\t\r\n\t\t<div ref=\"inventoryHolder\">\r\n\t\t\t\r\n\t\t\t<inventory :inventory=\"char.inventory\" :maxWeight=\"CAR\" :injectWeight=\"inventoryWeight\" v-on:loadSheet=\"loadSheet\">\t\r\n\t\t\t\t<span slot=\"titleAfter\">&nbsp;&nbsp;<button v-on:click=\"proceedToInventory\">&#10064;</button></span>\r\n\t\t\t\t<span slot=\"weightAfter\"><span><b :style=\"{fontWeight:encumbranceLvl>=1 ?'bold':'normal'}\">{{encumbranceLvlRow.name}}</b>({{encumbranceLvl}})</span></span>\r\n\t\t\t</inventory>\r\n\t\t</div>\r\n\t\r\n\t\t<hr/>\r\n\t</div>\r\n\t\t\t\r\n\t<div class=\"chargen__footer\" v-if=\"char!=null && !insideInventory\">\r\n\t\t\t\r\n\t\t<div class=\"sect-arc\">\r\n\t\t\t<h2>Arcs <span class=\"valuer\"><label>&#128274;</label><input type=\"checkbox\" v-model=\"lockArc\"></input></span></h2>\r\n\t\t\t<div><label>Arc awarded: <InputInt :obj=\"char\" :min=\"0\" prop=\"arcPointsAccum\" :readonly=\"lockArc\" /></label></div>\r\n\t\t\t<div><label>Arc spent: <InputInt :obj=\"char\" :min=\"0\" prop=\"arcSpent\" :readonly=\"lockArc\" :max=\"char.arcPointsAccum\" /></label></div>\r\n\t\t\t<div>Loaded (spent/awarded): <i>{{loadedArcSpent}}</i>/<i>{{loadedArcAccum}}</i></div>\r\n\t\t\t<br/>\r\n\t\t\t<div><label>Saga:</label><textarea v-model=\"char.arcSaga\" class=\"notes\"></textarea></div>\r\n\t\t\t<div><label>Epic:</label><textarea v-model=\"char.arcEpic\" class=\"notes\"></textarea></div>\r\n\t\t\t<div><label>Belief:</label><textarea v-model=\"char.arcBelief\" class=\"notes\"></textarea></div>\r\n\t\t\t<div><label>Glory:</label><textarea v-model=\"char.arcGlory\" class=\"notes\"></textarea></div>\r\n\t\t\t<div><label>Flaw:</label><textarea :disabled=\"!isHuman\" v-model=\"char.arcFlaw\" class=\"notes\"></textarea></div>\r\n\t\t</div>\r\n\t\t\t\r\n\t\t<hr/>\r\n\t\t\t\r\n\t\t<div><button v-on:click=\"saveCharacter()\">Save Character</button></div>\r\n\t\t<div><textarea ref=\"savedCharTextArea\" character-set=\"UTF-8\" v-model=\"savedCharContents\" style=\"min-height:60px;\">\r\n\t\t\t\r\n\t\t</textarea><button v-on:click=\"executeCopyContents()\" ref=\"copyButton\">Copy</button><i class=\"copy-notify\" ref=\"copyNotify\" style=\"display:none\">copied!</i></div>\r\n\t\t<div><button v-on:click=\"loadCharacter()\">Load Character!</button></div>\t\r\n\t</div>\r\n\r\n\t<div ref=\"inventoryHolder\" v-if=\"char!=null\">\r\n\t\t<inventory-manager v-if=\"insideInventory\" :backBtnCallback=\"exitInventory\" :inventory=\"char.inventory\" :maxWeight=\"CAR\" v-on:loadSheet=\"loadSheet\">\r\n\t\t\t<span slot=\"weightAfter\"><span><b :style=\"{fontWeight:encumbranceLvl>=1 ?'bold':'normal'}\">{{encumbranceLvlRow.name}}</b>({{encumbranceLvl}})</span></span>\r\n\t\t</inventory-manager>\r\n\t</div>\r\n</div>\r\n";
	}
	,get_placeholder: function() {
		return "[placeholder]";
	}
	,watch_injectChar: function(newVal,oldVal) {
		this["char"] = newVal;
	}
	,watch_char: function(newVal) {
		this.$data.initNewChar();
	}
	,_Init: function() {
		var cls = troshx_sos_vue_CharSheetVue;
		var clsP = cls.prototype;
		this.mounted = clsP.Mounted;
		this.data = clsP.Data;
		this.created = clsP.Created;
		this.components = this.Components();
		this.template = this.Template();
		this.computed = { maxAvailableProfSlots : clsP.get_maxAvailableProfSlots, maxMeleeProfSlots : clsP.get_maxMeleeProfSlots, maxRangedProfSlots : clsP.get_maxRangedProfSlots, maxTalentSlots : clsP.get_maxTalentSlots, maxSuperiorSlots : clsP.get_maxSuperiorSlots, domainId : clsP.get_domainId, availableTypes : clsP.get_availableTypes, hasSampleWound : clsP.get_hasSampleWound, sampleWoundGotSide : clsP.get_sampleWoundGotSide, woundFlagLabels : clsP.get_woundFlagLabels, damageTypeLabels : clsP.get_damageTypeLabels, talentsAvailable : clsP.get_talentsAvailable, superiorsAvailable : clsP.get_superiorsAvailable, placeholder : clsP.get_placeholder};
		this.methods = { setInventory : clsP.setInventory, get_domainId : clsP.get_domainId, recoverFatique : clsP.recoverFatique, openTreeBrowser : clsP.openTreeBrowser, openClipboardWindow : clsP.openClipboardWindow, openFromTreeBrowser : clsP.openFromTreeBrowser, openModifiersWindow : clsP.openModifiersWindow, get_availableTypes : clsP.get_availableTypes, get_hasSampleWound : clsP.get_hasSampleWound, get_sampleWoundGotSide : clsP.get_sampleWoundGotSide, deleteWound : clsP.deleteWound, checkConfirmDeleteWound : clsP.checkConfirmDeleteWound, confirmDeleteWound : clsP.confirmDeleteWound, confirmAddWound : clsP.confirmAddWound, get_woundFlagLabels : clsP.get_woundFlagLabels, get_damageTypeLabels : clsP.get_damageTypeLabels, matchExistingSampleWound : clsP.matchExistingSampleWound, openAddNewWound : clsP.openAddNewWound, exitInventory : clsP.exitInventory, proceedToInventory : clsP.proceedToInventory, saveFinaliseSkills : clsP.saveFinaliseSkills, loadCharacter : clsP.loadCharacter, loadCharacterClipboardWindow : clsP.loadCharacterClipboardWindow, loadCharContents : clsP.loadCharContents, saveCharacter : clsP.saveCharacter, saveFinaliseCleanupChar : clsP.saveFinaliseCleanupChar, executeCopyContents : clsP.executeCopyContents, saveCharToBox : clsP.saveCharToBox, get_maxAvailableProfSlots : clsP.get_maxAvailableProfSlots, get_maxMeleeProfSlots : clsP.get_maxMeleeProfSlots, get_maxRangedProfSlots : clsP.get_maxRangedProfSlots, get_talentsAvailable : clsP.get_talentsAvailable, get_superiorsAvailable : clsP.get_superiorsAvailable, get_maxTalentSlots : clsP.get_maxTalentSlots, get_maxSuperiorSlots : clsP.get_maxSuperiorSlots, addSkill : clsP.addSkill, deleteSkillInput : clsP.deleteSkillInput, get_placeholder : clsP.get_placeholder, watch_injectChar : clsP.watch_injectChar, watch_char : clsP.watch_char};
		this.props = { exitBtnCallback : { required : false, type : Function}, injectChar : { required : false, type : Object}, finaliseSaveCallback : { required : false, type : Function}};
		this.watch = { injectChar : clsP.watch_injectChar, 'char' : clsP.watch_char};
	}
	,__class__: troshx_sos_vue_CharSheetVue
});
var troshx_sos_vue_CharSheetVueData = function($char) {
	this.arcSpendQty = 0;
	this.arcAwardQty = 0;
	this.forceNewSampleWound = false;
	this.savedCharContents = "";
	this.clipboardLoadContents = "";
	this.showEditSkills = false;
	this.showBnBs = false;
	this.treeBrowserInited = false;
	this.lockWounds = true;
	this.lockArc = true;
	this.lockWealth = true;
	this.lockProfs = true;
	this.lockBanes = true;
	this.lockBoons = true;
	this.lockAttributes = true;
	this["char"] = $char == null ? new troshx_sos_sheets_CharSheet() : $char;
	this.autoLoadChar = troshx_sos_vue_Globals.AUTO_LOAD;
	this.initNewChar();
};
$hxClasses["troshx.sos.vue.CharSheetVueData"] = troshx_sos_vue_CharSheetVueData;
troshx_sos_vue_CharSheetVueData.__name__ = ["troshx","sos","vue","CharSheetVueData"];
troshx_sos_vue_CharSheetVueData.prototype = {
	initNewChar: function() {
		this.sampleWound = null;
		this.woundMayDelete = null;
		this.profCoreListMelee = [];
		this.profCoreListRanged = [];
		this.sessionArcSpent = 0;
		this.sessionArcAwarded = 0;
		this.insideInventory = false;
		this.loadedArcAccum = this["char"].arcPointsAccum;
		this.loadedArcSpent = this["char"].arcSpent;
		this.initBoons();
		this.initSkills();
		this.initProfs();
	}
	,initProfs: function() {
		var _g = 0;
		while(_g < 31) {
			var i = _g++;
			if((this["char"].profsMelee & 1 << i) != 0) {
				this.profCoreListMelee.push(1 << i);
			}
		}
		var _g1 = 0;
		while(_g1 < 31) {
			var i1 = _g1++;
			if((this["char"].profsRanged & 1 << i1) != 0) {
				this.profCoreListRanged.push(1 << i1);
			}
		}
	}
	,initBoons: function() {
		var boonList = troshx_sos_bnb_Boons.getList();
		this.boonAssignList = [];
		this.baneAssignList = [];
		var bb;
		var _g1 = 0;
		var _g = boonList.length;
		while(_g1 < _g) {
			var i = _g1++;
			bb = boonList[i];
			var ba = Reflect.field(this["char"].boons.hash,bb.name);
			if(ba != null) {
				this.boonAssignList.push(ba);
			} else if((bb.flags & 1) != 0) {
				continue;
			} else {
				var tmp = this.boonAssignList;
				ba = boonList[i].getAssign(0,this["char"]);
				tmp.push(ba);
			}
			ba._remainingCached = 999;
		}
		var baneList = troshx_sos_bnb_Banes.getList();
		var _g11 = 0;
		var _g2 = baneList.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			bb = baneList[i1];
			var ba1 = Reflect.field(this["char"].banes.hash,bb.name);
			if(ba1 != null) {
				this.baneAssignList.push(ba1);
			} else if((bb.flags & 1) != 0) {
				continue;
			} else {
				var tmp1 = this.baneAssignList;
				ba1 = baneList[i1].getAssign(0,this["char"]);
				tmp1.push(ba1);
			}
		}
	}
	,initSkills: function() {
		this.skillsTable = troshx_sos_core_SkillTable.getNewDefaultSkillTable();
		this.skillsTable.matchValuesWith(this["char"].skills);
		this.skillObjs = this.skillsTable.getSkillObjectsAsArray(true);
		this.specialisedSkills = this.skillsTable.getSpecialisationList();
		this.setupEmptyMappings();
		this.skillSubjectHash = { };
		var _g = 0;
		var _g1 = Reflect.fields(this.skillValues);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var arr = troshx_sos_core_Skill.getSplitFromSpecialisation(f);
			if(arr != null) {
				var skill = arr[0];
				var special = arr[1];
				var skillToSpecial;
				var specialToSkill;
				skillToSpecial = this.skillSubjectHash[skill];
				if(skillToSpecial == null) {
					skillToSpecial = [];
					this.skillSubjectHash[skill] = skillToSpecial;
				}
				specialToSkill = this.skillSubjectHash[special];
				if(specialToSkill == null) {
					specialToSkill = [];
					this.skillSubjectHash[special] = specialToSkill;
				}
				skillToSpecial.push(special);
				specialToSkill.push(skill);
			}
		}
		this.startingSkillObjsCount = this.skillObjs.length;
	}
	,setupEmptyMappings: function() {
		var arrAdded = [];
		this.skillValues = { };
		var _g = 0;
		var _g1 = Reflect.fields(this.skillsTable.skillHash);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(!this.skillsTable.requiresSpecialisation[f]) {
				var existingVal = this["char"].skills.skillHash[f];
				this.skillValues[f] = existingVal != null ? existingVal : 0;
			}
		}
		arrAdded.sort(troshx_sos_core_SkillTable.sortArrayMethod);
		this.skillObjs = this.skillObjs.concat(arrAdded);
		this.skillSubjects = this["char"].skills.getSubjects();
		var reflectedExisting = { };
		var _g11 = 0;
		var _g2 = this.skillSubjects.length;
		while(_g11 < _g2) {
			var i = _g11++;
			reflectedExisting[this.skillSubjects[i]] = true;
		}
		this.skillSubjectsInitial = reflectedExisting;
	}
	,__class__: troshx_sos_vue_CharSheetVueData
};
var troshx_sos_vue_CharVueMixin = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.CharVueMixin"] = troshx_sos_vue_CharVueMixin;
troshx_sos_vue_CharVueMixin.__name__ = ["troshx","sos","vue","CharVueMixin"];
troshx_sos_vue_CharVueMixin.getSampleInstance = function() {
	if(troshx_sos_vue_CharVueMixin.INSTANCE != null) {
		return troshx_sos_vue_CharVueMixin.INSTANCE;
	} else {
		return troshx_sos_vue_CharVueMixin.INSTANCE = new troshx_sos_vue_CharVueMixin();
	}
};
troshx_sos_vue_CharVueMixin.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_CharVueMixin.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { };
	}
	,get_encumbered: function() {
		return this.totalWeight >= this.CAR;
	}
	,get_totalWeight: function() {
		return this["char"].inventory.calculateTotalWeight();
	}
	,get_encumbranceLvl: function() {
		var _this = this["char"];
		return Math.floor(_this.inventory.calculateTotalWeight() / _this.clampIntZero(_this.getModifiedValue(10,_this.clampIntZero(_this.getModifiedValue(16,_this.strength + _this.endurance)))));
	}
	,get_offhandWeapon: function() {
		return this["char"].inventory.getOffhandWeapon();
	}
	,get_masterWeapon: function() {
		return this["char"].inventory.getMasterWeapon();
	}
	,get_reachBase: function() {
		var w = this.offhandWeapon;
		var w2 = this.masterWeapon;
		return troshx_util_LibUtil.maxI(w != null ? w.reach : 1,w2 != null ? w2.reach : 1);
	}
	,get_reach: function() {
		return this["char"].getModifiedValue(14,this.reachBase) | 0;
	}
	,get_adr: function() {
		var _this = this["char"];
		return (_this.agility + _this.wit) / 2 | 0;
	}
	,get_mob: function() {
		var _this = this["char"];
		return (_this.strength + _this.agility + _this.endurance) / 2 | 0;
	}
	,get_car: function() {
		var _this = this["char"];
		return _this.strength + _this.endurance;
	}
	,get_cha: function() {
		var _this = this["char"];
		return (_this.willpower + _this.wit + _this.perception) / 2 | 0;
	}
	,get_tou: function() {
		var _this = this["char"];
		return 4;
	}
	,get_totalPain: function() {
		return this["char"].get_totalPain();
	}
	,get_totalBloodLost: function() {
		return this["char"].get_totalBloodLost();
	}
	,get_ADR: function() {
		var _this = this["char"];
		return _this.clampIntZero(_this.getModifiedValue(8,(_this.agility + _this.wit) / 2 | 0));
	}
	,get_MOB: function() {
		var _this = this["char"];
		var row = _this.get_encumbranceLvlRow();
		return row.mobMult * _this.clampIntZero(_this.getModifiedValue(9,(_this.strength + _this.agility + _this.endurance) / 2 | 0) + row.mob + troshx_sos_sheets_FatiqueTable.getTable()[_this.get_fatiqueLevel()].mob);
	}
	,get_CAR: function() {
		var _this = this["char"];
		return _this.clampIntZero(_this.getModifiedValue(10,_this.clampIntZero(_this.getModifiedValue(16,_this.strength + _this.endurance))));
	}
	,get_CHA: function() {
		var _this = this["char"];
		return _this.clampIntZero(_this.getModifiedValue(11,(_this.willpower + _this.wit + _this.perception) / 2 | 0));
	}
	,get_startingGrit: function() {
		var _this = this["char"];
		return _this.clampIntZero(_this.getModifiedValue(20,_this.willpower / 2 | 0));
	}
	,get_TOU: function() {
		var _this = this["char"];
		return _this.clampIntZero(_this.getModifiedValue(12,4));
	}
	,get_GRIT: function() {
		var _this = this["char"];
		return _this.clampIntZero(_this.getModifiedValue(20,_this.willpower / 2 | 0)) + _this.gritAccum | 0;
	}
	,get_baseGrit: function() {
		return this["char"].willpower / 2 | 0;
	}
	,get_STR: function() {
		return this["char"].get_STR();
	}
	,get_AGI: function() {
		return this["char"].get_AGI();
	}
	,get_END: function() {
		return this["char"].get_END();
	}
	,get_HLT: function() {
		return this["char"].get_HLT();
	}
	,get_WIP: function() {
		return this["char"].get_WIP();
	}
	,get_WIT: function() {
		return this["char"].get_WIT();
	}
	,get_INT: function() {
		return this["char"].get_INT();
	}
	,get_PER: function() {
		return this["char"].get_PER();
	}
	,get_negativeOrZeroStat: function() {
		if(!(this.STR <= 0 || this.AGI <= 0 || this.END <= 0 || this.AGI <= 0 || this.HLT <= 0 || this.WIP <= 0 || this.WIT <= 0 || this.INT <= 0)) {
			return this.PER <= 0;
		} else {
			return true;
		}
	}
	,get_strength: function() {
		return this["char"].strength;
	}
	,get_agility: function() {
		return this["char"].agility;
	}
	,get_endurance: function() {
		return this["char"].endurance;
	}
	,get_health: function() {
		return this["char"].health;
	}
	,get_willpower: function() {
		return this["char"].willpower;
	}
	,get_wit: function() {
		return this["char"].wit;
	}
	,get_intelligence: function() {
		return this["char"].intelligence;
	}
	,get_perception: function() {
		return this["char"].perception;
	}
	,get_raceName: function() {
		var _this = this["char"];
		if(_this.race != null) {
			return _this.race.name;
		} else {
			return "Unspecified";
		}
	}
	,get_schoolName: function() {
		var _this = this["char"];
		if(_this.school != null) {
			return _this.school.name;
		} else {
			return "";
		}
	}
	,get_socialClassName: function() {
		var _this = this["char"];
		if(_this.socialClass != null) {
			return _this.socialClass.name;
		} else {
			return "";
		}
	}
	,get_perceptionPenalty: function() {
		return this["char"].inventory.getPerceptionPenalty();
	}
	,get_carriedShield: function() {
		return this["char"].inventory.findHeldShield();
	}
	,get_masterHandItem: function() {
		return this["char"].inventory.findMasterHandItem();
	}
	,get_offHandItem: function() {
		return this["char"].inventory.findOffHandItem();
	}
	,get_inventoryWeight: function() {
		return this["char"].inventory.calculateTotalWeight();
	}
	,get_inventoryWeightLbl: function() {
		return parseFloat(this.inventoryWeight.toFixed(2));
	}
	,get_defaultProfs: function() {
		var m = this.masterWeapon;
		var o = this.offhandWeapon;
		var cm = this["char"].profsMelee;
		var cr = this["char"].profsRanged;
		var amb = this.ambidextrous;
		if(amb ? m == null && o == null : m == null) {
			return "Pugilism" + "\\" + "Wrestling";
		}
		var str = "";
		if(m != null) {
			var ranged = m.ranged;
			if(!ranged) {
				str += troshx_sos_core_Profeciency.getLabelsOfArrayProfs(ranged ? troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged() : troshx_sos_core_Profeciency.getCoreMelee(),m.profs).join(",");
			}
		}
		if(amb && o != null) {
			str += "/";
			var ranged1 = o.ranged;
			if(!ranged1) {
				str += troshx_sos_core_Profeciency.getLabelsOfArrayProfs(ranged1 ? troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged() : troshx_sos_core_Profeciency.getCoreMelee(),o.profs).join(",");
			}
		}
		if(str != "") {
			return str;
		} else {
			return "(ranged)";
		}
	}
	,get_heldProfeciencies: function() {
		var m = this.masterWeapon;
		var o = this.offhandWeapon;
		var str = "";
		var cm = this["char"].profsMelee;
		var cr = this["char"].profsRanged;
		var amb = this.ambidextrous;
		if(amb ? m == null && o == null : m == null) {
			str = ((256 & cm) != 0 ? "Pugilism" : "") + "\\" + ((128 & cm) != 0 ? "Wrestling" : "");
			if(str != "\\") {
				return str;
			} else {
				return null;
			}
		}
		if(m != null) {
			var ranged = m.ranged;
			str += troshx_sos_core_Profeciency.getLabelsOfArrayProfs(ranged ? troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged() : troshx_sos_core_Profeciency.getCoreMelee(),m.profs & (ranged ? cr : cm)).join(",");
		}
		if(amb && o != null) {
			str += "/";
			var ranged1 = o.ranged;
			str += troshx_sos_core_Profeciency.getLabelsOfArrayProfs(ranged1 ? troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged() : troshx_sos_core_Profeciency.getCoreMelee(),o.profs & (ranged1 ? cr : cm)).join(",");
		}
		if(str != "") {
			return str;
		} else {
			return null;
		}
	}
	,get_heldProfeciencyIcons: function() {
		var m = this.masterWeapon;
		var o = this.offhandWeapon;
		var str = "";
		var cm = this["char"].profsMelee;
		var cr = this["char"].profsRanged;
		var amb = this.ambidextrous;
		if(amb ? m == null && o == null : m == null) {
			return "⚔";
		}
		if(m != null) {
			var ranged = m.ranged;
			str += (m.profs & (ranged ? cr : cm)) != 0 ? ranged ? "◎" : "⚔" : "";
		}
		if(amb && o != null) {
			var ranged1 = o.ranged;
			str += (o.profs & (ranged1 ? cr : cm)) != 0 ? "/" + (ranged1 ? "◎" : "⚔") : "/";
		}
		return str;
	}
	,get_ambidextrousId: function() {
		return new troshx_sos_bnb_Ambidextrous().name;
	}
	,get_ambidextrous: function() {
		return Object.prototype.hasOwnProperty.call(this["char"].boons.hash,this.ambidextrousId);
	}
	,get_SDB: function() {
		return this["char"].get_STR() / 2 | 0;
	}
	,get_labelRace: function() {
		var _this = this["char"];
		if(_this.race != null) {
			return _this.race.name;
		} else {
			return "Unspecified";
		}
	}
	,get_labelSchool: function() {
		var _this = this["char"];
		if(_this.school != null) {
			return _this.school.name;
		} else {
			return "";
		}
	}
	,get_baseCP: function() {
		var _this = this["char"];
		return (_this.schoolLevel >= 1 ? _this.schoolLevel + 4 : 0) + _this.clampIntZero(_this.getModifiedValue(8,(_this.agility + _this.wit) / 2 | 0));
	}
	,get_CP: function() {
		var _this = this["char"];
		var row = _this.get_encumbranceLvlRow();
		return row.cpMult * _this.clampIntZero(_this.getModifiedValue(13,(_this.schoolLevel >= 1 ? _this.schoolLevel + 4 : 0) + _this.clampIntZero(_this.getModifiedValue(8,(_this.agility + _this.wit) / 2 | 0))) * (_this.prone ? 0.5 : 1) + row.cp + troshx_sos_sheets_FatiqueTable.getTable()[_this.get_fatiqueLevel()].cp);
	}
	,get_meleeCP: function() {
		var _this = this["char"];
		var row = _this.get_encumbranceLvlRow();
		return row.cpMult * _this.clampIntZero(_this.getModifiedValue(13,(_this.schoolLevel >= 1 ? _this.schoolLevel + 4 : 0) + _this.clampIntZero(_this.getModifiedValue(8,(_this.agility + _this.wit) / 2 | 0))) * (_this.prone ? 0.5 : 1) + row.cp + troshx_sos_sheets_FatiqueTable.getTable()[_this.get_fatiqueLevel()].cp) - _this.get_totalPain();
	}
	,get_schoolCP: function() {
		var _this = this["char"];
		if(_this.schoolLevel >= 1) {
			return _this.schoolLevel + 4;
		} else {
			return 0;
		}
	}
	,get_arcPointsAvailable: function() {
		return this["char"].get_arcPointsAvailable();
	}
	,get_encumbranceLvlRow: function() {
		return this["char"].get_encumbranceLvlRow();
	}
	,get_encumberedBeyond: function() {
		var _this = this["char"];
		return Math.floor(_this.inventory.calculateTotalWeight() / _this.clampIntZero(_this.getModifiedValue(10,_this.clampIntZero(_this.getModifiedValue(16,_this.strength + _this.endurance))))) >= 5;
	}
	,get_skillPenalty: function() {
		return this["char"].get_skillPenalty();
	}
	,get_recoveryRate: function() {
		return this["char"].get_recoveryRate();
	}
	,get_recoveryRateAmountBase: function() {
		return this.recoveryRate * this.END;
	}
	,get_recoveryRateAmount: function() {
		return this["char"].clampIntZero(this.recoveryRate * this["char"].getModifiedValue(17,this.END));
	}
	,get_exhaustionRate: function() {
		return this["char"].get_exhaustionRate();
	}
	,get_fatiqueLevel: function() {
		return this["char"].get_fatiqueLevel();
	}
	,get_curFatiqueRow: function() {
		return troshx_sos_sheets_FatiqueTable.getTable()[this.fatiqueLevel];
	}
	,get_fatiqueSkillPenalty: function() {
		return this.curFatiqueRow.skill;
	}
	,get_fatiqueMobPenalty: function() {
		return this.curFatiqueRow.mob;
	}
	,get_fatiqueCPPenalty: function() {
		return this.curFatiqueRow.cp;
	}
	,get_addressedAs: function() {
		return this["char"].get_uid();
	}
	,get_profCoreMeleeListNames: function() {
		return troshx_sos_core_Profeciency.getLabelsOfArrayProfs(troshx_sos_core_Profeciency.getCoreMelee(),2147483647);
	}
	,get_profCoreRangedListNames: function() {
		return troshx_sos_core_Profeciency.getLabelsOfArrayProfs(troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged(),2147483647);
	}
	,get_hasSchool: function() {
		return this["char"].school != null;
	}
	,get_schoolProfLevel: function() {
		if(this.hasSchool) {
			return this["char"].schoolLevel;
		} else {
			return 0;
		}
	}
	,get_schoolTags: function() {
		if(this.hasSchool && this["char"].schoolBonuses != null) {
			return this["char"].schoolBonuses.getTags();
		} else {
			return [];
		}
	}
	,get_maxMasterySlots: function() {
		var r = this["char"].schoolLevel >= 20 ? 1 : 0;
		if(this.hasSchool) {
			return r;
		} else {
			return 0;
		}
	}
	,get_boonsArray: function() {
		return this["char"].boons.list;
	}
	,get_banesArray: function() {
		return this["char"].banes.list;
	}
	,get_maxBoonsSpendableLeft: function() {
		return 999;
	}
	,consoleLog: function(dyn) {
		console.log(dyn);
	}
	,getBracketLabelBnB: function(bba) {
		var bb = bba.getBoonOrBane();
		var qty = bba.getQty();
		var noCostLadder = bb.costs == troshx_sos_core_BoonBane.COSTLESS_ARRAY;
		var tmp = noCostLadder ? qty > 1 ? qty + "" : "" : bb.clampRank ? bba._costCached != null ? bba._costCached + "" : "" + bba.getCost(bba.rank) : this.getRomanDigit(bba.rank);
		return (noCostLadder ? "x" : "(") + tmp + (noCostLadder ? "" : ")");
	}
	,getRomanDigit: function(num) {
		switch(num) {
		case 0:
			return "0";
		case 1:
			return "i";
		case 2:
			return "ii";
		case 3:
			return "iii";
		case 4:
			return "iv";
		case 5:
			return "v";
		case 6:
			return "vi";
		case 7:
			return "vii";
		case 8:
			return "viii";
		case 9:
			return "ix";
		case 10:
			return "x";
		default:
			return ">x";
		}
	}
	,getBnBSlug: function(name) {
		return "bb-detail-" + name.split(" ").join("-").toLowerCase();
	}
	,getEmptyWealthAssign: function() {
		return this["char"].getEmptyWealthAssetAssign(1);
	}
	,get_isHuman: function() {
		var _this = this["char"];
		return (_this.race != null ? _this.race.name : "Unspecified") == "Human";
	}
	,restoreAnyBnBWithMask: function(msk,superMask) {
		var arr = this.baneAssignList;
		var arr2 = this.boonAssignList;
		var restored = false;
		var restoredBane = null;
		var restoredBoon = null;
		msk |= superMask;
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = arr[i];
			if(a._canceled && (a.bane.channels & msk) != 0) {
				a._canceled = false;
				if(a.rank > 0 && restoredBane == null) {
					restoredBane = a;
				}
			}
		}
		if(restoredBane != null) {
			msk &= ~(restoredBane.bane.channels | restoredBane.bane.superChannels);
		}
		var _g11 = 0;
		var _g2 = arr2.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var a1 = arr2[i1];
			if(a1._canceled && (a1.boon.channels & msk) != 0) {
				a1._canceled = false;
				if(a1.rank > 0 && restoredBoon == null) {
					restoredBoon = a1;
				}
			}
		}
		if(restoredBoon != null) {
			this.checkBoonAgainstOthers(restoredBoon);
		} else if(restoredBane != null) {
			this.checkBaneAgainstOthers(restoredBane);
		}
	}
	,resetBB: function(bba,isBane) {
		if(isBane) {
			var bane = bba.getBoonOrBane();
			var ba;
			var i = this.baneAssignList.indexOf(bba);
			ba = bane.getAssign(0,this["char"]);
			ba._costCached = bane.costs[0];
			ba._forcePermanent = bba._forcePermanent;
			ba.discount = bba.discount;
			ba._minRequired = bba._minRequired;
			ba._canceled = bba._canceled;
			Vue.set(this.baneAssignList,i,ba);
		} else {
			var boonAssign = bba;
			var boon = boonAssign.boon;
			var ba1;
			var i1 = this.boonAssignList.indexOf(bba);
			ba1 = boon.getAssign(0,this["char"]);
			ba1.discount = boonAssign.discount;
			ba1.rank = bba._minRequired;
			ba1._remainingCached = this.maxBoonsSpendableLeft;
			ba1._costCached = boon.costs[0];
			ba1._forcePermanent = bba._forcePermanent;
			ba1._minRequired = bba._minRequired;
			ba1._canceled = bba._canceled;
			Vue.set(this.boonAssignList,i1,ba1);
			if(ba1.rank > 0) {
				i1 = this["char"].boons.list.indexOf(boonAssign);
				var oldBA = this["char"].boons.list[i1];
				Vue.set(this["char"].boons.list,i1,ba1);
				this["char"].boonAssignReplaced(ba1,oldBA);
			}
		}
	}
	,findBaneAssignIndexById: function(id) {
		var i = this.baneAssignList.length;
		while(--i > -1) if(this.baneAssignList[i].get_uid() == id) {
			return i;
		}
		return -1;
	}
	,assignBrainDamage: function(bba) {
		var arr = bba.baneQueue;
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = arr[i];
			var ider = b.get_uid();
			var index = this.findBaneAssignIndexById(ider);
			if(index >= 0) {
				troshx_sos_chargen_CharGenData.dynSetArray(this.baneAssignList,index,b);
				var ci;
				var existingBane = Reflect.field(this["char"].banes.hash,ider);
				if(existingBane == null) {
					this["char"].banes.add(b);
				} else if(existingBane != b) {
					ci = this["char"].banes.list.indexOf(existingBane);
					troshx_sos_chargen_CharGenData.dynSetArray(this["char"].banes.list,ci,b);
				}
			} else {
				throw new js__$Boot_HaxeError("Something went wrong, couldn't find brain damage assign bane: " + b.get_uid());
			}
		}
	}
	,onBaneCallbackReceived: function(bba) {
		if(js_Boot.__instanceof(bba,troshx_sos_bnb_BrainDamageAssign)) {
			this.assignBrainDamage(bba);
		}
	}
	,checkBaneAgainstOthers: function(baneAssign) {
		var arr = this.baneAssignList;
		var arr2 = this.boonAssignList;
		baneAssign._canceled = false;
		var msk = baneAssign.bane.channels | baneAssign.bane.superChannels;
		if(msk == 0) {
			return;
		}
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = arr[i];
			if(a != baneAssign && (a.bane.channels & msk) != 0) {
				a._canceled = true;
			}
		}
		var _g11 = 0;
		var _g2 = arr2.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var a1 = arr2[i1];
			if((a1.boon.channels & msk) != 0) {
				a1._canceled = true;
			}
		}
	}
	,checkBoonAgainstOthers: function(boonAssign) {
		var arr = this.baneAssignList;
		var arr2 = this.boonAssignList;
		boonAssign._canceled = false;
		var msk = boonAssign.boon.channels | boonAssign.boon.superChannels;
		if(msk == 0) {
			return;
		}
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = arr[i];
			if((a.bane.channels & msk) != 0) {
				a._canceled = true;
			}
		}
		var _g11 = 0;
		var _g2 = arr2.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var a1 = arr2[i1];
			if(a1 != boonAssign && (a1.boon.channels & msk) != 0) {
				a1._canceled = true;
			}
		}
	}
	,uncancel: function(bba,isBane) {
		bba._canceled = false;
		if(isBane) {
			this.checkBaneAgainstOthers(bba);
		} else {
			this.checkBoonAgainstOthers(bba);
		}
	}
	,addBB: function(bba,isBane) {
		if(isBane) {
			this["char"].banes.add(bba);
			this.checkBaneAgainstOthers(bba);
		} else {
			this["char"].boons.add(bba);
			this.checkBoonAgainstOthers(bba);
		}
	}
	,removeBB: function(bba,isBane) {
		if(isBane) {
			var b = bba;
			this["char"].banes["delete"](b);
			if((b.bane.channels | b.bane.superChannels) != 0) {
				this.restoreAnyBnBWithMask(b.bane.channels,b.bane.superChannels);
			}
		} else {
			var b1 = bba;
			this["char"].boons["delete"](b1);
			if((b1.boon.channels | b1.boon.superChannels) != 0) {
				this.restoreAnyBnBWithMask(b1.boon.channels,b1.boon.superChannels);
			}
		}
	}
	,updateRankBB: function(bba,isBane,newValue,oldValue) {
		if(isBane) {
			this["char"].baneRankUpdated(bba,newValue,oldValue);
		} else {
			this["char"].boonRankUpdated(bba,newValue,oldValue);
		}
	}
	,updateCanceledBB: function(bba,isBane,newValue,oldValue) {
		if(isBane) {
			this["char"].baneRankCanceledChange(bba,newValue,oldValue);
		} else {
			this["char"].boonRankCanceledChange(bba,newValue,oldValue);
		}
	}
	,_Init: function() {
		var cls = troshx_sos_vue_CharVueMixin;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.computed = { recoveryRateAmountBase : clsP.get_recoveryRateAmountBase, recoveryRateAmount : clsP.get_recoveryRateAmount, profCoreMeleeListNames : clsP.get_profCoreMeleeListNames, profCoreRangedListNames : clsP.get_profCoreRangedListNames, hasSchool : clsP.get_hasSchool, schoolProfLevel : clsP.get_schoolProfLevel, schoolTags : clsP.get_schoolTags, maxMasterySlots : clsP.get_maxMasterySlots, boonsArray : clsP.get_boonsArray, banesArray : clsP.get_banesArray, isHuman : clsP.get_isHuman, encumbered : clsP.get_encumbered, totalWeight : clsP.get_totalWeight, encumbranceLvl : clsP.get_encumbranceLvl, offhandWeapon : clsP.get_offhandWeapon, masterWeapon : clsP.get_masterWeapon, reachBase : clsP.get_reachBase, reach : clsP.get_reach, adr : clsP.get_adr, mob : clsP.get_mob, car : clsP.get_car, cha : clsP.get_cha, tou : clsP.get_tou, totalPain : clsP.get_totalPain, totalBloodLost : clsP.get_totalBloodLost, ADR : clsP.get_ADR, MOB : clsP.get_MOB, CAR : clsP.get_CAR, CHA : clsP.get_CHA, startingGrit : clsP.get_startingGrit, TOU : clsP.get_TOU, GRIT : clsP.get_GRIT, baseGrit : clsP.get_baseGrit, STR : clsP.get_STR, AGI : clsP.get_AGI, END : clsP.get_END, HLT : clsP.get_HLT, WIP : clsP.get_WIP, WIT : clsP.get_WIT, INT : clsP.get_INT, PER : clsP.get_PER, negativeOrZeroStat : clsP.get_negativeOrZeroStat, strength : clsP.get_strength, agility : clsP.get_agility, endurance : clsP.get_endurance, health : clsP.get_health, willpower : clsP.get_willpower, wit : clsP.get_wit, intelligence : clsP.get_intelligence, perception : clsP.get_perception, raceName : clsP.get_raceName, schoolName : clsP.get_schoolName, socialClassName : clsP.get_socialClassName, perceptionPenalty : clsP.get_perceptionPenalty, carriedShield : clsP.get_carriedShield, masterHandItem : clsP.get_masterHandItem, offHandItem : clsP.get_offHandItem, inventoryWeight : clsP.get_inventoryWeight, inventoryWeightLbl : clsP.get_inventoryWeightLbl, defaultProfs : clsP.get_defaultProfs, heldProfeciencies : clsP.get_heldProfeciencies, heldProfeciencyIcons : clsP.get_heldProfeciencyIcons, ambidextrousId : clsP.get_ambidextrousId, ambidextrous : clsP.get_ambidextrous, SDB : clsP.get_SDB, labelRace : clsP.get_labelRace, labelSchool : clsP.get_labelSchool, baseCP : clsP.get_baseCP, CP : clsP.get_CP, meleeCP : clsP.get_meleeCP, schoolCP : clsP.get_schoolCP, arcPointsAvailable : clsP.get_arcPointsAvailable, encumbranceLvlRow : clsP.get_encumbranceLvlRow, encumberedBeyond : clsP.get_encumberedBeyond, skillPenalty : clsP.get_skillPenalty, recoveryRate : clsP.get_recoveryRate, exhaustionRate : clsP.get_exhaustionRate, fatiqueLevel : clsP.get_fatiqueLevel, curFatiqueRow : clsP.get_curFatiqueRow, fatiqueSkillPenalty : clsP.get_fatiqueSkillPenalty, fatiqueMobPenalty : clsP.get_fatiqueMobPenalty, fatiqueCPPenalty : clsP.get_fatiqueCPPenalty, addressedAs : clsP.get_addressedAs, maxBoonsSpendableLeft : clsP.get_maxBoonsSpendableLeft};
		this.methods = { get_encumbered : clsP.get_encumbered, get_totalWeight : clsP.get_totalWeight, get_encumbranceLvl : clsP.get_encumbranceLvl, get_offhandWeapon : clsP.get_offhandWeapon, get_masterWeapon : clsP.get_masterWeapon, get_reachBase : clsP.get_reachBase, get_reach : clsP.get_reach, get_adr : clsP.get_adr, get_mob : clsP.get_mob, get_car : clsP.get_car, get_cha : clsP.get_cha, get_tou : clsP.get_tou, get_totalPain : clsP.get_totalPain, get_totalBloodLost : clsP.get_totalBloodLost, get_ADR : clsP.get_ADR, get_MOB : clsP.get_MOB, get_CAR : clsP.get_CAR, get_CHA : clsP.get_CHA, get_startingGrit : clsP.get_startingGrit, get_TOU : clsP.get_TOU, get_GRIT : clsP.get_GRIT, get_baseGrit : clsP.get_baseGrit, get_STR : clsP.get_STR, get_AGI : clsP.get_AGI, get_END : clsP.get_END, get_HLT : clsP.get_HLT, get_WIP : clsP.get_WIP, get_WIT : clsP.get_WIT, get_INT : clsP.get_INT, get_PER : clsP.get_PER, get_negativeOrZeroStat : clsP.get_negativeOrZeroStat, get_strength : clsP.get_strength, get_agility : clsP.get_agility, get_endurance : clsP.get_endurance, get_health : clsP.get_health, get_willpower : clsP.get_willpower, get_wit : clsP.get_wit, get_intelligence : clsP.get_intelligence, get_perception : clsP.get_perception, get_raceName : clsP.get_raceName, get_schoolName : clsP.get_schoolName, get_socialClassName : clsP.get_socialClassName, get_perceptionPenalty : clsP.get_perceptionPenalty, get_carriedShield : clsP.get_carriedShield, get_masterHandItem : clsP.get_masterHandItem, get_offHandItem : clsP.get_offHandItem, get_inventoryWeight : clsP.get_inventoryWeight, get_inventoryWeightLbl : clsP.get_inventoryWeightLbl, get_defaultProfs : clsP.get_defaultProfs, get_heldProfeciencies : clsP.get_heldProfeciencies, get_heldProfeciencyIcons : clsP.get_heldProfeciencyIcons, get_ambidextrousId : clsP.get_ambidextrousId, get_ambidextrous : clsP.get_ambidextrous, get_SDB : clsP.get_SDB, get_labelRace : clsP.get_labelRace, get_labelSchool : clsP.get_labelSchool, get_baseCP : clsP.get_baseCP, get_CP : clsP.get_CP, get_meleeCP : clsP.get_meleeCP, get_schoolCP : clsP.get_schoolCP, get_arcPointsAvailable : clsP.get_arcPointsAvailable, get_encumbranceLvlRow : clsP.get_encumbranceLvlRow, get_encumberedBeyond : clsP.get_encumberedBeyond, get_skillPenalty : clsP.get_skillPenalty, get_recoveryRate : clsP.get_recoveryRate, get_recoveryRateAmountBase : clsP.get_recoveryRateAmountBase, get_recoveryRateAmount : clsP.get_recoveryRateAmount, get_exhaustionRate : clsP.get_exhaustionRate, get_fatiqueLevel : clsP.get_fatiqueLevel, get_curFatiqueRow : clsP.get_curFatiqueRow, get_fatiqueSkillPenalty : clsP.get_fatiqueSkillPenalty, get_fatiqueMobPenalty : clsP.get_fatiqueMobPenalty, get_fatiqueCPPenalty : clsP.get_fatiqueCPPenalty, get_addressedAs : clsP.get_addressedAs, get_profCoreMeleeListNames : clsP.get_profCoreMeleeListNames, get_profCoreRangedListNames : clsP.get_profCoreRangedListNames, get_hasSchool : clsP.get_hasSchool, get_schoolProfLevel : clsP.get_schoolProfLevel, get_schoolTags : clsP.get_schoolTags, get_maxMasterySlots : clsP.get_maxMasterySlots, get_boonsArray : clsP.get_boonsArray, get_banesArray : clsP.get_banesArray, get_maxBoonsSpendableLeft : clsP.get_maxBoonsSpendableLeft, consoleLog : clsP.consoleLog, getBracketLabelBnB : clsP.getBracketLabelBnB, getRomanDigit : clsP.getRomanDigit, getBnBSlug : clsP.getBnBSlug, getEmptyWealthAssign : clsP.getEmptyWealthAssign, get_isHuman : clsP.get_isHuman, restoreAnyBnBWithMask : clsP.restoreAnyBnBWithMask, resetBB : clsP.resetBB, findBaneAssignIndexById : clsP.findBaneAssignIndexById, assignBrainDamage : clsP.assignBrainDamage, onBaneCallbackReceived : clsP.onBaneCallbackReceived, checkBaneAgainstOthers : clsP.checkBaneAgainstOthers, checkBoonAgainstOthers : clsP.checkBoonAgainstOthers, uncancel : clsP.uncancel, addBB : clsP.addBB, removeBB : clsP.removeBB, updateRankBB : clsP.updateRankBB, updateCanceledBB : clsP.updateCanceledBB};
	}
	,__class__: troshx_sos_vue_CharVueMixin
});
var troshx_sos_vue_Globals = function() { };
$hxClasses["troshx.sos.vue.Globals"] = troshx_sos_vue_Globals;
troshx_sos_vue_Globals.__name__ = ["troshx","sos","vue","Globals"];
var troshx_sos_vue_InventoryManager = function() {
	haxevx_vuex_core_VComponent.call(this);
	this["inheritAttrs"] = false;
};
$hxClasses["troshx.sos.vue.InventoryManager"] = troshx_sos_vue_InventoryManager;
troshx_sos_vue_InventoryManager.__name__ = ["troshx","sos","vue","InventoryManager"];
troshx_sos_vue_InventoryManager.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_InventoryManager.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { extraInventories : [], clipboardContents : "", curInventoryIndex : 0, newTabCounter : 0, showBrowser : this.autoLoad != null};
	}
	,Components: function() {
		var _m_ = { };
		_m_["comp"] = new troshx_sos_vue_InventoryVue();
		_m_["tree-browser"] = new troshx_sos_vue_widgets_GingkoTreeBrowser();
		return _m_;
	}
	,loadSheet: function(contents) {
		this.$emit("loadSheet",contents);
	}
	,closeBtnClick: function() {
		if(this.curInventoryIndex > 0) {
			var spliceIndex = this.curInventoryIndex - 1;
			this.extraInventories.splice(spliceIndex,1);
			if(this.curInventoryIndex > this.extraInventories.length) {
				this.curInventoryIndex--;
			}
		}
	}
	,openFromTreeBrowser: function(contents,filename,disableCallback) {
		this.loadNewTab(contents,filename);
	}
	,watch_inventory: function(newValue) {
		var _g1 = 0;
		var _g = this.extraInventories.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.extraInventories[i].inventory.setNewDroppedList(newValue.dropped);
		}
	}
	,get_tabs: function() {
		return [{ inventory : this.inventory, tabName : this.firstTabName}].concat(this.extraInventories);
	}
	,get_availableTypes: function() {
		return { "troshx.sos.core.Inventory" : true};
	}
	,getNewInventory: function(contents) {
		var newInventory;
		try {
			newInventory = new haxe_Unserializer(contents).unserialize();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			console.log(e);
			js_Browser.alert("Sorry, failed to unserialize save-content string!");
			return null;
		}
		if(!js_Boot.__instanceof(newInventory,troshx_sos_core_Inventory)) {
			console.log(newInventory);
			js_Browser.alert("Sorry, unserialized type isn't Inventory!");
			return null;
		}
		return js_Boot.__instanceof(newInventory,troshx_sos_core_Inventory) ? newInventory : null;
	}
	,loadNewTabClick: function() {
		this.loadNewTab();
	}
	,loadNewTab: function(contents,tabName) {
		if(contents == null) {
			contents = this.clipboardContents;
		}
		var inventory = this.getNewInventory(contents);
		if(inventory == null) {
			return;
		}
		inventory.setNewDroppedList(this.inventory.dropped);
		this.extraInventories.push({ inventory : inventory, tabName : tabName != null ? this.validateTabName(tabName) : "New Tab (" + ++this.newTabCounter + ")"});
		this.curInventoryIndex = this.extraInventories.length;
	}
	,validateTabName: function(tabName) {
		var curTabs = this.tabs;
		var _g1 = 0;
		var _g = curTabs.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(curTabs[i].tabName == tabName) {
				return tabName + " (" + ++this.newTabCounter + ")";
			}
		}
		return tabName;
	}
	,Template: function() {
		return "<div>\r\n\t<br/>\r\n\t<br/>\r\n\t<tree-browser :availableTypes=\"availableTypes\" v-on:open=\"openFromTreeBrowser\" v-if=\"showBrowser\" :autoLoad=\"autoLoad\" />\r\n\t<hr/>\r\n\t\r\n\t<comp :inventory=\"tabs[curInventoryIndex].inventory\" :inventoryLabel=\"tabs[curInventoryIndex].tabName\" v-on:loadSheet=\"loadSheet\" :loadAvailable=\"curInventoryIndex==0 && loadAvailable\" v-bind=\"$attrs\" :maxCostCopper=\"curInventoryIndex == 0 ? maxCostCopper : null\" :maxWeight=\"curInventoryIndex == 0 ? maxWeight : null\">\r\n\t\t<span slot=\"weightAfter\"><slot name=\"weightAfter\"></slot></span>\r\n\t\t\r\n\t\t<button class=\"exit-btn\" slot=\"exitBtn\" v-if=\"backBtnCallback!=null\" v-on:click=\"backBtnCallback()\">&lt;&lt; Back</button>\r\n\t\t\r\n\t\t<div class=\"open-new-tab-zone\" slot=\"loadNewTabZone\">\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"show-browser-cta\"><label><input type=\"checkbox\" v-model=\"showBrowser\"></input>View a Catalog? ^</label></div>\r\n\t\t\t\t<textarea class=\"openbox\" character-set=\"UTF-8\" v-model=\"clipboardContents\"></textarea>\r\n\t\t\t\t<div><button v-on:click=\"loadNewTabClick\">Load Inventory in New Tab</button><i><br/>(excludes drop zone)</i></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div v-for=\"\" class=\"tab-list\" slot=\"tabList\">\r\n\t\t\t<label :class=\"{selected:curInventoryIndex==i}\" v-for=\"(li, i) in tabs\"><input type=\"radio\" v-on:click=\"curInventoryIndex=i\" name=\"tabname\" :checked=\"curInventoryIndex==i\"></input>{{li.tabName}}</label>\r\n\t\t\t<button class=\"close-btn\" v-show=\"curInventoryIndex!=0\" v-on:click=\"closeBtnClick\">[X] Close</button>\r\n\t\t</div>\r\n\r\n\t</comp>\r\n</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_InventoryManager;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.components = this.Components();
		this.template = this.Template();
		this.computed = { tabs : clsP.get_tabs, availableTypes : clsP.get_availableTypes};
		this.methods = { loadSheet : clsP.loadSheet, closeBtnClick : clsP.closeBtnClick, openFromTreeBrowser : clsP.openFromTreeBrowser, watch_inventory : clsP.watch_inventory, get_tabs : clsP.get_tabs, get_availableTypes : clsP.get_availableTypes, getNewInventory : clsP.getNewInventory, loadNewTabClick : clsP.loadNewTabClick, loadNewTab : clsP.loadNewTab, validateTabName : clsP.validateTabName};
		this.props = { inventory : { required : true, type : Object}, maxWeight : { required : false, type : Number}, maxCostCopper : { required : false, type : Number}, autoLoad : { required : false, type : String}, firstTabName : { required : false, "default" : "Current", type : String}, loadAvailable : { required : false, "default" : true, type : Boolean}, backBtnCallback : { required : false, type : Function}};
		this.watch = { inventory : clsP.watch_inventory};
	}
	,__class__: troshx_sos_vue_InventoryManager
});
var troshx_sos_vue_InventoryStandalone = function(theComp) {
	haxevx_vuex_core_VComponent.call(this);
	if(theComp != null) {
		this.components = { "comp" : theComp};
	} else {
		Reflect.deleteField(this,"data");
	}
};
$hxClasses["troshx.sos.vue.InventoryStandalone"] = troshx_sos_vue_InventoryStandalone;
troshx_sos_vue_InventoryStandalone.__name__ = ["troshx","sos","vue","InventoryStandalone"];
troshx_sos_vue_InventoryStandalone.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_InventoryStandalone.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	getNewInventory: function(contents) {
		var newInventory;
		try {
			newInventory = new haxe_Unserializer(contents).unserialize();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			console.log(e);
			js_Browser.alert("Sorry, failed to unserialize save-content string!");
			return null;
		}
		if(!js_Boot.__instanceof(newInventory,troshx_sos_core_Inventory)) {
			console.log(newInventory);
			js_Browser.alert("Sorry, unserialized type isn't Inventory!");
			return null;
		}
		return js_Boot.__instanceof(newInventory,troshx_sos_core_Inventory) ? newInventory : null;
	}
	,setInventory: function(chk) {
		this.inventory = chk;
	}
	,loadSheet: function(contents) {
		var chk = this.getNewInventory(contents);
		if(chk == null) {
			return;
		}
		this.setInventory(chk);
	}
	,Data: function() {
		return { inventory : new troshx_sos_core_Inventory(), autoLoad : troshx_sos_vue_Globals.AUTO_LOAD};
	}
	,Template: function() {
		return "<comp :inventory=\"inventory\" v-on:loadSheet=\"loadSheet\" :autoLoad=\"autoLoad\"></comp>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_InventoryStandalone;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.template = this.Template();
		this.methods = { getNewInventory : clsP.getNewInventory, setInventory : clsP.setInventory, loadSheet : clsP.loadSheet};
	}
	,__class__: troshx_sos_vue_InventoryStandalone
});
var troshx_sos_vue_InventoryVue = $hx_exports["troshx"]["sos"]["vue"]["InventoryVue"] = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_input_MixinInput.getInstance()];
};
$hxClasses["troshx.sos.vue.InventoryVue"] = troshx_sos_vue_InventoryVue;
troshx_sos_vue_InventoryVue.__name__ = ["troshx","sos","vue","InventoryVue"];
troshx_sos_vue_InventoryVue.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_InventoryVue.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return new troshx_sos_vue_InventoryVueData();
	}
	,Components: function() {
		var _m_ = { };
		_m_["td-prof"] = new troshx_sos_vue_TDWeapProfSelect();
		_m_["td-hands"] = new troshx_sos_vue_TDHands();
		_m_["td-widget"] = new troshx_sos_vue_TDWidgetHolder();
		_m_["td-unheld"] = new troshx_sos_vue_TDUnheld();
		_m_["input-name"] = new troshx_sos_vue_widgets_InputName();
		_m_["input-name-qty"] = new troshx_sos_vue_widgets_InputNameQty();
		_m_["select-held"] = new troshx_sos_vue_widgets_SelectHeld();
		_m_["w-ammunition"] = new troshx_sos_vue_widgets_WAmmunition();
		_m_["w-coverage"] = new troshx_sos_vue_widgets_WCoverage();
		_m_["w-melee-atk"] = new troshx_sos_vue_widgets_WMeleeAtk();
		_m_["w-melee-def"] = new troshx_sos_vue_widgets_WMeleeDef();
		_m_["w-missile-atk"] = new troshx_sos_vue_widgets_WMissileAtk();
		_m_["w-prof"] = new troshx_sos_vue_widgets_WProf();
		_m_["w-span-tools"] = new troshx_sos_vue_widgets_WSpanTools();
		_m_["w-tags"] = new troshx_sos_vue_widgets_WTags();
		_m_["w-ammo-spawner"] = new troshx_sos_vue_widgets_WAmmoSpawner();
		return _m_;
	}
	,Created: function() {
		var _this = this.inventory;
		(_this.signaler != null ? _this.signaler : _this.signaler = _this.createSignaler()).add($bind(this,this.onInventorySignalReceived));
	}
	,get_copperMaxToPieces: function() {
		if(this.privateData.money == null) {
			this.privateData.money = new troshx_sos_core_Money();
		}
		return this.privateData.money.matchWithValues(0,0,this.maxCostCopper).changeToHighest();
	}
	,get_moneyLeft: function() {
		if(this.privateData.moneyLeft == null) {
			this.privateData.moneyLeft = new troshx_sos_core_Money();
		}
		return this.privateData.moneyLeft.matchWith(this.copperMaxToPieces).subtractAgainst(this.totalCostMoney);
	}
	,get_moneyLeftStr: function() {
		return this.moneyLeft.getLabel();
	}
	,get_exceededCost: function() {
		return this.moneyLeft.cp < 0;
	}
	,get_weightRemaining: function() {
		return this.maxWeight - this.totalWeight;
	}
	,get_weightRemainingLbl: function() {
		return parseFloat(this.weightRemaining.toFixed(2));
	}
	,get_exceededWeight: function() {
		return this.weightRemaining <= 0;
	}
	,get_maxCostGP: function() {
		return this.copperMaxToPieces.gp;
	}
	,get_maxCostSP: function() {
		return this.copperMaxToPieces.sp;
	}
	,get_maxCostCP: function() {
		return this.copperMaxToPieces.cp;
	}
	,onInventorySignalReceived: function(e) {
		if(e[1] == 0) {
			this.itemTransitionName = "";
			Vue.nextTick($bind(this,this.resetItemTransitionName));
		} else {
			this.itemTransitionName = "fade";
		}
	}
	,loadSheet: function() {
		this.$emit("loadSheet",this.copyToClipboard);
	}
	,watch_inventory: function(newValue,oldValue) {
		(oldValue.signaler != null ? oldValue.signaler : oldValue.signaler = oldValue.createSignaler()).removeAll();
		(newValue.signaler != null ? newValue.signaler : newValue.signaler = newValue.createSignaler()).add($bind(this,this.onInventorySignalReceived));
		this.itemTransitionName = "";
		Vue.nextTick($bind(this,this.resetItemTransitionName));
	}
	,saveSheet: function() {
		this.inventory.normalizeAllItems();
		var serializer = new haxe_Serializer();
		serializer.useCache = true;
		var _this = this.inventory;
		var oldSignaler = _this.signaler != null ? _this.signaler : _this.signaler = _this.createSignaler();
		this.inventory.setSignaler(null);
		serializer.serialize(this.inventory);
		var output = serializer.toString();
		this.copyToClipboard = output;
		this.inventory.setSignaler(oldSignaler);
		return output;
	}
	,loadDropList: function(contents) {
		this.inventory.normalizeDroppedItems();
		if(contents == null) {
			contents = this.copyToClipboardDropList;
		}
		var _this = this.inventory;
		(_this.signaler != null ? _this.signaler : _this.signaler = _this.createSignaler()).removeAll();
		var unserializer = new haxe_Unserializer(contents);
		var dyn = null;
		var okay = true;
		try {
			dyn = unserializer.unserialize();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			console.log(e);
			js_Browser.alert("Sorry, failed to unserialize string to dropped zone!");
			okay = false;
		}
		if(okay) {
			if(!js_Boot.__instanceof(dyn,troshx_ds_IDMatchArray)) {
				console.log(dyn);
				js_Browser.alert("Sorry, unserialized object isn't of dropped zone IDMatchArray type!");
				okay = false;
			}
		}
		if(okay) {
			this.inventory.setNewDroppedList(dyn);
		}
		var _this1 = this.inventory;
		(_this1.signaler != null ? _this1.signaler : _this1.signaler = _this1.createSignaler()).add($bind(this,this.onInventorySignalReceived));
	}
	,saveDropList: function() {
		var serializer = new haxe_Serializer();
		serializer.useCache = true;
		serializer.serialize(this.inventory.dropped);
		var output = serializer.toString();
		this.copyToClipboardDropList = output;
		return output;
	}
	,resetItemTransitionName: function() {
		this.itemTransitionName = "fade";
	}
	,onBaseInventoryClick: function(e) {
		this.curWidgetRequest.type = "";
		this.curWidgetRequest.index = 0;
		this.focusValueText = "";
	}
	,confirmOverwriteItem: function() {
		var tarArray = this.itemToOverwriteToPacked ? this.inventory.packed : this.inventory.dropped;
		tarArray.add(this.itemToOverwriteWith);
		var itemQty = tarArray.getMatchingItem(this.itemToOverwriteWith);
		itemQty.item = this.itemToOverwriteWith.item;
		itemQty.attachments = this.itemToOverwriteWith.attachments;
		if(this.privateData.dynArray != null) {
			this.privateData.dynArray.splice(this.privateData.dynArray.indexOf(this.privateData.dynAssign),1);
		} else {
			var srcArray = this.itemToOverwriteToPacked ? this.inventory.dropped : this.inventory.packed;
			srcArray.splicedAgainst(this.privateData.origQtyItem);
		}
		this.itemToOverwriteWith = null;
		this.privateData.dynArray = null;
		this.privateData.origQtyItem = null;
		this.$refs.overwriteItemWarning.close();
	}
	,confirmQtyMultipleSend: function() {
		if(this.itemToOverwriteToPacked) {
			this.packItemEntryFromGround(this.itemQtyMultiple,this.itemQtyMultiple.qty);
		} else {
			this.dropItemEntryFromPack(this.itemQtyMultiple,this.itemQtyMultiple.qty);
		}
		this.itemQtyMultiple = null;
		this.$refs.itemQtyMultipleModal.close();
	}
	,closeMultipleQtyItem: function(canceling) {
		if(canceling == null) {
			canceling = false;
		}
		this.itemQtyMultiple = null;
	}
	,closeOverwriteModal: function(canceling) {
		if(canceling == null) {
			canceling = false;
		}
		this.itemToOverwriteWith = null;
		if(!canceling) {
			this.privateData.dynArray = null;
			this.privateData.origQtyItem = null;
		}
	}
	,watch_itemToOverwriteWith: function(newValue) {
		if(newValue != null) {
			this.itemToOverwriteWithChecked = false;
			this.$refs.overwriteItemWarning.open();
		} else {
			this.$refs.overwriteItemWarning.close();
		}
	}
	,watch_itemQtyMultiple: function(newValue) {
		if(newValue != null) {
			this.$refs.itemQtyMultipleModal.open();
		} else {
			this.$refs.itemQtyMultipleModal.close();
		}
	}
	,packItemEntryFromGround: function(itemQ,qty) {
		if(qty == null) {
			qty = 0;
		}
		this.itemToOverwriteToPacked = true;
		if(qty == 0 && itemQ.qty > 1) {
			this.itemQtyMultipleMax = itemQ.qty;
			this.itemQtyMultiple = itemQ.getQtyCopy(itemQ.qty);
			return;
		}
		this.itemToOverwriteWith = this.inventory.packItemEntryFromGround(itemQ,qty);
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = itemQ;
			this.privateData.dynArray = null;
		}
	}
	,dropItemEntryFromPack: function(itemQ,qty) {
		if(qty == null) {
			qty = 0;
		}
		this.itemToOverwriteToPacked = false;
		if(qty == 0 && itemQ.qty > 1) {
			this.itemQtyMultipleMax = itemQ.qty;
			this.itemQtyMultiple = itemQ.getQtyCopy(itemQ.qty);
			return;
		}
		this.itemToOverwriteWith = this.inventory.dropItemEntryFromPack(itemQ,qty);
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = itemQ;
			this.privateData.dynArray = null;
		}
	}
	,dropEquipedShield: function(alreadyEquiped,doDestroy) {
		if(doDestroy == null) {
			doDestroy = false;
		}
		this.itemToOverwriteWith = this.inventory.dropEquipedShield(alreadyEquiped,doDestroy);
		this.itemToOverwriteToPacked = false;
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = null;
			this.privateData.dynArray = this.inventory.shields;
			this.privateData.dynAssign = alreadyEquiped;
		}
	}
	,dropMiscItem: function(alreadyEquiped,doDestroy) {
		if(doDestroy == null) {
			doDestroy = false;
		}
		this.itemToOverwriteWith = this.inventory.dropMiscItem(alreadyEquiped,doDestroy);
		this.itemToOverwriteToPacked = false;
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = null;
			this.privateData.dynArray = this.inventory.equipedNonMeleeItems;
			this.privateData.dynAssign = alreadyEquiped;
		}
	}
	,dropEquipedWeapon: function(alreadyEquiped,doDestroy) {
		if(doDestroy == null) {
			doDestroy = false;
		}
		this.itemToOverwriteWith = this.inventory.dropEquipedWeapon(alreadyEquiped,doDestroy);
		this.itemToOverwriteToPacked = false;
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = null;
			this.privateData.dynArray = this.inventory.weapons;
			this.privateData.dynAssign = alreadyEquiped;
		}
	}
	,dropWornArmor: function(alreadyEquiped,doDestroy) {
		if(doDestroy == null) {
			doDestroy = false;
		}
		this.itemToOverwriteWith = this.inventory.dropWornArmor(alreadyEquiped,doDestroy);
		this.itemToOverwriteToPacked = false;
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = null;
			this.privateData.dynArray = this.inventory.wornArmor;
			this.privateData.dynAssign = alreadyEquiped;
		}
	}
	,packEquipedShield: function(alreadyEquiped) {
		this.itemToOverwriteWith = this.inventory.packEquipedShield(alreadyEquiped);
		this.itemToOverwriteToPacked = true;
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = null;
			this.privateData.dynArray = this.inventory.shields;
			this.privateData.dynAssign = alreadyEquiped;
		}
	}
	,packMiscItem: function(alreadyEquiped) {
		this.itemToOverwriteWith = this.inventory.packMiscItem(alreadyEquiped);
		this.itemToOverwriteToPacked = true;
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = null;
			this.privateData.dynArray = this.inventory.equipedNonMeleeItems;
			this.privateData.dynAssign = alreadyEquiped;
		}
	}
	,packEquipedWeapon: function(alreadyEquiped) {
		this.itemToOverwriteWith = this.inventory.packEquipedWeapon(alreadyEquiped);
		this.itemToOverwriteToPacked = true;
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = null;
			this.privateData.dynArray = this.inventory.weapons;
		}
	}
	,packWornArmor: function(alreadyEquiped) {
		this.itemToOverwriteWith = this.inventory.packWornArmor(alreadyEquiped);
		this.itemToOverwriteToPacked = true;
		if(this.itemToOverwriteWith != null) {
			this.privateData.origQtyItem = null;
			this.privateData.dynArray = this.inventory.wornArmor;
			this.privateData.dynAssign = alreadyEquiped;
		}
	}
	,getSuperscriptNum: function(ref,value) {
		var str = value == null ? "null" : "" + value;
		var result = value >= 0 ? "⁺" : "⁻";
		var _g1 = value < 0 ? 1 : 0;
		var _g = str.length;
		while(_g1 < _g) {
			var i = _g1++;
			result += ref.charAt(Std.parseInt(str.charAt(i)));
		}
		return result;
	}
	,getCoverage: function(armor,body) {
		var coverage = armor.coverage;
		var superscriptDigits = "⁰¹²³⁴⁵⁶⁷⁸⁹";
		var gotSuperScript = armor.customise != null && armor.customise.hitLocationAllAVModifiers != null;
		var avModifiers = gotSuperScript ? armor.customise.hitLocationAllAVModifiers : null;
		if(body == null) {
			body = troshx_sos_core_BodyChar.getInstance();
		}
		var arr = [];
		var hitLocations = body.hitLocations;
		var fields = Reflect.fields(coverage);
		var _g1 = 0;
		var _g = hitLocations.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ider = hitLocations[i].id;
			var specs = coverage[ider];
			if(specs != null) {
				var tmp = gotSuperScript && avModifiers[ider] != null ? this.getSuperscriptNum(superscriptDigits,avModifiers[ider]) : "";
				arr.push(i + 1 + ((specs & 1) != 0 ? "ϕ" : "") + ((specs & 4) != 0 ? "t" : "") + ((specs & 2) != 0 ? "*" : "") + tmp);
			}
		}
		return arr.join("-");
	}
	,getTags: function(item) {
		var arr = [];
		item.addTagsToStrArr(arr);
		return arr.join(", ");
	}
	,getDefGuard: function(wpn) {
		return wpn.dtn + "(" + wpn.guard + ")";
	}
	,getSwingAtkStr: function(wpn) {
		return wpn.atnS + "(" + wpn.damageS + this.damageTypeSuffixes[wpn.damageTypeS] + ")";
	}
	,getThrustAtkStr: function(wpn) {
		return wpn.atnT + "(" + wpn.damageT + this.damageTypeSuffixes[wpn.damageTypeT] + ")";
	}
	,getMissileAtkStr: function(wpn) {
		return wpn.atnM + "(" + wpn.damageM + this.damageTypeSuffixes[wpn.damageTypeM] + ")";
	}
	,getAmmunitions: function(firearm) {
		return firearm.getAmmunitionsStrArr().join(", ");
	}
	,getSpanTools: function(crossbow) {
		return crossbow.getSpanningToolsStrArr().join(", ");
	}
	,clearWidgets: function() {
		this.curWidgetRequest.type = "";
		this.curWidgetRequest.index = 0;
		this.focusValueText = "";
	}
	,stopPropagation: function(e) {
		e.stopPropagation();
	}
	,setCurWidgetSection: function(sectName,e) {
		e.stopPropagation();
		this.curWidgetRequest.section = sectName;
	}
	,requestCurWidget: function(type,index) {
		this.curWidgetRequest.type = type;
		this.curWidgetRequest.index = index;
	}
	,isVisibleWidget: function(section,type,index) {
		if(this.curWidgetRequest.section == section && this.curWidgetRequest.type == type) {
			return this.curWidgetRequest.index == index;
		} else {
			return false;
		}
	}
	,openPopup: function(index) {
		this.popupIndex = index;
	}
	,closePopup: function() {
		this.popupIndex = -1;
	}
	,getValidName: function(testName,backupName) {
		if(testName != "" && testName != null) {
			return testName;
		} else {
			return backupName;
		}
	}
	,onInputNameUpdated: function() {
		this.itemTransitionName = "";
		Vue.nextTick($bind(this,this.resetItemTransitionName));
	}
	,get_coverageHitLocations: function() {
		return this.body.hitLocations;
	}
	,get_hitLocationZeroAVValues: function() {
		var ch = this.coverageHitLocations;
		var dyn = { };
		var _g1 = 0;
		var _g = ch.length;
		while(_g1 < _g) {
			var i = _g1++;
			var h = ch[i];
			dyn[h.id] = { avp : 0, avc : 0, avb : 0};
		}
		return dyn;
	}
	,get_shouldCalcMeleeAiming: function() {
		if(!this.calcArmorNonFirearmMissile) {
			return this.calcArmorMeleeTargeting;
		} else {
			return false;
		}
	}
	,get_targetingZoneMask: function() {
		var i = this.calcMeleeTargetingZoneIndex;
		if(this.shouldCalcMeleeAiming) {
			return 1 << i;
		} else {
			return 0;
		}
	}
	,get_hasArmorResultProtecting: function() {
		return this.calcArmorResults.armorsProtectable.length != 0;
	}
	,get_hasArmorResultLayers: function() {
		if(this.hasArmorResultProtecting) {
			return this.calcArmorResults.armorsLayer.length != 0;
		} else {
			return false;
		}
	}
	,get_hasArmorCrushables: function() {
		return this.calcArmorResults.armorsCrushable.length != 0;
	}
	,isDisabledHitLocation: function(i) {
		if(this.shouldCalcMeleeAiming) {
			return (1 << i & this.targetZoneHitAreaMasks[this.calcMeleeTargetingZoneIndex]) == 0;
		} else {
			return false;
		}
	}
	,get_targetZoneHitAreaMasks: function() {
		return this.body.getTargetZoneHitAreaMasks();
	}
	,get_isYourInventory: function() {
		return this.inventoryLabel == "Your";
	}
	,get_whoseInventoryPrefix: function() {
		if(this.inventoryLabel != null) {
			if(this.inventoryLabel != "Your") {
				return this.inventoryLabel + (this.includeOwnerSlash ? "'s " : " ");
			} else {
				return "Your" + " ";
			}
		} else {
			return "";
		}
	}
	,get_hitLocationArmorValues: function() {
		var armors = this.inventory.wornArmor;
		var values = this.hitLocationZeroAVValues;
		var ch = this.coverageHitLocations;
		var body = this.body;
		var targMask = this.targetingZoneMask;
		var _g1 = 0;
		var _g = ch.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ider = ch[i].id;
			var cur = values[ider];
			cur.avc = 0;
			cur.avp = 0;
			cur.avb = 0;
		}
		var _g11 = 0;
		var _g2 = armors.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var a = armors[i1].armor;
			var layerMask = 0;
			if(a.special != null && a.special.wornWith != null && a.special.wornWith.name != "") {
				layerMask = this.inventory.layeredWearingMaskWith(a,a.special.wornWith.name,body);
			}
			a.writeAVVAluesTo(values,body,layerMask,this.calcArmorNonFirearmMissile,targMask);
		}
		return values;
	}
	,sortArmorLayers: function(a,b) {
		if(a.layer < b.layer) {
			return -1;
		} else if(a.layer > b.layer) {
			return 1;
		}
		return 0;
	}
	,calcAVColumnRowIndex: function(columnNum,rowIndex) {
		this.calcAVColumn = columnNum;
		this.calcAVRowIndex = rowIndex;
		var hitLocArmorValues = this.hitLocationArmorValues;
		var coverageLocs = this.coverageHitLocations;
		var hitLocationId = coverageLocs[rowIndex].id;
		var hitLocationMask = 1 << rowIndex;
		var curRow = hitLocArmorValues[hitLocationId];
		var results = this.calcArmorResults;
		results.damageType = columnNum - 1;
		results.hitLocationIndex = rowIndex;
		results.layer = 0;
		results.av = columnNum == 1 ? curRow.avc : columnNum == 2 ? curRow.avp : curRow.avb;
		results.armorsLayer = [];
		results.armorsProtectable = [];
		results.armorsCrushable = [];
		var sampleAV = troshx_sos_vue_InventoryVue.SAMPLE_AV;
		var armorList = this.inventory.wornArmor;
		var body = this.body;
		var targetingZoneMask = this.targetingZoneMask;
		if(results.av != 0) {
			var comparisonLayerMasks = [];
			var _g1 = 0;
			var _g = armorList.length;
			while(_g1 < _g) {
				var i = _g1++;
				var a = armorList[i].armor;
				if(a.coverage[hitLocationId] == null) {
					comparisonLayerMasks.push(0);
					continue;
				}
				var layerMask = 0;
				if(a.special != null && a.special.wornWith != null && a.special.wornWith.name != "") {
					layerMask = this.inventory.layeredWearingMaskWith(a,a.special.wornWith.name,body);
				}
				comparisonLayerMasks.push(layerMask);
				if(a.writeAVsAtLocation(body,hitLocationId,hitLocationMask,sampleAV,layerMask,this.calcArmorNonFirearmMissile,targetingZoneMask,true)) {
					var compareAV = columnNum == 1 ? sampleAV.avc : columnNum == 2 ? sampleAV.avp : sampleAV.avb;
					if(compareAV == results.av) {
						results.armorsProtectable.push(a);
					}
				}
			}
			if(results.armorsProtectable.length != 0) {
				var highest = 0;
				var comparisonLayeredArmor = [];
				var _g11 = 0;
				var _g2 = armorList.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					var a1 = armorList[i1].armor;
					if(a1.coverage[hitLocationId] == null) {
						continue;
					}
					var result = a1.special != null && a1.special.layer != 0 ? (a1.special.layerCoverage == 0 || (a1.special.layerCoverage & hitLocationMask) != 0 ? 1 : 0) * a1.special.layer : 0;
					if(comparisonLayerMasks[i1] != 0 && a1.special.wornWith.layer > 0) {
						if(a1.special.wornWith.layer > result) {
							result = a1.special.wornWith.layer;
						}
					}
					var c = result;
					if(c > 0) {
						comparisonLayeredArmor.push({ armor : a1, layer : c});
					}
				}
				if(comparisonLayeredArmor.length > 0) {
					haxe_ds_ArraySort.sort(comparisonLayeredArmor,$bind(this,this.sortArmorLayers));
					if(results.armorsProtectable.length == 1 && results.armorsProtectable[0] == comparisonLayeredArmor[comparisonLayeredArmor.length - 1].armor) {
						comparisonLayeredArmor.pop();
					}
					if(comparisonLayeredArmor.length > 0) {
						results.layer = comparisonLayeredArmor[comparisonLayeredArmor.length - 1].layer;
						var i2 = comparisonLayeredArmor.length;
						while(--i2 > -1) if(comparisonLayeredArmor[i2].layer == results.layer) {
							results.armorsLayer.push(comparisonLayeredArmor[i2].armor);
						}
						var ind;
						var tmp;
						if(results.armorsProtectable.length == 1) {
							ind = results.armorsLayer.indexOf(results.armorsProtectable[0]);
							tmp = ind >= 0;
						} else {
							tmp = false;
						}
						if(tmp) {
							comparisonLayeredArmor.splice(ind,1);
						}
						var tmp1;
						if(results.armorsProtectable.length >= 2 && results.armorsLayer.length == 1) {
							ind = results.armorsProtectable.indexOf(results.armorsLayer[0]);
							tmp1 = ind >= 0;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							results.armorsProtectable.splice(ind,1);
						}
					}
				}
			}
		}
		if(!this.calcArmorCrushing) {
			return;
		}
		var i3;
		var highest1 = 0;
		var crushableSortList = [];
		var _g12 = 0;
		var _g3 = armorList.length;
		while(_g12 < _g3) {
			var i4 = _g12++;
			var a2 = armorList[i4].armor;
			if((a2.specialFlags & 2) == 0 || a2.coverage[hitLocationId] == null) {
				continue;
			}
			if(a2.customise != null && a2.customise.hitLocationAllAVModifiers != null && a2.checkFubarCrushed(body,targetingZoneMask,columnNum - 1)) {
				continue;
			}
			if(a2.writeAVsAtLocation(body,hitLocationId,hitLocationMask,sampleAV,0,false,targetingZoneMask,false)) {
				var compareAV1 = columnNum == 1 ? sampleAV.avc : columnNum == 2 ? sampleAV.avp : sampleAV.avb;
				crushableSortList.push({ layer : compareAV1, armor : a2});
			}
		}
		if(crushableSortList.length > 0) {
			haxe_ds_ArraySort.sort(crushableSortList,$bind(this,this.sortArmorLayers));
			highest1 = crushableSortList[crushableSortList.length - 1].layer;
			i3 = crushableSortList.length;
			while(--i3 > -1) if(highest1 == crushableSortList[i3].layer) {
				results.armorsCrushable.push(crushableSortList[i3].armor);
			}
		}
	}
	,get_shieldAVHigherOrEqual: function() {
		var calculating = this.calcAVColumn != 0;
		var shield = this.carriedShield;
		var av = this.calcArmorResults.layer + this.calcArmorResults.av;
		if(calculating && shield != null) {
			return shield.AV > av;
		} else {
			return false;
		}
	}
	,focusOutAVColumnRowIndex: function(columnNum,rowIndex) {
		var _gthis = this;
		haxe_Timer.delay(function() {
			if(_gthis.calcAVColumn == columnNum && _gthis.calcAVRowIndex == rowIndex) {
				_gthis.calcAVColumn = 0;
			}
		},0);
	}
	,test: function() {
		console.log("TEST");
	}
	,focusOutRowField: function(targ,mask) {
		haxe_Timer.delay(function() {
			targ.focusedFlags &= ~mask;
		},0);
	}
	,focusInRowField: function(targ,mask) {
		targ.focusedFlags = mask;
		if(mask < 20) {
			this.curWidgetRequest.type = "";
			this.curWidgetRequest.index = 0;
			this.focusValueText = "";
		}
	}
	,focusWidgetValue: function(value) {
		this.focusValueText = value;
	}
	,executeQtyEntry: function(qtyEntry,tarInventoryList) {
		if(qtyEntry.isValid()) {
			tarInventoryList.add(qtyEntry.e);
			qtyEntry.reset();
			this.itemTransitionName = "fade";
			return true;
		}
		return false;
	}
	,validateQtyName: function(name,itemQty,isPacked) {
		var matchArr = isPacked ? this.inventory.packed : this.inventory.dropped;
		var testItem = itemQty.item;
		var lastName = testItem.name;
		testItem.name = name;
		var testId = itemQty.get_uid();
		testItem.name = lastName;
		var _g1 = 0;
		var _g = matchArr.list.length;
		while(_g1 < _g) {
			var i = _g1++;
			var it = matchArr.list[i];
			if(it == itemQty) {
				continue;
			}
			if(it.get_uid() == testId) {
				return false;
			}
		}
		return true;
	}
	,validateQtyNamePacked: function(name,itemQty) {
		return this.validateQtyName(name,itemQty,true);
	}
	,validateQtyNameDropped: function(name,itemQty) {
		return this.validateQtyName(name,itemQty,false);
	}
	,executeEquipEntry: function(equipEntry,typeId) {
		if(equipEntry.isValid()) {
			var tarList = this.inventory.getEquipedAssignList(typeId);
			var lastWeap = equipEntry.getWeapon();
			tarList.push(equipEntry.e);
			var newAssign = troshx_sos_core_Inventory.getEmptyReadyAssign(typeId);
			equipEntry.reset(newAssign);
			var newWeap = equipEntry.getWeapon();
			if(lastWeap != null && newWeap != null) {
				newWeap.profs = lastWeap.profs;
				newWeap.ranged = lastWeap.ranged;
				newWeap.isAmmo = lastWeap.isAmmo;
				if(newWeap.ranged && (newWeap.profs & 4) != 0) {
					newWeap.crossbow = new troshx_sos_core_Crossbow();
				}
				if(newWeap.ranged && (newWeap.profs & 8) != 0) {
					newWeap.firearm = new troshx_sos_core_Firearm();
				}
			}
			this.itemTransitionName = "fade";
			return true;
		}
		return false;
	}
	,addAmmo: function(ammo) {
		this.inventory.weapons.push(troshx_sos_core_Inventory.getReadyAssignOf(ammo));
	}
	,getHitLocationMaskNameOf: function(index) {
		return "";
	}
	,Template: function() {
		return "<div class=\"inventory\" v-on:click=\"onBaseInventoryClick\">\r\n\r\n\t<h2>{{whoseInventoryPrefix}}Inventory<slot name=\"titleAfter\"></slot></h2>\r\n\t\r\n\t<div class=\"tally-zone\">\r\n\t\t<div>\r\n\t\t\t<div class=\"tallycta\"><label><input type=\"checkbox\" v-model=\"userShowTally\"></input><i>Tally?</i></label></div>\r\n\t\t</div>\r\n\t\t<div class=\"checkout\" v-if=\"showTally\">\r\n\t\t\t<div><b>Tally:</b> <i>(excluding dropped)</i></div>\r\n\t\t\t<div>Total Cost: <b>{{ totalCostGP }}gp  {{ totalCostSP }}sp {{ totalCostCP }}cp</b></div>\r\n\t\t\t<div v-if=\"maxCostCopper!=null\" :class=\"{exceeded:exceededCost}\">Max Cost: <b>{{ maxCostGP }}gp  {{ maxCostSP }}sp {{ maxCostCP }}cp</b> ({{moneyLeftStr}} remaining)</div>\r\n\t\t\t<div>Total Weight: <b>{{ totalWeightLbl }}</b></div>\r\n\t\t\t<div v-if=\"maxWeight!=null\" :class=\"{exceeded:exceededWeight}\">Weight Threshold: <b>{{ totalWeightLbl }}</b> / <b>{{ maxWeight }}</b> (~~{{weightRemainingLbl}}) <slot name=\"weightAfter\"></slot></div>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<slot name=\"exitBtn\"></slot>\r\n\t</div>\t\r\n\t\t\r\n\t<div class=\"manage-multi-zone\">\r\n\t\t<slot name=\"loadNewTabZone\"></slot>\r\n\t\t<div class=\"save-drop-zone\">\r\n\t\t\t<div>\r\n\t\t\t\t<div><button v-on:click=\"saveDropList()\">Save Dropped Zone</button></div>\r\n\t\t\t\t<textarea class=\"savebox\" character-set=\"UTF-8\" v-model=\"copyToClipboardDropList\"></textarea>\r\n\t\t\t\t<div><button v-on:click=\"loadDropList()\">Load Dropped Zone</button></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\t\r\n\t<div style=\"clear:both\"></div>\t\r\n\t\t\t\r\n\t<sweet-modal ref=\"overwriteItemWarning\">\r\n\t\t<div  v-if=\"itemToOverwriteWith!=null\" v-on:close=\"closeOverwriteModal()\">\r\n\t\t\t<div>\r\n\t\t\tThe item{{itemToOverwriteWith.qty > 1 ? \"s\":\"\"}} <b>\"{{ itemToOverwriteWith.get_uid()}}\"</b><b v-show=\"itemToOverwriteWith.qty>1\">({{itemToOverwriteWith.qty}})</b> you intend to {{ itemToOverwriteToPacked ? \"pack\" : \"drop\" }} might be <b>different</b> from existing item(s) already {{  itemToOverwriteToPacked ? \"in \"+(isYourInventory ? \"your\" : \"the\")+\" pack\" : \"on the ground\" }} with the same label! Either confirm to overwrite the existing item(s) {{  itemToOverwriteToPacked ? \"in \"+(isYourInventory ? \"your\" : \"the\")+\" pack\" : \"on the ground\" }}, or re-name the item to something else before {{  itemToOverwriteToPacked ? \"packing\" : \"dropping\" }} it.\r\n\t\t\t</div>\r\n\t\t\t<br/>\r\n\t\t\t<div>\r\n\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"itemToOverwriteWithChecked\"></input> <i>Confirm Overwrite?</i></label></div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<button slot=\"button\" :disabled=\"!itemToOverwriteWithChecked\" v-on:click=\"confirmOverwriteItem()\">Confirm Overwrite</button>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<button slot=\"button\" v-on:click=\"closeOverwriteModal(true)\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</sweet-modal>\r\n\t\t\t\r\n\t<sweet-modal ref=\"itemQtyMultipleModal\" v-on:close=\"closeMultipleQtyItem()\">\r\n\t\t<div v-if=\"itemQtyMultiple!=null\">\r\n\t\t\t<div>\r\n\t\t\t\tHow much of <b>{{itemQtyMultiple.get_uid()}}</b><b>({{itemQtyMultipleMax}})</b> do you wish to {{ itemToOverwriteToPacked ? \"pack\" : \"drop\" }}?\r\n\t\t\t</div>\r\n\t\t\t<br/>\r\n\t\t\t<div>\r\n\t\t\t\t<InputInt :obj=\"itemQtyMultiple\" prop=\"qty\" :min=\"1\" :max=\"itemQtyMultipleMax\" />\r\n\t\t\t</div>\r\n\t\t\t<br/>\r\n\t\t\t<button slot=\"button\" v-on:click=\"confirmQtyMultipleSend()\">Confirm</button>\r\n\t\t\t<button slot=\"button\" v-on:click=\"closeMultipleQtyItem(true)\">Cancel</button>\r\n\t\t</div>\r\n\t</sweet-modal>\r\n\t\r\n\t\r\n\t<h4>Dropped:</h4>\r\n\t<table border=\"1\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Item Name</td>\r\n\t\t\t\t<td class=\"qty\">Qty</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"munition-type\">Type</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('dropped', $event)\" v-on:touchstart.native=\"setCurWidgetSection('dropped', $event)\">\r\n\t\t\t\r\n\t\t\t<tr v-for=\"(entry,i) in inventory.dropped.list\" :key=\"entry.item.get_uid()\">\r\n\t\t\t\t<td><input-name-qty :itemQty=\"entry\" v-on:updated=\"onInputNameUpdated\" :customValidateName=\"validateQtyNameDropped\" /></td>\r\n\t\t\t\t<td><InputInt :obj=\"entry\" prop=\"qty\" :min=\"1\"></InputInt></td>\r\n\t\t\t\t<td><InputNumber :floating=\"true\" :step=\"0.5\" :obj=\"entry.item\" prop=\"weight\" :min=\"0\"></InputNumber></td>\r\n\t\t\t\t<td>{{ entry.item.getTypeLabel() }}</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packItemEntryFromGround(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"inventory.equipItemEntryFromGround(entry)\">Equip</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"inventory.deleteDropped(entry)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<tr class=\"entry-row\" :key=\"-1\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"droppedEntry.e.item.name\" required v-on:focus=\"focusInRowField(droppedEntry, 1)\" v-on:blur=\"focusOutRowField(droppedEntry, 1)\"></input></td>\r\n\t\t\t\t<td><InputInt :obj=\"droppedEntry.e\" prop=\"qty\" :min=\"1\" v-on:focus.native=\"focusInRowField(droppedEntry, 2)\" v-on:blur.native=\"focusOutRowField(droppedEntry, 2)\"></InputInt></td>\r\n\t\t\t\t<td><InputNumber :step=\"0.5\" :obj=\"droppedEntry.e\" prop=\"weight\" :min=\"0\" v-on:focus.native=\"focusInRowField(droppedEntry, 4)\" v-on:blur.native=\"focusOutRowField(droppedEntry, 4)\"></InputNumber></td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\tMiscItem\r\n\t\t\t\t</td>\r\n\t\t\t\t\r\n\t\t\t</tr>\r\n\t\t\r\n\t\t\t\r\n\t\t</tbody>\r\n\t</table>\r\n\t\r\n\t<hr/>\r\n\t\t\t\t\r\n\t<slot name=\"tabList\"></slot>\r\n\t\t\t\r\n\t<h4>Packed: <label style=\"font-size:10px\">Drop?<input type=\"checkbox\" v-model=\"inventory.dropPack\"></input></label></h4>\t\t\t\t\r\n\t\r\n\t\r\n\t<table border=\"1\" style=\"display:inline-block\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Item Name</td>\r\n\t\t\t\t<td class=\"qty\">Qty</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"munition-type\">Type</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('packed', $event)\" v-on:touchstart.native=\"setCurWidgetSection('packed', $event)\">\r\n\t\t\t<tr v-for=\"(entry,i) in inventory.packed.list\" :key=\"entry.item.get_uid()\">\r\n\t\t\t\t<td><input-name-qty :itemQty=\"entry\" v-on:updated=\"onInputNameUpdated\" :customValidateName=\"validateQtyNamePacked\" /></td>\r\n\t\t\t\t<td><InputInt :obj=\"entry\" prop=\"qty\" :min=\"1\"></InputInt></td>\r\n\t\t\t\t<td><InputNumber :floating=\"true\" :step=\"0.5\" :obj=\"entry.item\" prop=\"weight\" :min=\"0\"></InputNumber></td>\r\n\t\t\t\t<td>{{ entry.item.getTypeLabel() }}</td>\r\n\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropItemEntryFromPack(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"inventory.equipItemEntryFromPack(entry)\">Equip</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"inventory.deletePacked(entry)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" :key=\"-1\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"packedEntry.e.item.name\" required v-on:focus=\"focusInRowField(packedEntry, 1)\" v-on:blur=\"focusOutRowField(packedEntry, 1)\"></input></td>\r\n\t\t\t\t<td><InputInt :obj=\"packedEntry.e\" prop=\"qty\" :min=\"1\" v-on:focus.native=\"focusInRowField(packedEntry, 2)\" v-on:blur.native=\"focusOutRowField(packedEntry, 2)\"></InputInt></td>\r\n\t\t\t\t<td><InputNumber :step=\"0.5\" :obj=\"packedEntry.e\" prop=\"weight\" :min=\"0\" v-on:focus.native=\"focusInRowField(packedEntry, 4)\" v-on:blur.native=\"focusOutRowField(packedEntry, 4)\"></InputNumber></td>\r\n\t\t\t\t<td>MiscItem</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\t\t\t\t\r\n\t<h3>Equipment details</h3>\r\n\t\r\n\t\r\n\t<h4>Shields:</h4>\r\n\t<table border=\"1\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td style=\"width:155px\">Shield Name</td>\r\n\t\t\t\t<td style=\"width:35px\">AV</td>\r\n\t\t\t\t<td style=\"width:35px\">Block</td>\r\n\t\t\t\t<td style=\"width:45px\">Weight</td>\r\n\t\t\t\t<td style=\"width:67px\">Size</td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td style=\"width:130px\">Kept at?</td>\r\n\t\t\t\t<td class=\"held\">Held?</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('shield',$event)\" v-on:touchstart.native=\"setCurWidgetSection('shield',$event)\">\r\n\t\t\t<tr :key=\"entry.key\" v-for=\"(entry,i) in inventory.shields\">\r\n\t\t\t\t<td><input-name :item=\"entry.shield\" v-on:updated=\"onInputNameUpdated\" /></td>\r\n\t\t\t\t<td><InputInt :obj=\"entry.shield\" prop=\"AV\" :min=\"1\"></InputInt></td>\r\n\t\t\t\t<td><InputInt :obj=\"entry.shield\" prop=\"blockTN\" :min=\"0\"></InputInt></td>\r\n\t\t\t\t<td><InputNumber :step=\"0.5\" :obj=\"entry.shield\" prop=\"weight\" :min=\"0\"></InputNumber></td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select number v-model.number=\"entry.shield.size \">\r\n\t\t\t\t\t\t<option :value=\"0\">Small</option>\r\n\t\t\t\t\t\t<option :value=\"1\">Medium</option>\r\n\t\t\t\t\t\t<option :value=\"2\">Large</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.shield)\" :index=\"i\" :showWidget=\"isVisibleWidget('shield','tags', i)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td-unheld :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :index=\"i\" :showWidget=\"isVisibleWidget('shield', 'td-unheld', i)\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select-held :entry=\"entry\" :inventory=\"inventory\" />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packEquipedShield(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedShield(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedShield(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" :key=\"-1\">\r\n\t\t\t\t<td><input type=\"text\" v-on:focus=\"focusInRowField(shieldEntry, 1)\" v-on:blur=\"focusOutRowField(shieldEntry, 1)\" v-model=\"shieldEntry.e.shield.name\" required></input></td>\r\n\t\t\t\t<td><InputInt v-on:focus.native=\"focusInRowField(shieldEntry, 2)\" v-on:blur.native=\"focusOutRowField(shieldEntry, 2)\" :obj=\"shieldEntry.e.shield\" prop=\"AV\" :min=\"1\"></InputInt></td>\r\n\t\t\t\t<td><InputInt v-on:focus.native=\"focusInRowField(shieldEntry, 4)\" v-on:blur.native=\"focusOutRowField(shieldEntry, 4)\" :obj=\"shieldEntry.e.shield\" prop=\"blockTN\" :min=\"0\"></InputInt></td>\r\n\t\t\t\t<td><InputInt v-on:focus.native=\"focusInRowField(shieldEntry, 8)\" v-on:blur.native=\"focusOutRowField(shieldEntry, 8)\" :obj=\"shieldEntry.e.shield\" prop=\"weight\" :min=\"0\"></InputInt></td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select v-model.number=\"shieldEntry.e.shield.size\" v-on:focus=\"focusInRowField(shieldEntry, 16)\" v-on:blur=\"focusOutRowField(shieldEntry, 16)\">\r\n\t\t\t\t\t\t<option :value=\"0\">Small</option>\r\n\t\t\t\t\t\t<option :value=\"1\">Medium</option>\r\n\t\t\t\t\t\t<option :value=\"2\">Large</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(shieldEntry.e.shield)\" :index=\"-1\" :showWidget=\"(shieldEntry.focusedFlags & (32|(1<<21))) !=0\" :entry=\"shieldEntry.e\" :requestCurWidget=\"requestCurWidget\"\r\n\t\t\t\tv-on:focus-in-row=\"focusInRowField(shieldEntry, 32)\" v-on:focus-out-row=\"focusOutRowField(shieldEntry, 32)\" v-on:focus-widget=\"focusInRowField(shieldEntry, (1<<21))\" />\r\n\t\t\t\t<td><input type=\"text\" v-model=\"shieldEntry.e.unheldRemark\" v-on:focus=\"focusInRowField(shieldEntry,64)\" v-on:blur=\"focusOutRowField(shieldEntry,64)\"></input></td>\t\r\n\t\t\t\t\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\t\r\n\t<h4>Munitions:</h4>\r\n\t<table border=\"1\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Melee Weap name</td>\r\n\t\t\t\t<td class=\"munition-type\">Type</td>\r\n\t\t\t\t<td class=\"hands\">Hands</td>\r\n\t\t\t\t<td class=\"reach\">Reach</td>\r\n\t\t\t\t<td style=\"width:65px\">Swing</td>\r\n\t\t\t\t<td style=\"width:65px\">Thrust</td>\r\n\t\t\t\t<td style=\"width:35px\">DTN(G)</td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"keptat\">Kept at?</td>\r\n\t\t\t\t<td class=\"held\">Held?</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('meleeWeap', $event)\" v-on:touchstart.native=\"setCurWidgetSection('meleeWeap', $event)\">\r\n\t\t\t<tr v-for=\"(entry,itemIndex) in filteredMelee\" :key=\"entry.key\">\r\n\t\t\t\t<td><input-name :item=\"entry.weapon\" v-on:updated=\"onInputNameUpdated\" /></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :weapon=\"entry.weapon\" section=\"meleeWeap\" :index=\"itemIndex\"  :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\"  />\r\n\t\t\t\t<td-hands :entry=\"entry\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select number v-model.number=\"entry.weapon.reach\">\r\n\t\t\t\t\t\t<option :value=\"1\">HA</option>\r\n\t\t\t\t\t\t<option :value=\"2\">H</option>\r\n\t\t\t\t\t\t<option :value=\"3\">S</option>\r\n\t\t\t\t\t\t<option :value=\"4\">M</option>\r\n\t\t\t\t\t\t<option :value=\"5\">L</option>\r\n\t\t\t\t\t\t<option :value=\"6\">VL</option>\r\n\t\t\t\t\t\t<option :value=\"7\">EL</option>\r\n\t\t\t\t\t\t<option :value=\"8\">LL</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"melee-atk\" widgetTagName=\"w-melee-atk\" :widgetProps=\"{thrusting:false}\" :value=\"getSwingAtkStr(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('meleeWeap','melee-atk', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"melee-atk2\" widgetTagName=\"w-melee-atk\" :widgetProps=\"{thrusting:true}\" :value=\"getThrustAtkStr(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('meleeWeap','melee-atk2', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"melee-def\" widgetTagName=\"w-melee-def\" :value=\"getDefGuard(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('meleeWeap','melee-def', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('meleeWeap','tags', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"entry.weapon\" prop=\"weight\"></InputNumber></td>\r\n\t\t\t\t<td-unheld :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('meleeWeap', 'td-unheld', itemIndex)\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select-held :entry=\"entry\" :inventory=\"inventory\" />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packEquipedWeapon(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" v-if=\"weaponEntry.e.weapon.isMelee()\" :key=\"-1\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.weapon.name\" v-on:focus=\"focusInRowField(weaponEntry,1)\" v-on:blur=\"focusOutRowField(weaponEntry,1)\"></input></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :entry=\"weaponEntry.e\" :weapon=\"weaponEntry.e.weapon\" section=\"meleeWeap\" :index=\"-1\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<20))\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 2)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,2)\" :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\"  />\r\n\t\t\t\t<td-hands :entry=\"weaponEntry.e\"  v-on:focus-in-row=\"focusInRowField(weaponEntry, 4)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,4)\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select number v-model.number=\"weaponEntry.e.weapon.reach\"  v-on:focus=\"focusInRowField(weaponEntry,8)\" v-on:blur=\"focusOutRowField(weaponEntry,8)\">\r\n\t\t\t\t\t\t<option value=\"1\">HA</option>\r\n\t\t\t\t\t\t<option value=\"2\">H</option>\r\n\t\t\t\t\t\t<option value=\"3\">S</option>\r\n\t\t\t\t\t\t<option value=\"4\">M</option>\r\n\t\t\t\t\t\t<option value=\"5\">L</option>\r\n\t\t\t\t\t\t<option value=\"6\">VL</option>\r\n\t\t\t\t\t\t<option value=\"7\">EL</option>\r\n\t\t\t\t\t\t<option value=\"8\">LL</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</td>\t\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"melee-atk\" widgetTagName=\"w-melee-atk\" :widgetProps=\"{thrusting:false}\" :value=\"getSwingAtkStr(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (16|(1<<21))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<21))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,16)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,16)\" />\r\n\t\t\t\t\t\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"melee-atk2\" widgetTagName=\"w-melee-atk\" :widgetProps=\"{thrusting:true}\" :value=\"getThrustAtkStr(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (32|(1<<22))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\"  v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<22))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,32)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,32)\" />\t\r\n\t\t\t\t\t\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"melee-def\" widgetTagName=\"w-melee-def\" :value=\"getDefGuard(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (64|(1<<23))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<23))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,64)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,64)\" />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (128|(1<<24))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<24))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,128)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,128)\" />\r\n\t\t\t\t\t\t\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"weaponEntry.e.weapon\" prop=\"weight\" v-on:focus.native=\"focusInRowField(weaponEntry,256)\" v-on:blur.native=\"focusOutRowField(weaponEntry,256)\"></InputNumber></td>\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.unheldRemark\"v-on:focus=\"focusInRowField(weaponEntry,512)\" v-on:blur=\"focusOutRowField(weaponEntry,512)\"></input></td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t\t<thead v-on:mousedown=\"setCurWidgetSection('bowheader', $event)\" v-on:touchstart=\"setCurWidgetSection('bowheader', $event)\">\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Bow name</td>\r\n\t\t\t\t<td class=\"munition-type\">Type</td>\r\n\t\t\t\t<td class=\"hands\">Hands</td>\r\n\t\t\t\t<td>Range</td>\r\n\t\t\t\t<td>TN(dmg)</td>\r\n\t\t\t\t<td>Req STR</td>\r\n\t\t\t\t<td class=\"voidna focus gotbtn w-holder w-ammo-spawner\" v-on:click.stop=\"\">\r\n\t\t\t\t\t<button v-on:click=\"requestCurWidget('ammo-spawner',-1)\">&#8610;</button>\r\n\t\t\t\t\t<div class=\"pop-widget\"  v-if=\"isVisibleWidget('bowheader', 'ammo-spawner', -1)\">\r\n\t\t\t\t\t\t<w-ammo-spawner :mask=\"bowSlingAndCrossbowMask\" :addAmmo=\"addAmmo\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"keptat\">Kept at?</td>\r\n\t\t\t\t<td class=\"held\">Held?</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('bow', $event)\" v-on:touchstart.native=\"setCurWidgetSection('bow', $event)\">\r\n\t\t\t<tr v-for=\"(entry, itemIndex) in filteredBow\" :key=\"entry.key\">\r\n\t\t\t\t<td><input-name :item=\"entry.weapon\" v-on:updated=\"onInputNameUpdated\" /></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :entry=\"entry\" :weapon=\"entry.weapon\" section=\"bow\" :index=\"itemIndex\"  :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"bowMask\" />\r\n\t\t\t\t<td-hands :entry=\"entry\" />\r\n\t\t\t\t<td><InputInt :obj=\"entry.weapon\" prop=\"range\" /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('bow','missile-atk', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputInt :obj=\"entry.weapon\" prop=\"requiredStr\"></InputInt></td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('bow','tags', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"entry.weapon\" prop=\"weight\"></InputNumber></td>\r\n\t\t\t\t<td-unheld :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('bow', 'td-unheld', itemIndex)\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select-held :entry=\"entry\" :inventory=\"inventory\" />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packEquipedWeapon(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" v-if=\"weaponEntry.e.weapon.isBow()\" :key=\"-2\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.weapon.name\" v-on:focus=\"focusInRowField(weaponEntry,1)\" v-on:blur=\"focusOutRowField(weaponEntry,1)\"></input></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :weapon=\"weaponEntry.e.weapon\" section=\"bow\" :index=\"-1\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<20))\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 2)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,2)\" :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"bowMask\" />\r\n\t\t\t\t<td-hands :entry=\"weaponEntry.e\"  v-on:focus-in-row=\"focusInRowField(weaponEntry, 4)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry, 4)\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"weaponEntry.e.weapon\" prop=\"range\" v-on:focus.native=\"focusInRowField(weaponEntry,8)\" v-on:blur.native=\"focusOutRowField(weaponEntry,8)\"  /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (16|(1<<21))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<21))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,16)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,16)\" />\r\n\t\t\t\t<td><InputInt :step=\"1\" :obj=\"weaponEntry.e.weapon\" prop=\"requiredStr\" v-on:focus.native=\"focusInRowField(weaponEntry,32)\" v-on:blur.native=\"focusOutRowField(weaponEntry,32)\"></InputInt></td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (128|(1<<24))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<24))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,128)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,128)\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"weaponEntry.e.weapon\" prop=\"weight\" v-on:focus.native=\"focusInRowField(weaponEntry,256)\" v-on:blur.native=\"focusOutRowField(weaponEntry,256)\"></InputNumber></td>\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.unheldRemark\"v-on:focus=\"focusInRowField(weaponEntry,512)\" v-on:blur=\"focusOutRowField(weaponEntry,512)\"></input></td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Crossbow name</td>\r\n\t\t\t\t<td class=\"munition-type\">Type</td>\r\n\t\t\t\t<td class=\"hands\">Hands</td>\r\n\t\t\t\t<td>Range</td>\r\n\t\t\t\t<td>TN(dmg)</td>\r\n\t\t\t\t<td>Span</td>\r\n\t\t\t\t<td>SpanTool</td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"keptat\">Kept at?</td>\r\n\t\t\t\t<td class=\"held\">Held?</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('crossbow', $event)\" v-on:touchstart.native=\"setCurWidgetSection('crossbow', $event)\">\r\n\t\t\t<tr v-for=\"(entry, itemIndex) in filteredCrossbow\" :key=\"entry.key\">\r\n\t\t\t\t<td><input-name :item=\"entry.weapon\" v-on:updated=\"onInputNameUpdated\" /></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :entry=\"entry\" :weapon=\"entry.weapon\" section=\"crossbow\" :index=\"itemIndex\"  :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"crossbowMask\" />\r\n\t\t\t\t<td-hands :entry=\"entry\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"entry.weapon\" prop=\"range\" /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('crossbow','missile-atk', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"entry.weapon.crossbow\" prop=\"span\"></InputInt></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"span-tools\" widgetTagName=\"w-span-tools\" :value=\"getSpanTools(entry.weapon.crossbow)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('crossbow','span-tools', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('crossbow','tags', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"entry.weapon\" prop=\"weight\"></InputNumber></td>\r\n\t\t\t\t<td-unheld :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('crossbow', 'td-unheld', itemIndex)\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select-held :entry=\"entry\" :inventory=\"inventory\" />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packEquipedWeapon(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" :key=\"-3\" v-if=\"weaponEntry.e.weapon.isCrossbow()\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.weapon.name\" v-on:focus=\"focusInRowField(weaponEntry,1)\" v-on:blur=\"focusOutRowField(weaponEntry,1)\"></input></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :entry=\"weaponEntry.e\" :weapon=\"weaponEntry.e.weapon\" section=\"crossbow\" :index=\"-1\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<20))\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 2)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,2)\" :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"crossbowMask\" />\r\n\t\t\t\t<td-hands :entry=\"weaponEntry.e\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 4)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,4)\" />\t\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"weaponEntry.e.weapon\" prop=\"range\" v-on:focus.native=\"focusInRowField(weaponEntry,8)\" v-on:blur.native=\"focusOutRowField(weaponEntry,8)\"  /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (16|(1<<21))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<21))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,16)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,16)\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"weaponEntry.e.weapon.crossbow\" prop=\"span\"  v-on:focus.native=\"focusInRowField(weaponEntry,32)\" v-on:blur.native=\"focusOutRowField(weaponEntry,32)\"></InputInt></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"span-tools\" widgetTagName=\"w-span-tools\" :value=\"getSpanTools(weaponEntry.e.weapon.crossbow)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (64|(1<<22))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<22))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,64)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,64)\" />\t\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (128|(1<<24))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<24))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,128)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,128)\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"weaponEntry.e.weapon\" prop=\"weight\" v-on:focus.native=\"focusInRowField(weaponEntry,256)\" v-on:blur.native=\"focusOutRowField(weaponEntry,256)\"></InputNumber></td>\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.unheldRemark\"v-on:focus=\"focusInRowField(weaponEntry,512)\" v-on:blur=\"focusOutRowField(weaponEntry,512)\"></input></td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t\t<thead v-on:mousedown=\"setCurWidgetSection('firearmheader', $event)\" v-on:touchstart=\"setCurWidgetSection('firearmheader', $event)\">\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Firearm name</td>\r\n\t\t\t\t<td class=\"munition-type\">Type</td>\r\n\t\t\t\t<td class=\"hands\">Hands</td>\r\n\t\t\t\t<td>Range</td>\r\n\t\t\t\t<td>TN(dmg)</td>\r\n\t\t\t\t<td>Load</td>\r\n\t\t\t\t<td class=\"w-holder w-ammo-spawner\" v-on:click.stop=\"\">\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"requestCurWidget('ammo-spawner',-1)\">Ammunition</a>\r\n\t\t\t\t\t<div class=\"pop-widget\"  v-if=\"isVisibleWidget('firearmheader', 'ammo-spawner', -1)\">\r\n\t\t\t\t\t\t<w-ammo-spawner :mask=\"firearmMask\" :addAmmo=\"addAmmo\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"keptat\">Kept at?</td>\r\n\t\t\t\t<td class=\"held\">Held?</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('firearm', $event)\" v-on:touchstart.native=\"setCurWidgetSection('firearm', $event)\">\r\n\t\t\t<tr v-for=\"(entry, itemIndex) in filteredFirearm\" :key=\"entry.key\">\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"firearm-name\" widgetTagName=\"w-firearm-name\" :value=\"entry.weapon.get_label()\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('firearm','firearm-name', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\"  :entry=\"entry\" :weapon=\"entry.weapon\" section=\"firearm\" :index=\"itemIndex\"  :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"firearmMask\"  />\r\n\t\t\t\t<td-hands :entry=\"entry\" />\r\n\t\t\t\t<td><InputInt :step=\"1\" :min=\"0\" :obj=\"entry.weapon\" prop=\"range\" /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('firearm','missile-atk', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"entry.weapon.firearm\" prop=\"load\"></InputInt></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"ammunition\" widgetTagName=\"w-ammunition\" :value=\"getAmmunitions(entry.weapon.firearm)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('firearm','ammunition', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :addAmmo=\"addAmmo\" />\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('firearm','tags', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"entry.weapon\" prop=\"weight\"></InputNumber></td>\r\n\t\t\t\t<td-unheld :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('firearm', 'td-unheld', itemIndex)\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select-held :entry=\"entry\" :inventory=\"inventory\" />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packEquipedWeapon(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" :key=\"-4\" v-if=\"weaponEntry.e.weapon.isFirearm()\">\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"firearm-name\" widgetTagName=\"w-firearm-name\" :value=\"weaponEntry.e.weapon.get_label()\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (1|(1<<25))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<25))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,1)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,1)\" />\r\n\t\t\t\t\t\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :entry=\"weaponEntry.e\" :weapon=\"weaponEntry.e.weapon\" section=\"firearm\" :index=\"-1\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<20))\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 2)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,2)\" :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"firearmMask\" />\r\n\t\t\t\t<td-hands :entry=\"weaponEntry.e\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 4)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,4)\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"weaponEntry.e.weapon\" prop=\"range\" v-on:focus.native=\"focusInRowField(weaponEntry,8)\" v-on:blur.native=\"focusOutRowField(weaponEntry,8)\"  /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (16|(1<<21))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<21))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,16)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,16)\" />\t\r\n\t\t\t\t<td><InputInt :obj=\"weaponEntry.e.weapon.firearm\" prop=\"load\" v-on:focus.native=\"focusInRowField(weaponEntry,32)\" v-on:blur.native=\"focusOutRowField(weaponEntry,32)\"></InputInt></td>\r\n\t\t\t\t\t\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"ammunition\" widgetTagName=\"w-ammunition\" :value=\"getAmmunitions(weaponEntry.e.weapon.firearm)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (64|(1<<22))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<22))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,64)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,64)\" :addAmmo=\"addAmmo\" />\t\r\n\t\t\t\t\t\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (128|(1<<24))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<24))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,128)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,128)\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"weaponEntry.e.weapon\" prop=\"weight\" v-on:focus.native=\"focusInRowField(weaponEntry,256)\" v-on:blur.native=\"focusOutRowField(weaponEntry,256)\"></InputNumber></td>\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.unheldRemark\"v-on:focus=\"focusInRowField(weaponEntry,512)\" v-on:blur=\"focusOutRowField(weaponEntry,512)\"></input></td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Throwing/Sling name</td>\r\n\t\t\t\t<td class=\"munition-type\">Type</td>\r\n\t\t\t\t<td class=\"hands\">Hands</td>\r\n\t\t\t\t<td>Range</td>\r\n\t\t\t\t<td>TN(dmg)</td>\r\n\t\t\t\t<td class=\"d10\">Stuck</td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"keptat\">Kept at?</td>\r\n\t\t\t\t<td class=\"held\">Held?</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('throwing', $event)\" v-on:touchstart.native=\"setCurWidgetSection('throwing', $event)\">\r\n\t\t\t<tr v-for=\"(entry, itemIndex) in filteredThrowing\" :key=\"entry.key\">\r\n\t\t\t\t<td><input-name :item=\"entry.weapon\" v-on:updated=\"onInputNameUpdated\" /></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :weapon=\"entry.weapon\" section=\"throwing\" :index=\"itemIndex\"  :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"throwMask\" />\r\n\t\t\t\t<td-hands :entry=\"entry\" />\r\n\t\t\t\t<td><InputInt :obj=\"entry.weapon\" prop=\"range\" /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('throwing','missile-atk', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :max=\"10\" :obj=\"entry.weapon\" prop=\"stuckChance\"></InputInt></td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('throwing','tags', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"entry.weapon\" prop=\"weight\"></InputNumber></td>\r\n\t\t\t\t<td-unheld :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('throwing', 'td-unheld', itemIndex)\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select-held :entry=\"entry\" :inventory=\"inventory\" />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packEquipedWeapon(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" :key=\"-5\" v-if=\"weaponEntry.e.weapon.isThrowing() || weaponEntry.e.weapon.isSling()\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.weapon.name\" v-on:focus=\"focusInRowField(weaponEntry,1)\" v-on:blur=\"focusOutRowField(weaponEntry,1)\"></input></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :weapon=\"weaponEntry.e.weapon\" section=\"throwing\" :index=\"-1\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<20))\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 2)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,2)\" :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"throwMask\" />\r\n\t\t\t\t<td-hands :entry=\"weaponEntry.e\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 4)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,4)\" />\r\n\t\t\t\t<td><InputInt :step=\"1\" :obj=\"weaponEntry.e.weapon\" prop=\"range\" v-on:focus.native=\"focusInRowField(weaponEntry,8)\" v-on:blur.native=\"focusOutRowField(weaponEntry,8)\"  /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (16|(1<<21))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<21))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,16)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,16)\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :max=\"10\" :obj=\"weaponEntry.e.weapon\" prop=\"stuckChance\" v-on:focus.native=\"focusInRowField(weaponEntry,32)\" v-on:blur.native=\"focusOutRowField(weaponEntry,32)\"></InputInt></td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (128|(1<<24))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<24))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,128)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,128)\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"weaponEntry.e.weapon\" prop=\"weight\" v-on:focus.native=\"focusInRowField(weaponEntry,256)\" v-on:blur.native=\"focusOutRowField(weaponEntry,256)\"></InputNumber></td>\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.unheldRemark\"v-on:focus=\"focusInRowField(weaponEntry,512)\" v-on:blur=\"focusOutRowField(weaponEntry,512)\"></input></td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td class=\"gotbtn focus\">Ammo name</td>\r\n\t\t\t\t<td class=\"munition-type\">Type</td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td>Range</td>\r\n\t\t\t\t<td>TN(dmg)</td>\r\n\t\t\t\t<td class=\"d10\">Catch</td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"keptat\">Kept at?</td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('ammo', $event)\" v-on:touchstart.native=\"setCurWidgetSection('ammo', $event)\">\r\n\t\t\t<tr v-for=\"(entry, itemIndex) in filteredAmmo\" :key=\"entry.key\">\r\n\t\t\t\t<td><input-name :item=\"entry.weapon\" v-on:updated=\"onInputNameUpdated\" /></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :weapon=\"entry.weapon\" section=\"ammo\" :index=\"itemIndex\"  :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\"  />\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td><InputInt :obj=\"entry.weapon\" prop=\"range\" /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('ammo','missile-atk', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :max=\"10\" :obj=\"entry.weapon\" prop=\"stuckChance\"></InputInt></td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.weapon)\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('ammo','tags', itemIndex)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"entry.weapon\" prop=\"weight\"></InputNumber></td>\r\n\t\t\t\t<td-unheld :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :index=\"itemIndex\" :showWidget=\"isVisibleWidget('ammo', 'td-unheld', itemIndex)\" />\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packEquipedWeapon(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropEquipedWeapon(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" :key=\"-6\" v-if=\"weaponEntry.e.weapon.isAmmunition()\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.weapon.name\" v-on:focus=\"focusInRowField(weaponEntry,1)\" v-on:blur=\"focusOutRowField(weaponEntry,1)\"></input></td>\r\n\t\t\t\t<td-prof :curWidgetRequest=\"curWidgetRequest\" :isVisibleWidget=\"isVisibleWidget\" :weapon=\"weaponEntry.e.weapon\" section=\"ammo\" :index=\"-1\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<20))\" v-on:focus-in-row=\"focusInRowField(weaponEntry, 2)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,2)\" :meleeProfs=\"coreMeleeProfs\" :rangedProfs=\"coreRangedProfs\" :profMask=\"-1\" />\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td><InputInt :obj=\"weaponEntry.e.weapon\" prop=\"range\" v-on:focus.native=\"focusInRowField(weaponEntry,8)\" v-on:blur.native=\"focusOutRowField(weaponEntry,8)\"  /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"missile-atk\" widgetTagName=\"w-missile-atk\" :value=\"getMissileAtkStr(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (16|(1<<21))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<21))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,16)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,16)\" />\r\n\t\t\t\t<td><InputInt :min=\"0\" :max=\"10\" :obj=\"weaponEntry.e.weapon\" prop=\"stuckChance\" v-on:focus.native=\"focusInRowField(weaponEntry,32)\" v-on:blur.native=\"focusOutRowField(weaponEntry,32)\"></InputInt></td>\r\n\t\t\t\t<td class=\"voidna\"></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(weaponEntry.e.weapon)\" :index=\"-1\" :showWidget=\"(weaponEntry.focusedFlags & (128|(1<<24))) !=0\" :entry=\"weaponEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(weaponEntry,(1<<24))\" v-on:focus-in-row=\"focusInRowField(weaponEntry,128)\" v-on:focus-out-row=\"focusOutRowField(weaponEntry,128)\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"weaponEntry.e.weapon\" prop=\"weight\" v-on:focus.native=\"focusInRowField(weaponEntry,256)\" v-on:blur.native=\"focusOutRowField(weaponEntry,256)\"></InputNumber></td>\r\n\t\t\t\t<td><input type=\"text\" v-model=\"weaponEntry.e.unheldRemark\"v-on:focus=\"focusInRowField(weaponEntry,512)\" v-on:blur=\"focusOutRowField(weaponEntry,512)\"></input></td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t\t\t\r\n\t</table>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t<h4>MiscItems:</h4>\r\n\t<table border=\"1\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>MiscItem Name</td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"keptat\">Kept at?</td>\r\n\t\t\t\t<td class=\"held\">Held?</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('miscItem', $event)\" v-on:touchstart.native=\"setCurWidgetSection('miscItem', $event)\">\r\n\t\t\t<tr v-for=\"(entry,i) in inventory.equipedNonMeleeItems\" :key=\"entry.key\">\r\n\t\t\t\t<td><input-name :item=\"entry.item\" v-on:updated=\"onInputNameUpdated\" /></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.item)\" :index=\"i\" :showWidget=\"isVisibleWidget('miscItem','tags', i)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"entry.item\" prop=\"weight\"></InputNumber></td>\r\n\t\t\t\t<td-unheld :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" :index=\"i\" :showWidget=\"isVisibleWidget('miscItem', 'td-unheld', i)\" />\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<select-held :entry=\"entry\" :inventory=\"inventory\" />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packMiscItem(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropMiscItem(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropMiscItem(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" :key=\"-1\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"miscItemEntry.e.item.name\" v-on:focus=\"focusInRowField(miscItemEntry,1)\" v-on:blur=\"focusOutRowField(miscItemEntry,1)\"></input></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(miscItemEntry.e.item)\" :index=\"-1\" :showWidget=\"(miscItemEntry.focusedFlags & (2|(1<<21))) !=0\" :entry=\"miscItemEntry.e\" :requestCurWidget=\"requestCurWidget\" v-on:focus-widget=\"focusInRowField(miscItemEntry,(1<<21))\" v-on:focus-in-row=\"focusInRowField(miscItemEntry,2)\" v-on:focus-out-row=\"focusOutRowField(miscItemEntry,2)\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"miscItemEntry.e.item\" prop=\"weight\" v-on:focus.native=\"focusInRowField(miscItemEntry,4)\" v-on:blur.native=\"focusOutRowField(miscItemEntry,4)\"></InputNumber></td>\r\n\t\t\t\t<td><input type=\"text\" v-model=\"miscItemEntry.e.unheldRemark\" v-on:focus=\"focusInRowField(miscItemEntry,8)\" v-on:blur=\"focusOutRowField(miscItemEntry,8)\"></input></td>\t\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\t\t\r\n\t\t\r\n\t\r\n\t<h4>Armor:</h4>\r\n\t<table border=\"1\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Armor Name</td>\r\n\t\t\t\t<td>AVC</td>\r\n\t\t\t\t<td>AVP</td>\r\n\t\t\t\t<td>AVB</td>\r\n\t\t\t\t<td>Coverage</td>\r\n\t\t\t\t<td class=\"weight\">Weight</td>\r\n\t\t\t\t<td class=\"tags\">Tags</td>\r\n\t\t\t\t<td class=\"actions\"><i>Actions</i></td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody :name=\"itemTransitionName\" is=\"transition-group\" v-on:mousedown.native=\"setCurWidgetSection('armor', $event)\"  v-on:touchstart.native=\"setCurWidgetSection('armor', $event)\">\r\n\t\t\t<tr v-for=\"(entry, i) in inventory.wornArmor\" :key=\"i\">\r\n\t\t\t\t<td><input-name :item=\"entry.armor\" v-on:updated=\"onInputNameUpdated\" /></td>\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"entry.armor\" prop=\"AVC\"></InputInt></td>\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"entry.armor\" prop=\"AVP\"></InputInt></td>\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"entry.armor\" prop=\"AVB\"></InputInt></td>\t\t\t\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"coverage\" widgetTagName=\"w-coverage\" :value=\"getCoverage(entry.armor)\" :index=\"i\" :showWidget=\"isVisibleWidget('armor','coverage', i)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"entry.armor\" prop=\"weight\"></InputNumber></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(entry.armor)\" :index=\"i\" :showWidget=\"isVisibleWidget('armor','tags', i)\" :entry=\"entry\" :requestCurWidget=\"requestCurWidget\" />\r\n\t\t\t\t\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"packWornArmor(entry)\">Pack</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropWornArmor(entry)\">Drop</a>\r\n\t\t\t\t\t<a href=\"javascript:;\" v-on:click=\"dropWornArmor(entry, true)\">Delete</a>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr class=\"entry-row\" :key=\"-1\">\r\n\t\t\t\t<td><input type=\"text\" v-model=\"armorEntry.e.armor.name\" v-on:focus=\"focusInRowField(armorEntry,1)\" v-on:blur=\"focusOutRowField(armorEntry,1)\"></input></td>\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"armorEntry.e.armor\" prop=\"AVC\" v-on:focus.native=\"focusInRowField(armorEntry,2)\" v-on:blur.native=\"focusOutRowField(armorEntry,2)\"></InputInt></td>\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"armorEntry.e.armor\" prop=\"AVP\" v-on:focus.native=\"focusInRowField(armorEntry,4)\" v-on:blur.native=\"focusOutRowField(armorEntry,4)\"></InputInt></td>\r\n\t\t\t\t<td><InputInt :min=\"0\" :obj=\"armorEntry.e.armor\" prop=\"AVB\" v-on:focus.native=\"focusInRowField(armorEntry,8)\" v-on:blur.native=\"focusOutRowField(armorEntry,8)\"></InputInt></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"coverage\" widgetTagName=\"w-coverage\" :value=\"getCoverage(armorEntry.e.armor)\" :index=\"-1\" :showWidget=\"(armorEntry.focusedFlags & (16|(1<<20))) !=0\" :entry=\"armorEntry.e.armor\" :requestCurWidget=\"requestCurWidget\"\r\n\t\t\t\t\tv-on:focus-in-row=\"focusInRowField(armorEntry, 16)\" v-on:focus-out-row=\"focusOutRowField(armorEntry, 16)\" v-on:focus-widget=\"focusInRowField(armorEntry, (1<<20))\" />\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<td><InputNumber :min=\"0\" :step=\"0.5\" :obj=\"armorEntry.e.armor\" prop=\"weight\" v-on:focus.native=\"focusInRowField(armorEntry,32)\" v-on:blur.native=\"focusOutRowField(armorEntry,32)\"></InputNumber></td>\r\n\t\t\t\t<td-widget v-on:focus-widget-value=\"focusWidgetValue\" widgetName=\"tags\" widgetTagName=\"w-tags\" :value=\"getTags(armorEntry.e.armor)\" :index=\"-1\" :showWidget=\"(armorEntry.focusedFlags & (64|(1<<21))) !=0\" :entry=\"armorEntry.e.armor\" :requestCurWidget=\"requestCurWidget\"\r\n\t\t\t\tv-on:focus-in-row=\"focusInRowField(armorEntry, 64)\" v-on:focus-out-row=\"focusOutRowField(armorEntry, 64)\" v-on:focus-widget=\"focusInRowField(armorEntry, (1<<21))\" />\r\n\t\t\t\t<td><input type=\"text\" readonly class=\"focusable\" v-on:focus=\"focusInRowField(armorEntry,64)\" v-on:blur=\"focusOutRowField(armorEntry,64)\"></input></td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\t\t\r\n\t\r\n\t\r\n\t<hr/>\r\n\t\t\r\n\t\t<div class=\"overall-armor-coverage\" v-if=\"showArmorCoverage\">\r\n\t\t\t<h4>Overall Armor Coverage:</h4>\t\r\n\t\t\t<div v-if=\"carriedShield!=null\">Held Shield: <b>{{carriedShield.name}}</b> <span class=\"shield-icon-inv\">☗</span></div>\r\n\t\t\t<div v-if=\"carriedShield!=null\">Size: <b>{{shieldSizeLabels[carriedShield.size]}}</b></div>\r\n\t\t\t<div><label>Prefered Shield Position:\r\n\t\t\t\t<select v-model.number=\"inventory.shieldPosition\" number>\r\n\t\t\t\t\t<option :value=\"0\">Low</option>\r\n\t\t\t\t\t<option :value=\"1\">High</option>\r\n\t\t\t\t</select>\t\r\n\t\t\t</label> <span v-show=\"carriedShield==null\"> (if held)</span></div>\r\n\t\t\t<div style=\"display:inline-block;vertical-align:top;\">\r\n\t\t\t\t<table border=\"1\" class=\"table-coverage\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t<td>AVC</td>\r\n\t\t\t\t\t\t\t<td>AVP<span v-show=\"calcArmorNonFirearmMissile\"> ↢</span></td>\r\n\t\t\t\t\t\t\t<td>AVB</td>\r\n\t\t\t\t\t\t\t<td v-if=\"carriedShield !=null\">sAV\t<span class=\"shield-icon-inv\">☗</span></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr v-for=\"(li, i) in coverageHitLocations\">\r\n\t\t\t\t\t\t\t<td><i>{{getHitLocationMaskNameOf(i)}}</i></td>\r\n\t\t\t\t\t\t\t<td>{{i+1}}. {{li.name}}</td>\r\n\t\t\t\t\t\t\t<td><input type=\"number\" readonly :value=\"hitLocationArmorValues[li.id].avc\" :disabled=\"isDisabledHitLocation(i)\" v-on:focus=\"calcAVColumnRowIndex(1, i)\" v-on:blur=\"focusOutAVColumnRowIndex(1,i)\"></input></td>\r\n\t\t\t\t\t\t\t<td><input type=\"number\" readonly :value=\"hitLocationArmorValues[li.id].avp\" :disabled=\"isDisabledHitLocation(i)\" v-on:focus=\"calcAVColumnRowIndex(2, i)\" v-on:blur=\"focusOutAVColumnRowIndex(2,i)\"></input></td>\r\n\t\t\t\t\t\t\t<td><input type=\"number\" readonly :value=\"hitLocationArmorValues[li.id].avb\" :disabled=\"isDisabledHitLocation(i)\" v-on:focus=\"calcAVColumnRowIndex(3, i)\" v-on:blur=\"focusOutAVColumnRowIndex(3,i)\"></input></td>\r\n\t\t\t\t\t\t\t<td v-if=\"carriedShield!=null\" v-show=\"shieldCoverage[li.id]!=null\" class=\"td-shield\" :class=\"{active:calcAVRowIndex==i && shieldAVHigherOrEqual }\">{{ shieldCoverage[li.id] ===false ? \"~\" : \"\"}}{{ carriedShield.AV }}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t\t<div style=\"display:inline-block;vertical-align:top;margin-left:8px;\">\r\n\t\t\t\t<div><i class=\"consider\">Consider against:</i></div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"calcArmorCrushing\"></input>Crushing attack</label></div>\r\n\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"calcArmorNonFirearmMissile\"></input>Non-Firearm Missile attack ↢</label></div>\r\n\t\t\t\t<div><label :class=\"{disabled:calcArmorNonFirearmMissile}\" :style=\"{'pointer-events':calcArmorNonFirearmMissile ? 'none': 'auto'}\"><input type=\"checkbox\" v-model=\"calcArmorMeleeTargeting\"></input> <span :class=\"{disabled:!shouldCalcMeleeAiming}\">Melee Targeting:</span> </label><select number :disabled=\"!shouldCalcMeleeAiming\" v-model.number=\"calcMeleeTargetingZoneIndex\">\r\n\t\t\t\t\t<option :value=\"i\" v-for=\"(li, i) in body.targetZones\">{{ body.getDescLabelTargetZone(i) }}</option>\r\n\t\t\t\t</select></div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div><i>Result: </i><b>{{ calcArmorResults.av + calcArmorResults.layer }} AV</b></div>\r\n\t\t\t\t<i class=\"cta\" v-show=\"calcAVColumn==0\">&lt;- Focus-click on table cells to inspect result.</i>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div v-show=\"calcAVColumn!=0\">\r\n\t\t\t\t\t<div><span class=\"outline-dominant\">AV Armor protecting: <b>{{ calcArmorResults.av }} AV</b></span></div>\r\n\t\t\t\t\t<ul v-show=\"hasArmorResultProtecting\">\r\n\t\t\t\t\t\t<li v-for=\"li in calcArmorResults.armorsProtectable\">{{ li.name }}</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<br v-show=\"!hasArmorResultProtecting\" />\r\n\t\t\t\t\t<div><span class=\"outline-layer\">Layer protecting: <b>+{{ calcArmorResults.layer }} AV</b></span></div>\r\n\t\t\t\t\t<ul v-show=\"hasArmorResultLayers\">\r\n\t\t\t\t\t\t<li v-for=\"li in calcArmorResults.armorsLayer\">{{ li.name }}</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<br v-show=\"!hasArmorResultLayers\" />\r\n\t\t\t\t\t<div v-show=\"calcArmorCrushing\">\r\n\t\t\t\t\t\t<div><span class=\"outline-crushed\">Crushable Hard Armor: <b><span v-show=\"!hasArmorCrushables\"> <i>none</i></span></b></span></div>\r\n\t\t\t\t\t\t<ul v-show=\"hasArmorCrushables\">\r\n\t\t\t\t\t\t\t<li v-for=\"li in calcArmorResults.armorsCrushable\">{{ li.name }}</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t<hr/>\r\n\t<div v-show=\"saveAvailable\"><button v-on:click=\"saveSheet()\">Save Inventory</button> <i>(also includes Dropped zone)</i></div>\r\n\t\r\n\t<div v-show=\"saveAvailable || loadAvailable\">\r\n\t\t<br/>\r\n\t\t<textarea class=\"savebox\" character-set=\"UTF-8\" v-model=\"copyToClipboard\" ref=\"savedTextArea\" :readonly=\"!loadAvailable\"></textarea><button v-on:click=\"executeCopyContents()\" ref=\"copyButton\">Copy</button><i class=\"copy-notify\" ref=\"copyNotify\" style=\"display:none\">copied!</i>\r\n\t</div>\r\n\t\t\t\t\r\n\t<div v-show=\"loadAvailable\"><button v-on:click=\"loadSheet()\">Load Inventory</button> <i>(also replaces Dropped zone)</i></div>\r\n\t\t\t\r\n\t\t\t\r\n\t<div class=\"focus-value-bar\"><input type=\"text\" :value=\"focusValueText\" readonly></input></div>\r\n</div>";
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,get_hasPopup: function() {
		var a = this.popupIndex >= 0;
		if(this.curWidgetRequest.type == "") {
			return a;
		} else {
			return true;
		}
	}
	,get_isValidDroppedEntry: function() {
		return this.droppedEntry.isValid();
	}
	,get_isValidPackedEntry: function() {
		return this.packedEntry.isValid();
	}
	,get_crossbowMask: function() {
		return 4;
	}
	,get_bowMask: function() {
		return 3;
	}
	,get_bowSlingAndCrossbowMask: function() {
		return 7;
	}
	,get_firearmMask: function() {
		return 8;
	}
	,get_throwMask: function() {
		return 18;
	}
	,get_droppedEntryGotFocus: function() {
		var hasPopup = this.hasPopup;
		if(this.droppedEntry.focusedFlags == 0) {
			return hasPopup;
		} else {
			return true;
		}
	}
	,get_packedEntryGotFocus: function() {
		var hasPopup = this.hasPopup;
		if(this.packedEntry.focusedFlags == 0) {
			return hasPopup;
		} else {
			return true;
		}
	}
	,get_miscEntryGotFocus: function() {
		var hasPopup = this.hasPopup;
		if(this.miscItemEntry.focusedFlags == 0) {
			return hasPopup;
		} else {
			return true;
		}
	}
	,get_weaponEntryGotFocus: function() {
		var hasPopup = this.hasPopup;
		if(this.weaponEntry.focusedFlags == 0) {
			return hasPopup;
		} else {
			return true;
		}
	}
	,get_shieldEntryGotFocus: function() {
		var hasPopup = this.hasPopup;
		if(this.shieldEntry.focusedFlags == 0) {
			return hasPopup;
		} else {
			return true;
		}
	}
	,get_armorEntryGotFocus: function() {
		var hasPopup = this.hasPopup;
		if(this.armorEntry.focusedFlags == 0) {
			return hasPopup;
		} else {
			return true;
		}
	}
	,get_carriedShield: function() {
		return this.inventory.findHeldShield();
	}
	,get_shieldSizeLabels: function() {
		var arr = [];
		arr.push("Small");
		arr.push("Medium");
		arr.push("Large");
		return arr;
	}
	,get_shieldCoverage: function() {
		var shield = this.carriedShield;
		var index = shield != null ? shield.size : 0;
		if(this.inventory.shieldPosition == 1) {
			return this.shieldHighProfiles[index];
		} else {
			return this.shieldLowProfiles[index];
		}
	}
	,get_totalCostMoney: function() {
		return this.inventory.calculateTotalCost(this.includeDroppedCost);
	}
	,get_totalCostGP: function() {
		return this.totalCostMoney.gp;
	}
	,get_totalCostSP: function() {
		return this.totalCostMoney.sp;
	}
	,get_totalCostCP: function() {
		return this.totalCostMoney.cp;
	}
	,executeCopyContents: function() {
		var textarea = this.$refs.savedTextArea;
		textarea.select();
		var result = window.document.execCommand("copy");
		if(result != null) {
			var htmlElem = this.$refs.copyNotify;
			htmlElem.style.display = "inline-block";
			haxe_Timer.delay(function() {
				htmlElem.style.display = "none";
			},3000);
		} else {
			js_Browser.alert("Sorry, failed to copy to clipboard!");
		}
	}
	,get_totalWeight: function() {
		if(this.injectWeight != null) {
			return this.injectWeight;
		} else {
			return this.inventory.calculateTotalWeight();
		}
	}
	,get_totalWeightLbl: function() {
		return parseFloat(this.totalWeight.toFixed(2));
	}
	,get_showTally: function() {
		return this.userShowTally;
	}
	,get_body: function() {
		if(this.bodyChar != null) {
			return this.bodyChar;
		} else {
			return troshx_sos_core_BodyChar.getInstance();
		}
	}
	,get_filteredMelee: function() {
		return this.inventory.getWeildableWeaponsTypeFiltered(false);
	}
	,get_filteredCrossbow: function() {
		return this.inventory.getWeildableWeaponsTypeFiltered(true,4);
	}
	,get_filteredFirearm: function() {
		return this.inventory.getWeildableWeaponsTypeFiltered(true,8);
	}
	,get_filteredBow: function() {
		return this.inventory.getWeildableWeaponsTypeFiltered(true,1);
	}
	,get_filteredThrowing: function() {
		return this.inventory.getWeildableWeaponsTypeFiltered(true,18);
	}
	,get_filteredAmmo: function() {
		return this.inventory.get_ammoFiltered();
	}
	,on_packedEntryGotFocus: function(newValue,oldValue) {
		if(!newValue) {
			this.executeQtyEntry(this.packedEntry,this.inventory.packed);
		}
	}
	,on_droppedEntryGotFocus: function(newValue,oldValue) {
		if(!newValue) {
			this.executeQtyEntry(this.droppedEntry,this.inventory.dropped);
		}
	}
	,on_shieldEntryGotFocus: function(newValue,oldValue) {
		if(!newValue) {
			this.executeEquipEntry(this.shieldEntry,"shield");
		}
	}
	,on_weaponEntryGotFocus: function(newValue,oldValue) {
		if(!newValue) {
			this.executeEquipEntry(this.weaponEntry,"weapon");
		}
	}
	,on_miscEntryGotFocus: function(newValue,oldValue) {
		if(!newValue) {
			this.executeEquipEntry(this.miscItemEntry,"item");
		}
	}
	,on_armorEntryGotFocus: function(newValue,oldValue) {
		if(!newValue) {
			this.executeEquipEntry(this.armorEntry,"armor");
		}
	}
	,_Init: function() {
		var cls = troshx_sos_vue_InventoryVue;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.components = this.Components();
		this.created = clsP.Created;
		this.template = this.Template();
		this.computed = { copperMaxToPieces : clsP.get_copperMaxToPieces, moneyLeft : clsP.get_moneyLeft, moneyLeftStr : clsP.get_moneyLeftStr, exceededCost : clsP.get_exceededCost, weightRemaining : clsP.get_weightRemaining, weightRemainingLbl : clsP.get_weightRemainingLbl, exceededWeight : clsP.get_exceededWeight, maxCostGP : clsP.get_maxCostGP, maxCostSP : clsP.get_maxCostSP, maxCostCP : clsP.get_maxCostCP, coverageHitLocations : clsP.get_coverageHitLocations, hitLocationZeroAVValues : clsP.get_hitLocationZeroAVValues, shouldCalcMeleeAiming : clsP.get_shouldCalcMeleeAiming, targetingZoneMask : clsP.get_targetingZoneMask, hasArmorResultProtecting : clsP.get_hasArmorResultProtecting, hasArmorResultLayers : clsP.get_hasArmorResultLayers, hasArmorCrushables : clsP.get_hasArmorCrushables, targetZoneHitAreaMasks : clsP.get_targetZoneHitAreaMasks, isYourInventory : clsP.get_isYourInventory, whoseInventoryPrefix : clsP.get_whoseInventoryPrefix, hitLocationArmorValues : clsP.get_hitLocationArmorValues, shieldAVHigherOrEqual : clsP.get_shieldAVHigherOrEqual, hasPopup : clsP.get_hasPopup, isValidDroppedEntry : clsP.get_isValidDroppedEntry, isValidPackedEntry : clsP.get_isValidPackedEntry, crossbowMask : clsP.get_crossbowMask, bowMask : clsP.get_bowMask, bowSlingAndCrossbowMask : clsP.get_bowSlingAndCrossbowMask, firearmMask : clsP.get_firearmMask, throwMask : clsP.get_throwMask, droppedEntryGotFocus : clsP.get_droppedEntryGotFocus, packedEntryGotFocus : clsP.get_packedEntryGotFocus, miscEntryGotFocus : clsP.get_miscEntryGotFocus, weaponEntryGotFocus : clsP.get_weaponEntryGotFocus, shieldEntryGotFocus : clsP.get_shieldEntryGotFocus, armorEntryGotFocus : clsP.get_armorEntryGotFocus, carriedShield : clsP.get_carriedShield, shieldSizeLabels : clsP.get_shieldSizeLabels, shieldCoverage : clsP.get_shieldCoverage, totalCostMoney : clsP.get_totalCostMoney, totalCostGP : clsP.get_totalCostGP, totalCostSP : clsP.get_totalCostSP, totalCostCP : clsP.get_totalCostCP, totalWeight : clsP.get_totalWeight, totalWeightLbl : clsP.get_totalWeightLbl, showTally : clsP.get_showTally, body : clsP.get_body, filteredMelee : clsP.get_filteredMelee, filteredCrossbow : clsP.get_filteredCrossbow, filteredFirearm : clsP.get_filteredFirearm, filteredBow : clsP.get_filteredBow, filteredThrowing : clsP.get_filteredThrowing, filteredAmmo : clsP.get_filteredAmmo};
		this.methods = { get_copperMaxToPieces : clsP.get_copperMaxToPieces, get_moneyLeft : clsP.get_moneyLeft, get_moneyLeftStr : clsP.get_moneyLeftStr, get_exceededCost : clsP.get_exceededCost, get_weightRemaining : clsP.get_weightRemaining, get_weightRemainingLbl : clsP.get_weightRemainingLbl, get_exceededWeight : clsP.get_exceededWeight, get_maxCostGP : clsP.get_maxCostGP, get_maxCostSP : clsP.get_maxCostSP, get_maxCostCP : clsP.get_maxCostCP, onInventorySignalReceived : clsP.onInventorySignalReceived, loadSheet : clsP.loadSheet, watch_inventory : clsP.watch_inventory, saveSheet : clsP.saveSheet, loadDropList : clsP.loadDropList, saveDropList : clsP.saveDropList, resetItemTransitionName : clsP.resetItemTransitionName, onBaseInventoryClick : clsP.onBaseInventoryClick, confirmOverwriteItem : clsP.confirmOverwriteItem, confirmQtyMultipleSend : clsP.confirmQtyMultipleSend, closeMultipleQtyItem : clsP.closeMultipleQtyItem, closeOverwriteModal : clsP.closeOverwriteModal, watch_itemToOverwriteWith : clsP.watch_itemToOverwriteWith, watch_itemQtyMultiple : clsP.watch_itemQtyMultiple, packItemEntryFromGround : clsP.packItemEntryFromGround, dropItemEntryFromPack : clsP.dropItemEntryFromPack, dropEquipedShield : clsP.dropEquipedShield, dropMiscItem : clsP.dropMiscItem, dropEquipedWeapon : clsP.dropEquipedWeapon, dropWornArmor : clsP.dropWornArmor, packEquipedShield : clsP.packEquipedShield, packMiscItem : clsP.packMiscItem, packEquipedWeapon : clsP.packEquipedWeapon, packWornArmor : clsP.packWornArmor, getSuperscriptNum : clsP.getSuperscriptNum, getCoverage : clsP.getCoverage, getTags : clsP.getTags, getDefGuard : clsP.getDefGuard, getSwingAtkStr : clsP.getSwingAtkStr, getThrustAtkStr : clsP.getThrustAtkStr, getMissileAtkStr : clsP.getMissileAtkStr, getAmmunitions : clsP.getAmmunitions, getSpanTools : clsP.getSpanTools, clearWidgets : clsP.clearWidgets, stopPropagation : clsP.stopPropagation, setCurWidgetSection : clsP.setCurWidgetSection, requestCurWidget : clsP.requestCurWidget, isVisibleWidget : clsP.isVisibleWidget, openPopup : clsP.openPopup, closePopup : clsP.closePopup, getValidName : clsP.getValidName, onInputNameUpdated : clsP.onInputNameUpdated, get_coverageHitLocations : clsP.get_coverageHitLocations, get_hitLocationZeroAVValues : clsP.get_hitLocationZeroAVValues, get_shouldCalcMeleeAiming : clsP.get_shouldCalcMeleeAiming, get_targetingZoneMask : clsP.get_targetingZoneMask, get_hasArmorResultProtecting : clsP.get_hasArmorResultProtecting, get_hasArmorResultLayers : clsP.get_hasArmorResultLayers, get_hasArmorCrushables : clsP.get_hasArmorCrushables, isDisabledHitLocation : clsP.isDisabledHitLocation, get_targetZoneHitAreaMasks : clsP.get_targetZoneHitAreaMasks, get_isYourInventory : clsP.get_isYourInventory, get_whoseInventoryPrefix : clsP.get_whoseInventoryPrefix, get_hitLocationArmorValues : clsP.get_hitLocationArmorValues, sortArmorLayers : clsP.sortArmorLayers, calcAVColumnRowIndex : clsP.calcAVColumnRowIndex, get_shieldAVHigherOrEqual : clsP.get_shieldAVHigherOrEqual, focusOutAVColumnRowIndex : clsP.focusOutAVColumnRowIndex, test : clsP.test, focusOutRowField : clsP.focusOutRowField, focusInRowField : clsP.focusInRowField, focusWidgetValue : clsP.focusWidgetValue, executeQtyEntry : clsP.executeQtyEntry, validateQtyName : clsP.validateQtyName, validateQtyNamePacked : clsP.validateQtyNamePacked, validateQtyNameDropped : clsP.validateQtyNameDropped, executeEquipEntry : clsP.executeEquipEntry, addAmmo : clsP.addAmmo, getHitLocationMaskNameOf : clsP.getHitLocationMaskNameOf, shiftIndex : clsP.shiftIndex, get_hasPopup : clsP.get_hasPopup, get_isValidDroppedEntry : clsP.get_isValidDroppedEntry, get_isValidPackedEntry : clsP.get_isValidPackedEntry, get_crossbowMask : clsP.get_crossbowMask, get_bowMask : clsP.get_bowMask, get_bowSlingAndCrossbowMask : clsP.get_bowSlingAndCrossbowMask, get_firearmMask : clsP.get_firearmMask, get_throwMask : clsP.get_throwMask, get_droppedEntryGotFocus : clsP.get_droppedEntryGotFocus, get_packedEntryGotFocus : clsP.get_packedEntryGotFocus, get_miscEntryGotFocus : clsP.get_miscEntryGotFocus, get_weaponEntryGotFocus : clsP.get_weaponEntryGotFocus, get_shieldEntryGotFocus : clsP.get_shieldEntryGotFocus, get_armorEntryGotFocus : clsP.get_armorEntryGotFocus, get_carriedShield : clsP.get_carriedShield, get_shieldSizeLabels : clsP.get_shieldSizeLabels, get_shieldCoverage : clsP.get_shieldCoverage, get_totalCostMoney : clsP.get_totalCostMoney, get_totalCostGP : clsP.get_totalCostGP, get_totalCostSP : clsP.get_totalCostSP, get_totalCostCP : clsP.get_totalCostCP, executeCopyContents : clsP.executeCopyContents, get_totalWeight : clsP.get_totalWeight, get_totalWeightLbl : clsP.get_totalWeightLbl, get_showTally : clsP.get_showTally, get_body : clsP.get_body, get_filteredMelee : clsP.get_filteredMelee, get_filteredCrossbow : clsP.get_filteredCrossbow, get_filteredFirearm : clsP.get_filteredFirearm, get_filteredBow : clsP.get_filteredBow, get_filteredThrowing : clsP.get_filteredThrowing, get_filteredAmmo : clsP.get_filteredAmmo, on_packedEntryGotFocus : clsP.on_packedEntryGotFocus, on_droppedEntryGotFocus : clsP.on_droppedEntryGotFocus, on_shieldEntryGotFocus : clsP.on_shieldEntryGotFocus, on_weaponEntryGotFocus : clsP.on_weaponEntryGotFocus, on_miscEntryGotFocus : clsP.on_miscEntryGotFocus, on_armorEntryGotFocus : clsP.on_armorEntryGotFocus};
		this.props = { injectWeight : { required : false, type : Number}, inventory : { required : true, type : Object}, maxWeight : { required : false, type : Number}, maxCostCopper : { required : false, type : Number}, includeDroppedCost : { required : false, "default" : false, type : Boolean}, includeOwnerSlash : { required : false, "default" : false, type : Boolean}, saveAvailable : { required : false, "default" : true, type : Boolean}, showArmorCoverage : { required : false, "default" : true, type : Boolean}, bodyChar : { required : false, type : Object}, loadAvailable : { required : false, "default" : true, type : Boolean}, inventoryLabel : { required : false, type : String}};
		this.watch = { inventory : clsP.watch_inventory, itemToOverwriteWith : clsP.watch_itemToOverwriteWith, itemQtyMultiple : clsP.watch_itemQtyMultiple, packedEntryGotFocus : clsP.on_packedEntryGotFocus, droppedEntryGotFocus : clsP.on_droppedEntryGotFocus, shieldEntryGotFocus : clsP.on_shieldEntryGotFocus, weaponEntryGotFocus : clsP.on_weaponEntryGotFocus, miscEntryGotFocus : clsP.on_miscEntryGotFocus, armorEntryGotFocus : clsP.on_armorEntryGotFocus};
	}
	,__class__: troshx_sos_vue_InventoryVue
});
var troshx_sos_vue_InventoryVueData = function() {
	this.calcArmorResults = { hitLocationIndex : 0, damageType : 0, layer : 0, av : 0, armorsProtectable : [], armorsLayer : [], armorsCrushable : []};
	this.calcAVRowIndex = 0;
	this.calcAVColumn = 0;
	this.calcMeleeTargetingZoneIndex = 0;
	this.calcArmorMeleeTargeting = false;
	this.calcArmorCrushing = false;
	this.calcArmorNonFirearmMissile = false;
	this.focusValueText = "";
	this.itemTransitionName = "fade";
	this.curWidgetRequest = { section : "", type : "", index : 0};
	this.damageTypeSuffixes = troshx_sos_core_DamageType.getFlagVarNames();
	this.shieldHighProfiles = troshx_sos_core_Shield.getHighCoverage();
	this.shieldLowProfiles = troshx_sos_core_Shield.getLowCoverage();
	this.popupIndex = -1;
	this.coreRangedProfs = troshx_sos_core_Profeciency.CORE_RANGED != null ? troshx_sos_core_Profeciency.CORE_RANGED : troshx_sos_core_Profeciency.CORE_RANGED = troshx_sos_core_Profeciency.getNewCoreRanged();
	this.coreMeleeProfs = troshx_sos_core_Profeciency.getCoreMelee();
	this.copyToClipboardDropList = "";
	this.copyToClipboard = "";
	this.armorEntry = new troshx_sos_vue_RowReadyEntry(troshx_sos_core_Inventory.getEmptyReadyAssign("armor"));
	this.userShowTally = true;
	this.miscItemEntry = new troshx_sos_vue_RowReadyEntry(troshx_sos_core_Inventory.getEmptyReadyAssign("item"));
	this.weaponEntry = new troshx_sos_vue_RowReadyEntry(troshx_sos_core_Inventory.getEmptyReadyAssign("weapon"));
	this.shieldEntry = new troshx_sos_vue_RowReadyEntry(troshx_sos_core_Inventory.getEmptyReadyAssign("shield"));
	this.privateData = { };
	this.itemQtyMultipleMax = 1;
	this.itemQtyMultiple = null;
	this.itemToOverwriteWithChecked = false;
	this.itemToOverwriteToPacked = false;
	this.itemToOverwriteWith = null;
	this.packedEntry = new troshx_sos_vue_RowEntry_$troshx_$sos_$core_$ItemQty();
	this.droppedEntry = new troshx_sos_vue_RowEntry_$troshx_$sos_$core_$ItemQty();
};
$hxClasses["troshx.sos.vue.InventoryVueData"] = troshx_sos_vue_InventoryVueData;
troshx_sos_vue_InventoryVueData.__name__ = ["troshx","sos","vue","InventoryVueData"];
troshx_sos_vue_InventoryVueData.prototype = {
	__class__: troshx_sos_vue_InventoryVueData
};
var troshx_sos_vue_IFocusFlags = function() { };
$hxClasses["troshx.sos.vue.IFocusFlags"] = troshx_sos_vue_IFocusFlags;
troshx_sos_vue_IFocusFlags.__name__ = ["troshx","sos","vue","IFocusFlags"];
troshx_sos_vue_IFocusFlags.prototype = {
	__class__: troshx_sos_vue_IFocusFlags
};
var troshx_sos_vue_RowReadyEntry = function(e) {
	this.focusedFlags = 0;
	this.reset(e);
};
$hxClasses["troshx.sos.vue.RowReadyEntry"] = troshx_sos_vue_RowReadyEntry;
troshx_sos_vue_RowReadyEntry.__name__ = ["troshx","sos","vue","RowReadyEntry"];
troshx_sos_vue_RowReadyEntry.__interfaces__ = [troshx_sos_vue_IFocusFlags,troshx_ds_IValidable];
troshx_sos_vue_RowReadyEntry.prototype = {
	reset: function(e) {
		this.itemToValidate = null;
		this.e = e;
	}
	,setupValidable: function() {
		if(Object.prototype.hasOwnProperty.call(this.e,"weapon")) {
			var obj = Reflect.field(this.e,"weapon");
			this.itemToValidate = js_Boot.__instanceof(obj,troshx_sos_core_Weapon) ? obj : null;
		} else if(Object.prototype.hasOwnProperty.call(this.e,"shield")) {
			var obj1 = Reflect.field(this.e,"shield");
			this.itemToValidate = js_Boot.__instanceof(obj1,troshx_sos_core_Shield) ? obj1 : null;
		} else if(Object.prototype.hasOwnProperty.call(this.e,"armor")) {
			var obj2 = Reflect.field(this.e,"armor");
			this.itemToValidate = js_Boot.__instanceof(obj2,troshx_sos_core_Armor) ? obj2 : null;
		} else if(Object.prototype.hasOwnProperty.call(this.e,"item")) {
			var obj3 = Reflect.field(this.e,"item");
			this.itemToValidate = js_Boot.__instanceof(obj3,troshx_sos_core_Item) ? obj3 : null;
		} else {
			throw new js__$Boot_HaxeError("Could not resolve RowReadyEntry reflect type!");
		}
		if(this.itemToValidate == null) {
			throw new js__$Boot_HaxeError("Could not resolve item to validate to Item type:" + Std.string(this.e));
		}
	}
	,getWeapon: function() {
		if(Object.prototype.hasOwnProperty.call(this.e,"weapon")) {
			var obj = Reflect.field(this.e,"weapon");
			if(js_Boot.__instanceof(obj,troshx_sos_core_Weapon)) {
				return obj;
			} else {
				return null;
			}
		}
		return null;
	}
	,isValid: function() {
		if(this.itemToValidate == null) {
			this.setupValidable();
		}
		if(this.itemToValidate.name != null) {
			return StringTools.trim(this.itemToValidate.name) != "";
		} else {
			return false;
		}
	}
	,__class__: troshx_sos_vue_RowReadyEntry
};
var troshx_sos_vue_RowEntry_$troshx_$sos_$core_$ItemQty = function() {
	this.focusedFlags = 0;
	this.e = new troshx_sos_core_ItemQty();
};
$hxClasses["troshx.sos.vue.RowEntry_troshx_sos_core_ItemQty"] = troshx_sos_vue_RowEntry_$troshx_$sos_$core_$ItemQty;
troshx_sos_vue_RowEntry_$troshx_$sos_$core_$ItemQty.__name__ = ["troshx","sos","vue","RowEntry_troshx_sos_core_ItemQty"];
troshx_sos_vue_RowEntry_$troshx_$sos_$core_$ItemQty.__interfaces__ = [troshx_sos_vue_IFocusFlags,troshx_ds_IValidable];
troshx_sos_vue_RowEntry_$troshx_$sos_$core_$ItemQty.prototype = {
	reset: function() {
		this.e = new troshx_sos_core_ItemQty();
	}
	,isValid: function() {
		return this.e.isValid();
	}
	,__class__: troshx_sos_vue_RowEntry_$troshx_$sos_$core_$ItemQty
};
var troshx_sos_vue_TDHands = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.TDHands"] = troshx_sos_vue_TDHands;
troshx_sos_vue_TDHands.__name__ = ["troshx","sos","vue","TDHands"];
troshx_sos_vue_TDHands.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_TDHands.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_isTwoHanded: function() {
		return (this.entry.weapon.flags & 1) != 0;
	}
	,onSelectChange: function(e,weapon) {
		var dyn = e.target;
		var htmlElem = dyn;
		var val = dyn.value;
		if(val == 1) {
			this.entry.weapon.flags |= 1;
		} else {
			this.entry.weapon.flags &= -2;
		}
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,emit: function(str) {
		this.$emit(str);
	}
	,Template: function() {
		return "<td>\r\n\t<select number :disabled=\"entry.held !=0\" v-on:focus=\"emit('focus-in-row')\" v-on:blur=\"emit('focus-out-row')\" v-on:change=\"onSelectChange($event, entry.weapon)\">\r\n\t\t<option value=\"0\" :selected=\"!isTwoHanded\">1H</option>\r\n\t\t<option value=\"1\" :selected=\"isTwoHanded\">2H</option>\r\n\t</select>\r\n</td>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_TDHands;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { isTwoHanded : clsP.get_isTwoHanded};
		this.methods = { get_isTwoHanded : clsP.get_isTwoHanded, onSelectChange : clsP.onSelectChange, shiftIndex : clsP.shiftIndex, emit : clsP.emit};
		this.props = { entry : { }};
	}
	,__class__: troshx_sos_vue_TDHands
});
var troshx_sos_vue_TDUnheld = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.TDUnheld"] = troshx_sos_vue_TDUnheld;
troshx_sos_vue_TDUnheld.__name__ = ["troshx","sos","vue","TDUnheld"];
troshx_sos_vue_TDUnheld.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_TDUnheld.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { unheldLabels : troshx_sos_core_Inventory.getUnheldLabelsArray()};
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,emit: function(str) {
		this.$emit(str);
	}
	,onFocus: function(input) {
		input.value = this.entry.unheldRemark;
		this.$emit("focus-in-row");
	}
	,setValidNameOfInput: function(inputElement) {
		var tarName = StringTools.trim(inputElement.value);
		this.entry.unheldRemark = tarName;
	}
	,get_unheld: function() {
		return this.entry.unheld;
	}
	,watch_unheld: function(newVal,oldVal) {
		this.$refs.inputText.value = this.unheldLabel;
	}
	,refresh: function() {
		this.$refs.inputText.value = this.unheldLabel;
	}
	,get_unheldLabel: function() {
		var pri = this.unheldLabels[this.entry.unheld];
		return pri + (pri != "" && this.entry.unheldRemark != "" ? ": " : "") + this.entry.unheldRemark;
	}
	,onBlur: function(input) {
		var tarName = StringTools.trim(input.value);
		this.entry.unheldRemark = tarName;
		input.value = this.unheldLabel;
	}
	,requestCurWidgetButton: function(type,index) {
		if(!this.showWidget) {
			this.requestCurWidget(type,index);
		} else {
			this.requestCurWidget("",0);
		}
	}
	,Template: function() {
		return "<td class=\"w-holder w-unheld gotbtn focus\" v-on:click.stop=\"\">\r\n\t<input ref=\"inputText\" type=\"text\" class=\"focusable\" v-on:focus=\"onFocus($event.target)\" v-on:blur=\"onBlur($event.target)\"></input>\r\n\t<button v-if=\"index>=0\" :class=\"{active:showWidget}\" v-on:click=\"requestCurWidgetButton('td-unheld',index)\">[|]</button>\r\n\t<div class=\"pop-widget\" v-show=\"showWidget\"  v-on:click.stop=\"\" v-on:touchstart.stop=\"emit('focus-widget')\" v-on:mousedown.stop=\"emit('focus-widget')\">\r\n\t\t<label>Slot:</label>\r\n\t\t<div>\r\n\t\t\t<select ref=\"selectDom\" number v-model.number=\"entry.unheld\" style=\"width:98%\">\r\n\t\t\t\t<option v-for=\"(li, i) in unheldLabels\" :value=\"i\">{{li}}</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t</div>\r\n</td>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_TDUnheld;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.template = this.Template();
		this.computed = { unheld : clsP.get_unheld, unheldLabel : clsP.get_unheldLabel};
		this.methods = { shiftIndex : clsP.shiftIndex, emit : clsP.emit, onFocus : clsP.onFocus, setValidNameOfInput : clsP.setValidNameOfInput, get_unheld : clsP.get_unheld, watch_unheld : clsP.watch_unheld, refresh : clsP.refresh, get_unheldLabel : clsP.get_unheldLabel, onBlur : clsP.onBlur, requestCurWidgetButton : clsP.requestCurWidgetButton};
		this.props = { requestCurWidget : { required : true, type : Function}, showWidget : { required : true, type : Boolean}, entry : { required : true}, index : { required : true, type : Number}};
		this.watch = { unheld : clsP.watch_unheld};
	}
	,__class__: troshx_sos_vue_TDUnheld
});
var troshx_sos_vue_TDWeapProfSelect = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.TDWeapProfSelect"] = troshx_sos_vue_TDWeapProfSelect;
troshx_sos_vue_TDWeapProfSelect.__name__ = ["troshx","sos","vue","TDWeapProfSelect"];
troshx_sos_vue_TDWeapProfSelect.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_TDWeapProfSelect.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		var _m_ = { };
		_m_["w-prof"] = new troshx_sos_vue_widgets_WProf();
		return _m_;
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,emit: function(str) {
		this.$emit(str);
	}
	,get_hasNoProf: function() {
		var _this = this.weapon;
		if(_this.profsCustom == null || _this.profsCustom.list.length == 0) {
			return _this.profs == 0;
		} else {
			return false;
		}
	}
	,get_weaponOptionValue: function() {
		if(this.weapon.ranged) {
			return -this.weapon.profs;
		} else {
			return this.weapon.profs;
		}
	}
	,watch_weaponOptionValue: function(newValue,oldValue) {
		var dom = this.$refs.selectDom;
		Vue.nextTick(function() {
			dom.value = "" + newValue;
		});
	}
	,get_gotCustomMultiCheck: function() {
		var weap = this.weapon;
		var a;
		if(weap.profs != 0) {
			var x = weap.profs;
			a = (x & x - 1) != 0;
		} else {
			a = false;
		}
		var b = weap.profsCustom != null && weap.profsCustom.list.length > 0;
		var c = weap.isAmmo && weap.ranged;
		if(!(a || b)) {
			return c;
		} else {
			return true;
		}
	}
	,get_showSelectMultipleFirst: function() {
		var a = this.gotCustomMultiCheck;
		var _this = this.weapon;
		var b = _this.isAmmo && _this.ranged;
		if(!a) {
			return b;
		} else {
			return true;
		}
	}
	,get_multiSelectedOptionLabel: function() {
		var weap = this.weapon;
		return (weap.isAmmo && weap.ranged ? "^" : "") + weap.profLabels();
	}
	,get_isSelectingMultiple: function() {
		return this.isVisibleWidget(this.section,"profs",this.index);
	}
	,get_gotCustom: function() {
		if(this.customProfs != null) {
			return this.customProfs.length > 0;
		} else {
			return false;
		}
	}
	,Mounted: function() {
		if(this.weapon.profs == 0) {
			this.weapon.profs = !this.weapon.ranged ? 1 : 1;
		}
	}
	,onProfSelectChange: function(e,weapon) {
		var dyn = e.target;
		var htmlElem = dyn;
		var val = Std.parseInt(htmlElem.value);
		if(val == 0) {
			var index = Std.parseInt(htmlElem.getAttribute("data-index"));
			var type = htmlElem.getAttribute("data-type");
			this.curWidgetRequest.type = type;
			this.curWidgetRequest.index = index;
		} else {
			var ranged = false;
			if(val < 0) {
				ranged = true;
				val = -val;
			}
			weapon.ranged = ranged;
			weapon.profs = val;
			if(weapon.ranged) {
				if((weapon.profs & 4) != 0) {
					if(weapon.crossbow == null) {
						weapon.crossbow = new troshx_sos_core_Crossbow();
					}
				}
				if((weapon.profs & 8) != 0) {
					if(weapon.firearm == null) {
						weapon.firearm = new troshx_sos_core_Firearm();
					}
				}
				weapon.isAmmo = false;
			} else {
				weapon.isAmmo = false;
			}
			this.curWidgetRequest.type = "";
			this.curWidgetRequest.index = 0;
		}
	}
	,requestCurWidget: function(type,index) {
		this.curWidgetRequest.type = type;
		this.curWidgetRequest.index = index;
	}
	,Template: function() {
		return "<td v-on:click.stop=\"\" class=\"w-holder w-prof\" :class=\"{'got-custom':gotCustom}\">\r\n\t<select ref=\"selectDom\" :value=\"get_weaponOptionValue()\" number data-type=\"profs\" :data-index=\"index\" v-on:focus=\"emit('focus-in-row')\" v-on:blur=\"emit('focus-out-row')\" v-on:change=\"onProfSelectChange($event, weapon)\">\r\n\t\t<option v-if=\"showSelectMultipleFirst\" :selected=\"false\" style=\"color:grey;\" value=\"0\" :key=\"-999\">select multiple...</option>\r\n\t\t<option selected v-if=\"gotCustomMultiCheck\" :value=\"get_weaponOptionValue()\">\r\n\t\t\t{{ multiSelectedOptionLabel }}\r\n\t\t</option>\r\n\t\t<option :selected=\"!gotCustomMultiCheck && !weapon.ranged && weapon.profs&(1 << i) && !isSelectingMultiple\" v-for=\"(p, i) in meleeProfs\" :value=\"(1 << i)\">{{weapon.ranged || (profMask!=null && profMask == -1) || weapon.isAmmo ? \"&gt;\" : \"\"}}{{p.name}}</option>\r\n\t\t<option :selected=\"!gotCustomMultiCheck && weapon.ranged && weapon.profs&(1 << i) && !isSelectingMultiple\" v-for=\"(p, i) in rangedProfs\" :value=\"-1*(1 << i)\"> {{(profMask != null ? (profMask&shiftIndex(i))==0 || profMask == -1 : true) || !weapon.ranged || weapon.isAmmo ? \"&gt;\" : \"\"}}{{ p.name }}</option>\r\n\t\t<option :key=\"-999\" :selected=\"false\"  v-if=\"!showSelectMultipleFirst\" style=\"color:grey;\" value=\"0\" >select multiple...</option>\r\n\t</select>\t\r\n\t<div class=\"pop-widget\"  v-on:click.stop=\"\" v-on:mousedown=\"emit('focus-widget')\" v-on:touchstart.stop=\"\"  v-if=\"isVisibleWidget(section,'profs', index)\">\r\n\t\t<w-prof :entry=\"entry\" :customWidth=\"gotCustom\" :customProfs=\"this.customProfs\" :curWidgetRequest=\"curWidgetRequest\" :item=\"weapon\" :meleeProfs=\"meleeProfs\" :rangedProfs=\"rangedProfs\" />\r\n\t</div>\r\n</td>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_TDWeapProfSelect;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.mounted = clsP.Mounted;
		this.template = this.Template();
		this.computed = { hasNoProf : clsP.get_hasNoProf, weaponOptionValue : clsP.get_weaponOptionValue, gotCustomMultiCheck : clsP.get_gotCustomMultiCheck, showSelectMultipleFirst : clsP.get_showSelectMultipleFirst, multiSelectedOptionLabel : clsP.get_multiSelectedOptionLabel, isSelectingMultiple : clsP.get_isSelectingMultiple, gotCustom : clsP.get_gotCustom};
		this.methods = { shiftIndex : clsP.shiftIndex, emit : clsP.emit, get_hasNoProf : clsP.get_hasNoProf, get_weaponOptionValue : clsP.get_weaponOptionValue, watch_weaponOptionValue : clsP.watch_weaponOptionValue, get_gotCustomMultiCheck : clsP.get_gotCustomMultiCheck, get_showSelectMultipleFirst : clsP.get_showSelectMultipleFirst, get_multiSelectedOptionLabel : clsP.get_multiSelectedOptionLabel, get_isSelectingMultiple : clsP.get_isSelectingMultiple, get_gotCustom : clsP.get_gotCustom, onProfSelectChange : clsP.onProfSelectChange, requestCurWidget : clsP.requestCurWidget};
		this.props = { rangedProfs : { type : Array}, profMask : { required : false, "default" : 0, type : Number}, curWidgetRequest : { }, meleeProfs : { type : Array}, entry : { }, customProfs : { required : false, type : Array}, section : { type : String}, index : { type : Number}, isVisibleWidget : { type : Function}, weapon : { type : Object}};
		this.watch = { weaponOptionValue : clsP.watch_weaponOptionValue};
	}
	,__class__: troshx_sos_vue_TDWeapProfSelect
});
var troshx_sos_vue_TDWidgetHolder = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.TDWidgetHolder"] = troshx_sos_vue_TDWidgetHolder;
troshx_sos_vue_TDWidgetHolder.__name__ = ["troshx","sos","vue","TDWidgetHolder"];
troshx_sos_vue_TDWidgetHolder.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_TDWidgetHolder.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_itemLabel: function() {
		var obj = this.entry.item;
		return (js_Boot.__instanceof(obj,troshx_sos_core_Item) ? obj : null).get_label();
	}
	,Components: function() {
		var _m_ = { };
		_m_["w-firearm-name"] = new troshx_sos_vue_widgets_WFirearmName();
		_m_["w-ammunition"] = new troshx_sos_vue_widgets_WAmmunition();
		_m_["w-coverage"] = new troshx_sos_vue_widgets_WCoverage();
		_m_["w-melee-atk"] = new troshx_sos_vue_widgets_WMeleeAtk();
		_m_["w-melee-def"] = new troshx_sos_vue_widgets_WMeleeDef();
		_m_["w-missile-atk"] = new troshx_sos_vue_widgets_WMissileAtk();
		_m_["w-prof"] = new troshx_sos_vue_widgets_WProf();
		_m_["w-span-tools"] = new troshx_sos_vue_widgets_WSpanTools();
		_m_["w-tags"] = new troshx_sos_vue_widgets_WTags();
		return _m_;
	}
	,focusInputText: function() {
		this.$emit("focus-in-row");
		this.$emit("focus-widget-value",this.value);
	}
	,watch_value: function(newValue) {
		this.$emit("focus-widget-value",this.value);
	}
	,get_item: function() {
		if(this.entry.weapon != null) {
			return this.entry.weapon;
		} else if(this.entry.shield != null) {
			return this.entry.shield;
		} else if(this.entry.armor != null) {
			return this.entry.armor;
		} else if(js_Boot.__instanceof(this.entry,troshx_sos_core_Shield)) {
			return this.entry;
		} else if(js_Boot.__instanceof(this.entry,troshx_sos_core_Armor)) {
			return this.entry;
		} else {
			if(this.entry.item == null) {
				console.log(this.entry);
				throw new js__$Boot_HaxeError("Couldn't resolve item dependency! Check console trace above!");
			}
			return this.entry.item;
		}
	}
	,requestCurWidgetButton: function(type,index) {
		if(!this.showWidget) {
			this.requestCurWidget(type,index);
		} else {
			this.requestCurWidget("",0);
		}
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,emit: function(str) {
		this.$emit(str);
	}
	,Template: function() {
		return "<td class=\"w-holder\" v-on:click.stop=\"\" :class=\"[{gotbtn:index>=0, focus:index>=0},widgetTagName]\">\r\n\t<input type=\"text\" :class=\"{focusable:index<0}\" readonly :value=\"value\" v-on:focus=\"focusInputText\" v-on:blur=\"emit('focus-out-row')\"></input>\r\n\t<button v-if=\"index>=0\" :class=\"{active:showWidget}\" v-on:click=\"requestCurWidgetButton(widgetName,index)\">[|]</button>\r\n\t<div class=\"pop-widget\" v-if=\"showWidget\"  v-on:click.stop=\"\" v-on:touchstart.stop=\"emit('focus-widget')\" v-on:mousedown.stop=\"emit('focus-widget')\">\r\n\t\t<div :is=\"widgetTagName\" :entry=\"entry\" :item=\"item\"  :entryIndex=\"index\" v-bind=\"widgetProps\" :parentAttr=\"$attrs\">\r\n\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n</td>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_TDWidgetHolder;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.template = this.Template();
		this.computed = { itemLabel : clsP.get_itemLabel, item : clsP.get_item};
		this.methods = { get_itemLabel : clsP.get_itemLabel, focusInputText : clsP.focusInputText, watch_value : clsP.watch_value, get_item : clsP.get_item, requestCurWidgetButton : clsP.requestCurWidgetButton, shiftIndex : clsP.shiftIndex, emit : clsP.emit};
		this.props = { requestCurWidget : { type : Function}, value : { }, widgetName : { type : String}, showWidget : { type : Boolean}, widgetTagName : { type : String}, entry : { }, index : { type : Number}, widgetProps : { required : false}};
		this.watch = { value : clsP.watch_value};
	}
	,__class__: troshx_sos_vue_TDWidgetHolder
});
var troshx_sos_vue_input_InputInt = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_uifields_BaseNumMixin.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.input.InputInt"] = troshx_sos_vue_input_InputInt;
troshx_sos_vue_input_InputInt.__name__ = ["troshx","sos","vue","input","InputInt"];
troshx_sos_vue_input_InputInt.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_input_InputInt.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<input type=\"number\" :disabled=\"disabled\" number v-on:blur=\"blurHandler($" + "event.target)\" v-on:input=\"inputHandler($" + "event.target)\" :value=\"obj[prop]\" :min=\"min\" :max=\"max\" :step=\"1\" :readonly=\"readonly\"></input>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_input_InputInt;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.props = { prop : { required : true}, obj : { required : true}, min : { required : false, type : Number}, disabled : { required : false, "default" : false, type : Boolean}, max : { required : false, type : Number}, floating : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_input_InputInt
});
var troshx_sos_vue_input_InputNumber = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_uifields_BaseNumMixin.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.input.InputNumber"] = troshx_sos_vue_input_InputNumber;
troshx_sos_vue_input_InputNumber.__name__ = ["troshx","sos","vue","input","InputNumber"];
troshx_sos_vue_input_InputNumber.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_input_InputNumber.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<input type=\"number\" :disabled=\"disabled\" number v-on:blur=\"blurHandler($" + "event.target)\" v-on:input=\"inputHandler($" + "event.target)\" :value=\"obj[prop]\" :min=\"min\" :max=\"max\" :step=\"step\" :readonly=\"readonly\"></input>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_input_InputNumber;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.props = { prop : { required : true}, obj : { required : true}, min : { required : false, type : Number}, disabled : { required : false, "default" : false, type : Boolean}, max : { required : false, type : Number}, step : { required : false, type : Number}, floating : { required : false, "default" : true, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_input_InputNumber
});
var troshx_sos_vue_input_InputString = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.input.InputString"] = troshx_sos_vue_input_InputString;
troshx_sos_vue_input_InputString.__name__ = ["troshx","sos","vue","input","InputString"];
troshx_sos_vue_input_InputString.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_input_InputString.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<input type=\"text\" :disabled=\"disabled\"  :readonly=\"readonly\" v-model=\"obj[prop]\"></input>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_input_InputString;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.props = { prop : { required : true}, obj : { required : true}, disabled : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_input_InputString
});
var troshx_sos_vue_input_MixinInput = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.input.MixinInput"] = troshx_sos_vue_input_MixinInput;
troshx_sos_vue_input_MixinInput.__name__ = ["troshx","sos","vue","input","MixinInput"];
troshx_sos_vue_input_MixinInput.getInstance = function() {
	if(troshx_sos_vue_input_MixinInput.INSTANCE != null) {
		return troshx_sos_vue_input_MixinInput.INSTANCE;
	} else {
		return troshx_sos_vue_input_MixinInput.INSTANCE = new troshx_sos_vue_input_MixinInput();
	}
};
troshx_sos_vue_input_MixinInput.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_input_MixinInput.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		var _m_ = { };
		_m_["InputInt"] = new troshx_sos_vue_input_InputInt();
		_m_["InputNumber"] = new troshx_sos_vue_input_InputNumber();
		_m_["InputString"] = new troshx_sos_vue_input_InputString();
		return _m_;
	}
	,_Init: function() {
		var cls = troshx_sos_vue_input_MixinInput;
		var clsP = cls.prototype;
		this.components = this.Components();
	}
	,__class__: troshx_sos_vue_input_MixinInput
});
var troshx_sos_vue_inputs_NumericInput = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.inputs.NumericInput"] = troshx_sos_vue_inputs_NumericInput;
troshx_sos_vue_inputs_NumericInput.__name__ = ["troshx","sos","vue","inputs","NumericInput"];
troshx_sos_vue_inputs_NumericInput.getSampleInstance = function() {
	if(troshx_sos_vue_inputs_NumericInput.INSTANCE != null) {
		return troshx_sos_vue_inputs_NumericInput.INSTANCE;
	} else {
		return troshx_sos_vue_inputs_NumericInput.INSTANCE = new troshx_sos_vue_inputs_NumericInput();
	}
};
troshx_sos_vue_inputs_NumericInput.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_inputs_NumericInput.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_min: function() {
		return 0;
	}
	,get_max: function() {
		return 999999999;
	}
	,get_valid: function() {
		return true;
	}
	,Template: function() {
		return troshx_sos_vue_inputs_NumericInput.TEMPLATE;
	}
	,Mounted: function() {
		this.checkConstraints();
	}
	,checkConstraints: function() {
		var theCurrent = this.current;
		var currentVal = theCurrent;
		var min = this.min;
		var max = this.max;
		if(min != null && currentVal < min) {
			currentVal = min;
		}
		if(max != null && currentVal > max) {
			currentVal = max;
		}
		if(currentVal != theCurrent) {
			this.obj[this.prop] = currentVal;
		}
	}
	,watch_min: function(newVal) {
		this.checkConstraints();
	}
	,watch_max: function(newVal) {
		this.checkConstraints();
	}
	,blurHandler: function(input) {
		if(input.value == "") {
			input.valueAsNumber = this.obj[this.prop];
		}
	}
	,inputHandler: function(input) {
		if(input.value == "") {
			return;
		}
		var max = this.max;
		var min = this.min;
		var result = this.floating ? input.valueAsNumber : input.valueAsNumber | 0;
		if(result == null || isNaN(result)) {
			input.valueAsNumber = this.obj[this.prop];
			return;
		}
		if(result != input.valueAsNumber) {
			input.valueAsNumber = result;
		}
		if(result > max) {
			result = max;
			input.valueAsNumber = result;
		}
		if(result < min) {
			result = min;
			input.valueAsNumber = result;
		}
		this.obj[this.prop] = result;
	}
	,get_current: function() {
		return this.obj[this.prop];
	}
	,_Init: function() {
		var cls = troshx_sos_vue_inputs_NumericInput;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.mounted = clsP.Mounted;
		this.computed = { min : clsP.get_min, max : clsP.get_max, valid : clsP.get_valid, current : clsP.get_current};
		this.methods = { get_min : clsP.get_min, get_max : clsP.get_max, get_valid : clsP.get_valid, checkConstraints : clsP.checkConstraints, watch_min : clsP.watch_min, watch_max : clsP.watch_max, blurHandler : clsP.blurHandler, inputHandler : clsP.inputHandler, get_current : clsP.get_current};
		this.props = { prop : { required : true, type : String}, obj : { required : true}, disabled : { required : false, "default" : false, type : Boolean}, floating : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
		this.watch = { min : clsP.watch_min, max : clsP.watch_max};
	}
	,__class__: troshx_sos_vue_inputs_NumericInput
});
var troshx_sos_vue_inputs_impl_AttributeInput = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_inputs_NumericInput.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.inputs.impl.AttributeInput"] = troshx_sos_vue_inputs_impl_AttributeInput;
troshx_sos_vue_inputs_impl_AttributeInput.__name__ = ["troshx","sos","vue","inputs","impl","AttributeInput"];
troshx_sos_vue_inputs_impl_AttributeInput.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_inputs_impl_AttributeInput.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_bareMinAttribute: function() {
		if(!this.magic) {
			return 1;
		} else {
			return 0;
		}
	}
	,get_current: function() {
		return this.obj[this.prop];
	}
	,get_valid: function() {
		return this.current + this.racialModifier >= this.bareMinAttribute;
	}
	,get_min: function() {
		if(this.magic) {
			return 0;
		} else {
			return 1;
		}
	}
	,get_max: function() {
		var remainingAttribPoints = this.remainingAttributePoints;
		var upTo = this.current + remainingAttribPoints;
		var r = Math.min(this.current + (remainingAttribPoints - (upTo > 10 ? upTo - 10 : 0)),8) | 0;
		var b = this.min;
		if(r >= b) {
			return r;
		} else {
			return b;
		}
	}
	,_Init: function() {
		var cls = troshx_sos_vue_inputs_impl_AttributeInput;
		var clsP = cls.prototype;
		this.computed = { bareMinAttribute : clsP.get_bareMinAttribute, current : clsP.get_current, valid : clsP.get_valid, min : clsP.get_min, max : clsP.get_max};
		this.methods = { get_bareMinAttribute : clsP.get_bareMinAttribute, get_current : clsP.get_current, get_valid : clsP.get_valid, get_min : clsP.get_min, get_max : clsP.get_max};
		this.props = { prop : { required : true, type : String}, obj : { required : true}, disabled : { required : false, "default" : false, type : Boolean}, magic : { required : false, "default" : false, type : Boolean}, racialModifier : { required : false, "default" : 0, type : Number}, remainingAttributePoints : { required : true, type : Number}, floating : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_inputs_impl_AttributeInput
});
var troshx_sos_vue_inputs_impl_BoonBaneInput = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_inputs_NumericInput.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.inputs.impl.BoonBaneInput"] = troshx_sos_vue_inputs_impl_BoonBaneInput;
troshx_sos_vue_inputs_impl_BoonBaneInput.__name__ = ["troshx","sos","vue","inputs","impl","BoonBaneInput"];
troshx_sos_vue_inputs_impl_BoonBaneInput.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_inputs_impl_BoonBaneInput.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<span class=\"gen-comp-bb\" :class=\"{canceled:obj._canceled, 'required':min>0, 'force-perm':obj._forcePermanent, disabled:max<1||disabled, selected:obj[prop]>0}\" :style=\"{pointerEvents:(readonly ? 'none' : 'auto')}\">\r\n\t\t<label><input type=\"checkbox\" :disabled=\"obj._canceled || cannotUncheck\" v-if=\"coreMax<2\" :checked=\"obj[prop]>=1\" v-on:click.stop=\"checkboxHandler($" + "event.target, $" + "event)\"></input><input type=\"number\" :disabled=\"obj._canceled\" v-if=\"coreMax>=2\" number v-on:input=\"inputHandler($" + "event.target)\" v-on:blur=\"blurHandler($" + "event.target)\" :value=\"obj[prop]\" :class=\"{invalid:!valid}\" :min=\"min\" :max=\"max\"></input><span v-html=\"label\" v-on:click=\"toggleIfPossible($" + "event)\"></span><span class=\"close-btn\" v-show=\"showClose\">&nbsp;<a href=\"#\" v-on:click.stop.prevent=\"closeBB()\">[x]</a></span><span style=\"opacity:1;pointer-events:auto;\" v-show=\"showReset && !(isBane && cannotUncheck)\" class=\"reset-btb\">[<a href=\"#\" v-on:click.stop.prevent=\"resetBB()\">c</a>]</span></label>\r\n\t\t</span>";
	}
	,get_cannotUncheck: function() {
		if(this.bba._minRequired >= 1) {
			return this.obj[this.prop] >= 1;
		} else {
			return false;
		}
	}
	,get_canceled: function() {
		return this.bba._canceled;
	}
	,watch_canceled: function(newValue,oldValue) {
		this.$emit("updateCanceledBB",this.bba,this.isBane,newValue,oldValue);
	}
	,get_showReset: function() {
		var costArr = this.bb.costs;
		var cc = this.cost;
		if(cc == null) {
			cc = costArr[0];
		}
		if(cc < costArr[0]) {
			cc = costArr[0];
		} else {
			cc = cc;
		}
		var rank = this.bba.rank;
		return cc != costArr[rank > 1 ? rank - 1 : 0];
	}
	,resetBB: function() {
		this.$emit("resetBB",this.bba,this.isBane);
	}
	,get_discount: function() {
		if(this.isBane) {
			return 0;
		} else {
			return this.bba.discount;
		}
	}
	,get_min: function() {
		if(this.bba._minRequired != 0) {
			return this.bba._minRequired;
		} else {
			return 0;
		}
	}
	,get_max: function() {
		var cm = this.coreMax;
		if(this.remaining != null) {
			var bba = this.bba;
			var re = this.remaining + (this.current > 0 ? bba._costCached : 0);
			var b = 0;
			var lowestCost = this.bb.costs[0];
			var _g1 = 0;
			var _g = cm;
			while(_g1 < _g) {
				var i = _g1++;
				var c = bba.getCost(i + 1);
				if(c < lowestCost) {
					c = lowestCost;
				} else {
					c = c;
				}
				if(re < c) {
					break;
				}
				b = i + 1;
			}
			return b;
		}
		return cm;
	}
	,get_coreMax: function() {
		if(this.bb.clampRank) {
			return 1;
		} else {
			return this.bb.costs.length;
		}
	}
	,get_current: function() {
		return this.obj[this.prop];
	}
	,toggleIfPossible: function(e) {
		var bba = this.bba;
		if(this.gotDiscount) {
			return;
		}
		var cur = this.obj[this.prop];
		if(bba._canceled) {
			bba._canceled = false;
			if(cur == 0) {
				this.obj[this.prop] = 1;
				e.stopPropagation();
				e.preventDefault();
			} else {
				this.$emit("uncancel",bba,this.isBane);
			}
			return;
		}
		if(cur == 0) {
			this.obj[this.prop] = 1;
			e.stopPropagation();
			e.preventDefault();
		}
	}
	,closeBB: function() {
		this.obj[this.prop] = 0;
	}
	,get_showClose: function() {
		if(this.obj[this.prop] >= 1) {
			return this.coreMax >= 2;
		} else {
			return false;
		}
	}
	,checkboxHandler: function(htmlInput,event) {
		var bba = this.bba;
		if(this.gotDiscount) {
			event.preventDefault();
			return;
		}
		this.obj[this.prop] = htmlInput.checked ? 1 : 0;
	}
	,watch_current: function(newValue,oldValue) {
		this.$emit("updateRankBB",this.bba,this.isBane,newValue,oldValue);
		if(oldValue > 0) {
			if(newValue <= 0) {
				this.$emit("removeBB",this.bba,this.isBane);
				return;
			}
		} else if(newValue > 0) {
			this.$emit("addBB",this.bba,this.isBane);
			return;
		}
	}
	,get_cost: function() {
		return this.bba.getCost(this.bba.rank);
	}
	,get_qty: function() {
		return this.bba.getQty();
	}
	,get_gotDiscount: function() {
		return this.bba.discount > 0;
	}
	,watch_cost: function(newValue) {
		var bba = this.bba;
		var rank = bba.rank;
		bba._costCached = newValue;
	}
	,get_label: function() {
		var bber = this.bb;
		var bba = this.bba;
		var customCostInnerSlashes = bber.customCostInnerSlashes;
		var qty = this.qty;
		var closeBracket = ")";
		var openBracket = "(";
		if(bber.multipleTimes != 1 && bber.multipleTimes != 0) {
			closeBracket = "]";
			openBracket = "[";
		}
		var joinStr = bber.multipleTimes != -2 ? "/" : "|";
		var costArr = bber.costs;
		var rankCost = bba.rank < 2 ? costArr[0] : costArr[bba.rank - 1];
		var costJoin = "" + (bba.rank == 1 ? "<b>" + costArr[0] + "</b>" : "" + costArr[0]);
		var max = this.max;
		var _g1 = 1;
		var _g = costArr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var joinChar = customCostInnerSlashes != null ? customCostInnerSlashes.charAt(i - 1) : joinStr;
			costJoin += (i == max ? "<span class=\"limit-join\">" + joinChar + "</span>" : joinChar) + (bba.rank == i + 1 ? "<b>" + costArr[i] + "</b>" : "" + costArr[i]);
		}
		var costDisp = openBracket + costJoin + closeBracket;
		var cc = this.cost;
		if(cc != 0) {
			cc = cc;
		} else {
			cc = costArr[0];
		}
		return this.bb.name + " " + costDisp + (qty > 1 ? "~" + qty + "~" : "") + (cc != rankCost ? "=<b>" + cc + "</b>" : "") + (this.gotDiscount ? "-" + bba.discount : "");
	}
	,get_bba: function() {
		return this.obj;
	}
	,get_isBane: function() {
		return js_Boot.__instanceof(this.obj,troshx_sos_core_BaneAssign);
	}
	,get_bb: function() {
		return this.bba.getBoonOrBane();
	}
	,_Init: function() {
		var cls = troshx_sos_vue_inputs_impl_BoonBaneInput;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { cannotUncheck : clsP.get_cannotUncheck, canceled : clsP.get_canceled, showReset : clsP.get_showReset, discount : clsP.get_discount, min : clsP.get_min, max : clsP.get_max, coreMax : clsP.get_coreMax, current : clsP.get_current, showClose : clsP.get_showClose, cost : clsP.get_cost, qty : clsP.get_qty, gotDiscount : clsP.get_gotDiscount, label : clsP.get_label, bba : clsP.get_bba, isBane : clsP.get_isBane, bb : clsP.get_bb};
		this.methods = { get_cannotUncheck : clsP.get_cannotUncheck, get_canceled : clsP.get_canceled, watch_canceled : clsP.watch_canceled, get_showReset : clsP.get_showReset, resetBB : clsP.resetBB, get_discount : clsP.get_discount, get_min : clsP.get_min, get_max : clsP.get_max, get_coreMax : clsP.get_coreMax, get_current : clsP.get_current, toggleIfPossible : clsP.toggleIfPossible, closeBB : clsP.closeBB, get_showClose : clsP.get_showClose, checkboxHandler : clsP.checkboxHandler, watch_current : clsP.watch_current, get_cost : clsP.get_cost, get_qty : clsP.get_qty, get_gotDiscount : clsP.get_gotDiscount, watch_cost : clsP.watch_cost, get_label : clsP.get_label, get_bba : clsP.get_bba, get_isBane : clsP.get_isBane, get_bb : clsP.get_bb};
		this.props = { prop : { required : true, type : String}, obj : { required : true}, remaining : { type : Number}, disabled : { required : false, "default" : false, type : Boolean}, floating : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
		this.watch = { canceled : clsP.watch_canceled, current : clsP.watch_current, cost : clsP.watch_cost};
	}
	,__class__: troshx_sos_vue_inputs_impl_BoonBaneInput
});
var troshx_sos_vue_inputs_impl_CategoryPCPInput = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_inputs_NumericInput.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.inputs.impl.CategoryPCPInput"] = troshx_sos_vue_inputs_impl_CategoryPCPInput;
troshx_sos_vue_inputs_impl_CategoryPCPInput.__name__ = ["troshx","sos","vue","inputs","impl","CategoryPCPInput"];
troshx_sos_vue_inputs_impl_CategoryPCPInput.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_inputs_impl_CategoryPCPInput.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_current: function() {
		return this.obj[this.prop];
	}
	,get_valid: function() {
		if(this.current >= this.min) {
			return this.max <= this.maxPCPPerCategory;
		} else {
			return false;
		}
	}
	,get_min: function() {
		if(this.magic) {
			return 0;
		} else {
			return 1;
		}
	}
	,get_max: function() {
		var r = Math.min(this.current + this.remainingAssignable,this.maxPCPPerCategory) | 0;
		var m = this.magic ? 0 : 1;
		if(r >= m) {
			return r;
		} else {
			return m;
		}
	}
	,_Init: function() {
		var cls = troshx_sos_vue_inputs_impl_CategoryPCPInput;
		var clsP = cls.prototype;
		this.computed = { current : clsP.get_current, valid : clsP.get_valid, min : clsP.get_min, max : clsP.get_max};
		this.methods = { get_current : clsP.get_current, get_valid : clsP.get_valid, get_min : clsP.get_min, get_max : clsP.get_max};
		this.props = { prop : { required : true, type : String}, obj : { required : true}, disabled : { required : false, "default" : false, type : Boolean}, magic : { required : false, "default" : false, type : Boolean}, remainingAssignable : { required : true, type : Number}, floating : { required : false, "default" : false, type : Boolean}, maxPCPPerCategory : { required : true, type : Number}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_inputs_impl_CategoryPCPInput
});
var troshx_sos_vue_inputs_impl_InputNameLabel = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.inputs.impl.InputNameLabel"] = troshx_sos_vue_inputs_impl_InputNameLabel;
troshx_sos_vue_inputs_impl_InputNameLabel.__name__ = ["troshx","sos","vue","inputs","impl","InputNameLabel"];
troshx_sos_vue_inputs_impl_InputNameLabel.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_inputs_impl_InputNameLabel.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	onBlur: function(input) {
		var val = input.value;
		val = StringTools.trim(val);
		if(val != input.value) {
			input.value = val;
		}
		this.obj[this.prop] = val;
	}
	,Template: function() {
		return "<input type=\"text\" :disabled=\"disabled\" :value=\"obj[prop]\" v-on:blur=\"onBlur($" + "event.target)\"></input>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_inputs_impl_InputNameLabel;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.methods = { onBlur : clsP.onBlur};
		this.props = { prop : { required : true}, obj : { required : true}, disabled : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_inputs_impl_InputNameLabel
});
var troshx_sos_vue_inputs_impl_SchoolLevelInput = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_inputs_NumericInput.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.inputs.impl.SchoolLevelInput"] = troshx_sos_vue_inputs_impl_SchoolLevelInput;
troshx_sos_vue_inputs_impl_SchoolLevelInput.__name__ = ["troshx","sos","vue","inputs","impl","SchoolLevelInput"];
troshx_sos_vue_inputs_impl_SchoolLevelInput.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_inputs_impl_SchoolLevelInput.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_max: function() {
		var cr = this.current;
		var rm = this.remainingArc + (cr > 0 ? this.levelCosts[cr - 1] : 0);
		var result = 0;
		var _g1 = 0;
		var _g = this.levelCosts.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.levelCosts[i] > rm) {
				return result;
			}
			result = i + 1;
		}
		return result;
	}
	,get_min: function() {
		return this.minAmount;
	}
	,get_current: function() {
		return this.obj[this.prop];
	}
	,_Init: function() {
		var cls = troshx_sos_vue_inputs_impl_SchoolLevelInput;
		var clsP = cls.prototype;
		this.computed = { max : clsP.get_max, min : clsP.get_min, current : clsP.get_current};
		this.methods = { get_max : clsP.get_max, get_min : clsP.get_min, get_current : clsP.get_current};
		this.props = { prop : { required : true, type : String}, remainingArc : { required : true, type : Number}, obj : { required : true}, minAmount : { required : false, "default" : 0, type : Number}, disabled : { required : false, "default" : false, type : Boolean}, levelCosts : { required : true, type : Array}, floating : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_inputs_impl_SchoolLevelInput
});
var troshx_sos_vue_inputs_impl_SkillLibInput = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_inputs_NumericInput.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.inputs.impl.SkillLibInput"] = troshx_sos_vue_inputs_impl_SkillLibInput;
troshx_sos_vue_inputs_impl_SkillLibInput.__name__ = ["troshx","sos","vue","inputs","impl","SkillLibInput"];
troshx_sos_vue_inputs_impl_SkillLibInput.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_inputs_impl_SkillLibInput.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { };
	}
	,Created: function() {
		this.interactedInput = false;
	}
	,get_min: function() {
		if(this.skillLevelsPacket != null) {
			var val = this.skillLevelsPacket[this.prop];
			if(val >= 5) {
				return 5;
			} else {
				return val;
			}
		} else {
			return 0;
		}
	}
	,checkConstraints: function() {
		var theCurrent = this.current;
		var currentVal = theCurrent;
		var min = this.min;
		var max = this.max;
		if(min != null && currentVal < min) {
			currentVal = min;
		}
		if(max != null && currentVal > max) {
			currentVal = max;
		}
		if(currentVal != theCurrent) {
			this.obj[this.prop] = currentVal - min;
		}
	}
	,watch_current: function(newValue,oldValue) {
		if(this.interactedInput) {
			this.$emit("change",newValue - oldValue);
		}
		this.interactedInput = false;
	}
	,inputHandler: function(input) {
		if(input.value == "") {
			return;
		}
		var max = this.max;
		var min = this.min;
		var result = this.floating ? input.valueAsNumber : input.valueAsNumber | 0;
		if(result == null || isNaN(result)) {
			input.valueAsNumber = this.obj[this.prop];
			return;
		}
		if(result != input.valueAsNumber) {
			input.valueAsNumber = result;
		}
		if(result > max) {
			result = max;
			input.valueAsNumber = result;
		}
		if(result < min) {
			result = min;
			input.valueAsNumber = result;
		}
		this.interactedInput = true;
		this.obj[this.prop] = result - min;
	}
	,get_max: function() {
		var r = this.current + this.remaining;
		var min = this.min;
		if(r < min) {
			r = min;
		} else {
			r = r;
		}
		if(r >= 10) {
			return 10;
		} else {
			return r;
		}
	}
	,clamp5: function(val) {
		if(val >= 5) {
			return 5;
		} else {
			return val;
		}
	}
	,get_current: function() {
		var tmp;
		if(this.skillLevelsPacket != null) {
			var val = this.skillLevelsPacket[this.prop];
			if(val >= 5) {
				tmp = 5;
			} else {
				tmp = val;
			}
		} else {
			tmp = 0;
		}
		return tmp + this.obj[this.prop];
	}
	,get_deleteBtnStyle: function() {
		return { "visibility" : this.current == 0 ? "visible" : "hidden"};
	}
	,onDeleteClick: function() {
		this.$emit("delete",this.index);
	}
	,Template: function() {
		return "<span :class=\"{active:obj[prop]>0, activepack:min>0}\">\r\n\t\t\t\t<label><input type=\"number\" number :value=\"current\" v-on:blur=\"blurHandler($" + "event.target)\" v-on:input=\"inputHandler($" + "event.target)\" :class=\"{invalid:!valid}\" :min=\"min\" :max=\"max\"></input>{{prop}}<span v-show=\"skillsTable.requiresSpecialisation[prop]\">()</span><sup v-show=\"skillsTable.requiresTrained[prop]\">1</sup><span v-if=\"canDelete\" :style=\"deleteBtnStyle\">[<a href=\"#\" v-on:click.prevent=\"onDeleteClick\">x</a>]</span></label>\r\n\t\t\t</span>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_inputs_impl_SkillLibInput;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.created = clsP.Created;
		this.template = this.Template();
		this.computed = { min : clsP.get_min, max : clsP.get_max, current : clsP.get_current, deleteBtnStyle : clsP.get_deleteBtnStyle};
		this.methods = { get_min : clsP.get_min, checkConstraints : clsP.checkConstraints, watch_current : clsP.watch_current, inputHandler : clsP.inputHandler, get_max : clsP.get_max, clamp5 : clsP.clamp5, get_current : clsP.get_current, get_deleteBtnStyle : clsP.get_deleteBtnStyle, onDeleteClick : clsP.onDeleteClick};
		this.props = { prop : { required : true, type : String}, obj : { required : true}, skillsTable : { required : true, type : Object}, remaining : { required : false, "default" : 10, type : Number}, disabled : { required : false, "default" : false, type : Boolean}, canDelete : { required : false, "default" : false, type : Boolean}, skillLevelsPacket : { required : false}, index : { required : true, type : Number}, floating : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
		this.watch = { current : clsP.watch_current};
	}
	,__class__: troshx_sos_vue_inputs_impl_SkillLibInput
});
var troshx_sos_vue_inputs_impl_SkillPacketInput = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_inputs_NumericInput.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.inputs.impl.SkillPacketInput"] = troshx_sos_vue_inputs_impl_SkillPacketInput;
troshx_sos_vue_inputs_impl_SkillPacketInput.__name__ = ["troshx","sos","vue","inputs","impl","SkillPacketInput"];
troshx_sos_vue_inputs_impl_SkillPacketInput.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_inputs_impl_SkillPacketInput.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { errorsDetected : { }};
	}
	,Created: function() {
		this.clickedOnPlus = false;
	}
	,watch_current: function(newValue,oldValue) {
		this.$emit("change",this.index,newValue - oldValue,this.clickedOnPlus);
		if(this.obj.history != null && !this.clickedOnPlus && this.current < this.obj.history.length) {
			this.showCurrentHistory();
		}
		this.clickedOnPlus = false;
	}
	,showCurrentHistory: function() {
		var packet = this.packet;
		var samples = packet.history[this.current];
		var _g1 = 0;
		var _g = packet.fields.length;
		while(_g1 < _g) {
			var i = _g1++;
			var f = packet.fields[i];
			if(f.charAt(0) == "~") {
				var dyn = this.labelSchema[f];
				if((dyn instanceof Array) && dyn.__enum__ == null) {
					this.labelMap[f] = samples[f];
				} else {
					var spl = troshx_sos_core_Skill.getSplitFromSpecialisation(samples[f]);
					this.labelMap[f] = spl[1];
				}
			}
		}
	}
	,get_current: function() {
		return this.obj[this.prop];
	}
	,get_min: function() {
		return 0;
	}
	,get_max: function() {
		var packet = this.packet;
		var r = packet.qty + this.skillPacketsRemaining;
		var s = packet.history != null ? this.dynamicMaxQtyUntilUseless() : this.staticMaxQtyUntilUseless();
		if(r < s) {
			r = r;
		} else {
			r = s;
		}
		if(r >= 5) {
			return 5;
		} else {
			return r;
		}
	}
	,staticMaxQtyUntilUseless: function() {
		var packet = this.packet;
		var current = packet.qty;
		var isChoosy = this.packetChoosy;
		var candidate = 9999;
		var _g1 = 0;
		var _g = packet.fields.length;
		while(_g1 < _g) {
			var i = _g1++;
			var f = packet.fields[i];
			var v = packet.values[f];
			var p = f;
			p = troshx_sos_chargen_CharGenSkillPackets.getSkillLabel(p,this.labelSchema,this.labelMap);
			var skill = this.skillValues[p];
			var innerV = (5 - (skill >= 5 ? 5 : skill)) / v;
			v = current + (isChoosy ? Math.floor(innerV) : Math.ceil(innerV));
			if(v < candidate) {
				candidate = v;
			}
		}
		return candidate;
	}
	,currentPacketClampedSkillLevel: function(skill) {
		if(skill >= 5) {
			return 5;
		} else {
			return skill;
		}
	}
	,dynamicMaxQtyUntilUseless: function() {
		var packValList = this.packetValueList;
		var disabledCount = 0;
		var limit = this.packetChoosy ? 5 : 6;
		var i = packValList.length;
		while(--i > -1) {
			var entry = packValList[i];
			if(this.disabledFromCount(packValList,entry.p,i) >= limit) {
				return this.current;
			}
		}
		return this.current + 1;
	}
	,cloneCurrentState: function() {
		var cl = { };
		var packet = this.packet;
		var fields = packet.fields;
		var _g1 = 0;
		var _g = fields.length;
		while(_g1 < _g) {
			var i = _g1++;
			var f = fields[i];
			var p = troshx_sos_chargen_CharGenSkillPackets.getSkillLabel(f,this.labelSchema,this.labelMap);
			cl[f] = p;
		}
		return cl;
	}
	,validation: function() {
		var invalid = false;
		var _g1 = 0;
		var _g = this.packet.fields.length;
		while(_g1 < _g) {
			var i = _g1++;
			var f = this.packet.fields[i];
			var tmp;
			if(f.charAt(0) == "~") {
				var dyn = this.labelSchema[f];
				if((dyn instanceof Array)) {
					tmp = dyn.__enum__ == null;
				} else {
					tmp = false;
				}
			} else {
				tmp = true;
			}
			if(tmp) {
				continue;
			}
			var chk = this.labelMap[f];
			if(chk == "") {
				invalid = true;
				Vue.set(this.errorsDetected,f,true);
			} else {
				Vue.set(this.errorsDetected,f,false);
			}
		}
		return !invalid;
	}
	,incrementBtnHit: function() {
		if(!this.validation()) {
			return;
		}
		var val = this.current;
		this.clickedOnPlus = true;
		var of = this.packet.history;
		of.splice(val,of.length - val);
		this.packet.history.push(this.cloneCurrentState());
		this.obj[this.prop] = val + 1;
	}
	,spliceBtnHit: function() {
		var val = this.current;
		var of = this.packet.history;
		of.splice(val,of.length - val);
	}
	,get_packet: function() {
		return this.obj;
	}
	,isLabelBinded: function(s) {
		return s.charAt(0) == "~";
	}
	,getLabel: function(s) {
		return troshx_sos_chargen_CharGenSkillPackets.getSkillLabel(s,this.labelSchema,this.labelMap);
	}
	,getBindedValue: function(p) {
		p = troshx_sos_chargen_CharGenSkillPackets.getSkillLabel(p,this.labelSchema,this.labelMap);
		return this.skillValues[p];
	}
	,get_showHistoryInterface: function() {
		var a = this.obj[this.prop] > 0;
		var b = this.obj.history.length > 0;
		if(!a) {
			return b;
		} else {
			return true;
		}
	}
	,get_packetValueList: function() {
		var arr = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.packet.values);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var lbb = p.charAt(0) == "~";
			var count = this.packet.values[p];
			var iaa;
			if(lbb) {
				var dyn = this.labelSchema[p];
				if((dyn instanceof Array)) {
					iaa = dyn.__enum__ == null;
				} else {
					iaa = false;
				}
			} else {
				iaa = false;
			}
			while(--count > -1) arr.push({ p : p, isLabelBinded : lbb, isArray : iaa});
		}
		return arr;
	}
	,watch_skillSubjectHash: function(newValue,oldValue) {
		if(this.obj.history == null) {
			return;
		}
		var _g1 = 0;
		var _g = this.packet.fields.length;
		while(_g1 < _g) {
			var i = _g1++;
			var f = this.packet.fields[i];
			var tmp;
			if(f.charAt(0) == "~") {
				var dyn = this.labelSchema[f];
				if((dyn instanceof Array)) {
					tmp = dyn.__enum__ == null;
				} else {
					tmp = false;
				}
			} else {
				tmp = true;
			}
			if(tmp) {
				continue;
			}
			var chk = this.labelMap[f];
			if(chk == "") {
				continue;
			}
			var skill = this.labelSchema[f];
			var arr = this.skillSubjectHash[skill];
			if(arr == null) {
				continue;
			}
			if(arr.indexOf(chk) < 0) {
				this.labelMap[f] = "";
			}
		}
	}
	,onOptionClickUnder: function(prop) {
		Vue.set(this.errorsDetected,prop,false);
	}
	,disabledFromCount: function(arr,p,i) {
		p = troshx_sos_chargen_CharGenSkillPackets.getSkillLabel(p,this.labelSchema,this.labelMap);
		var cur = this.skillValues[p];
		while(--i > -1) cur += troshx_sos_chargen_CharGenSkillPackets.getSkillLabel(arr[i].p,this.labelSchema,this.labelMap) == p ? 1 : 0;
		return cur;
	}
	,disabledFrom: function(arr,p,i) {
		return this.disabledFromCount(arr,p,i) >= 5;
	}
	,isArray: function(dyn) {
		if((dyn instanceof Array)) {
			return dyn.__enum__ == null;
		} else {
			return false;
		}
	}
	,Template: function() {
		return "<div class=\"skillpacket\" :class=\"{active:obj[prop]>0}\">\r\n<div class=\"heading\"><button v-if=\"obj.history!=null\" v-on:click=\"incrementBtnHit\" v-show=\"true || current==obj.history.length\" :disabled=\"current>=max\">+</button><input type=\"number\" v-if=\"obj.history==null\" number :value=\"obj[prop]\" v-on:input=\"inputHandler($" + "event.target)\" v-on:blur=\"blurHandler($" + "event.target)\" :class=\"{invalid:!valid}\" :min=\"min\" :max=\"max\"></input><label>{{ obj.name }}</label><button v-if=\"false && obj.history!=null\" v-on:click=\"spliceBtnHit\" v-show=\"current!=obj.history.length\" class=\"revert\" :disabled=\"obj[prop]>=max\">&#9100;</button><span class=\"max-length\" v-if=\"obj.history!=null\" v-show=\"showHistoryInterface\">/{{ obj.history.length }}</span><input type=\"number\" number :value=\"current\" :max=\"obj.history.length\" :min=\"0\" v-on:input=\"inputHandler($" + "event.target)\" v-if=\"obj.history!=null\" v-show=\"showHistoryInterface\" class=\"max-length-input\"></input><span class=\"max-predict\" v-if=\"obj.history==null\">{{max - current}}</span><span style=\"display:block;clear:both\"></span></div>\r\n\t\t\t<div class=\"skill-listing\">\r\n\t\t\t\t<div v-for=\"(entry,i) in packetValueList\" :class=\"{disabled:disabledFrom(packetValueList, entry.p, i)}\">\r\n\t\t\t\t\t<div v-if=\"!entry.isLabelBinded\">{{ entry.p }}</div>\r\n\t\t\t\t\t<div v-else>\r\n\t\t\t\t\t\t<select v-if=\"entry.isArray\" v-model=\"labelMap[entry.p]\">\r\n\t\t\t\t\t\t\t<option value=\"\" disabled selected hidden>Choose One...</option>\r\n\t\t\t\t\t\t\t<option v-for=\"val in labelSchema[entry.p]\" :value=\"val\">{{ val }}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<span v-else class=\"flex\"><span>{{labelSchema[entry.p]}}(</span><span class=\"middle\">\r\n\t\t\t\t\t\t\t<select v-if=\"skillSubjectHash[labelSchema[entry.p]]\" v-model=\"labelMap[entry.p]\"  v-on:change=\"onOptionClickUnder(entry.p)\" :class=\"{invalid:errorsDetected[entry.p]}\">\r\n\t\t\t\t\t\t\t\t<option value=\"\" disabled selected hidden>Choose One...</option>\r\n\t\t\t\t\t\t\t\t<option v-for=\"special in skillSubjectHash[labelSchema[entry.p]]\" :value=\"special\" >{{ special }}</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</span><span>)</span></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_inputs_impl_SkillPacketInput;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.created = clsP.Created;
		this.template = this.Template();
		this.computed = { current : clsP.get_current, min : clsP.get_min, max : clsP.get_max, packet : clsP.get_packet, showHistoryInterface : clsP.get_showHistoryInterface, packetValueList : clsP.get_packetValueList};
		this.methods = { watch_current : clsP.watch_current, showCurrentHistory : clsP.showCurrentHistory, get_current : clsP.get_current, get_min : clsP.get_min, get_max : clsP.get_max, staticMaxQtyUntilUseless : clsP.staticMaxQtyUntilUseless, currentPacketClampedSkillLevel : clsP.currentPacketClampedSkillLevel, dynamicMaxQtyUntilUseless : clsP.dynamicMaxQtyUntilUseless, cloneCurrentState : clsP.cloneCurrentState, validation : clsP.validation, incrementBtnHit : clsP.incrementBtnHit, spliceBtnHit : clsP.spliceBtnHit, get_packet : clsP.get_packet, isLabelBinded : clsP.isLabelBinded, getLabel : clsP.getLabel, getBindedValue : clsP.getBindedValue, get_showHistoryInterface : clsP.get_showHistoryInterface, get_packetValueList : clsP.get_packetValueList, watch_skillSubjectHash : clsP.watch_skillSubjectHash, onOptionClickUnder : clsP.onOptionClickUnder, disabledFromCount : clsP.disabledFromCount, disabledFrom : clsP.disabledFrom, isArray : clsP.isArray};
		this.props = { prop : { required : true, type : String}, labelMap : { required : true}, obj : { required : true}, skillSubjectHash : { required : true}, skillPacketsRemaining : { required : true, type : Number}, disabled : { required : false, "default" : false, type : Boolean}, packetChoosy : { required : true, type : Boolean}, skillValues : { required : true}, index : { required : true, type : Number}, floating : { required : false, "default" : false, type : Boolean}, labelSchema : { required : true}, readonly : { required : false, "default" : false, type : Boolean}};
		this.watch = { current : clsP.watch_current, skillSubjectHash : { deep : true, handler : clsP.watch_skillSubjectHash}};
	}
	,__class__: troshx_sos_vue_inputs_impl_SkillPacketInput
});
var troshx_sos_vue_treeview_TreeView = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.name = "treeview";
};
$hxClasses["troshx.sos.vue.treeview.TreeView"] = troshx_sos_vue_treeview_TreeView;
troshx_sos_vue_treeview_TreeView.__name__ = ["troshx","sos","vue","treeview","TreeView"];
troshx_sos_vue_treeview_TreeView.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_treeview_TreeView.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	getNodeClass: function(node,index) {
		var dyn = { "active" : this.value != null && this.model[index][this.valuename] == this.value};
		if(this.getCustomClass != null) {
			var clsName = this.getCustomClass(this.model[index]);
			if(clsName) {
				dyn[clsName] = true;
			}
		}
		return dyn;
	}
	,select: function(index,value) {
		if(!this.model[index].isOpened || this.value != null && this.model[index][this.valuename] == this.value) {
			this.toggleOpen(index);
		}
		this.$emit("update:value",value);
		this.$emit("treeview_click",this.model[index],this.parentNode);
	}
	,toggleOpen: function(index) {
		if(!this.validNodeHandler(this.model[index][this.children],this.model[index])) {
			return;
		}
		if(this.model[index].isOpened == null) {
			this.$set(this.model[index],"isOpened",this.hasSelectedChild(index));
		}
		this.$set(this.model[index],"isOpened",!this.model[index].isOpened);
	}
	,areValidNodes: function(nodes,node) {
		if(nodes != null && ((nodes instanceof Array) && nodes.__enum__ == null)) {
			return nodes.length > 0;
		} else {
			return false;
		}
	}
	,get_validNodeHandler: function() {
		if(this.areValidNodesHandler != null) {
			return this.areValidNodesHandler;
		} else {
			return $bind(this,this.areValidNodes);
		}
	}
	,hasSelected: function() {
		var _g1 = 0;
		var _g = this.model.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.value != null && this.model[i][this.valuename] == this.value || this.hasSelectedChild(i)) {
				return true;
			}
		}
		return false;
	}
	,hasSelectedChild: function(index) {
		var _g1 = 0;
		var _g = this.$children.length;
		while(_g1 < _g) {
			var i = _g1++;
			var r = this.$children[i];
			if(r.parent == index && r.hasSelected()) {
				return true;
			}
		}
		return false;
	}
	,isSelected: function(index) {
		if(this.value != null) {
			return this.model[index][this.valuename] == this.value;
		} else {
			return false;
		}
	}
	,isOpened: function(index) {
		if(!(this.model[index].isOpened != null && this.model[index].isOpened)) {
			return this.hasSelectedChild(index);
		} else {
			return true;
		}
	}
	,bubbleValueHandler: function(value) {
		this.$emit("update:value",value);
	}
	,bubbleClickHandler: function(node,parentNode) {
		this.$emit("treeview_click",node,parentNode);
	}
	,Template: function() {
		return "<div class=\"treeview\" :class=\"classname\">\n    <div class=\"node-data\"\n        v-for=\"(node, index) in model\" :key=\"index\"  v-if=\"filterNodeHandler == null || filterNodeHandler(node, parentNode)\"\n    >\n\t\t<div class=\"node\"\n            :class=\"getNodeClass(node, index)\"\n            @click.prevent=\"select(index, node[valuename])\"\n>\n            <span class=\"icon node-parent-toggled\"\n                v-show=\"validNodeHandler(node[children], node) && isOpened(index)\"\n            >\n                <svg viewBox=\"0 0 35 35\" v-if=\"getCustomIcon == null || getCustomIcon(node ,1)===false\">\n                    <g transform=\"translate(0,-1017.3621)\">\n                        <path class=\"back\" d=\"m 2.1411424,1026.4693 0,23.4146 27.0189286,0 0,-23.4146 -13.937805,0 0,-2.7898 -9.2657958,0 0,2.7898 z\"/>\n                        <path class=\"front\" d=\"m 1,1051.3621 7,-19 2,0 1,-2 6,0 -1,2 19,0 -4.472399,18.9369 z\"/>\n                        <path class=\"light\" d=\"m 29.696699,1047.0363 -0.820749,3.0631 -6,0 0.757614,-3\"/>\n                    </g>\n                </svg>\n\t\t\t\t<span class=\"custom-icon opened\" v-else>{{getCustomIcon(node, 1)}}</span>\n            </span>\n            <span class=\"icon node-parent\" style=\"cursor:pointer\"\n                v-show=\"validNodeHandler(node[children], node) && !isOpened(index)\"\n            >\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 35 35\" v-if=\"getCustomIcon == null || getCustomIcon(node ,0)===false\">\n                    <g transform=\"translate(0,-1017.3621)\">\n                        <path class=\"fill\" d=\"m 1,1026.1835 0,25.1786 33,0 0,-25.1786 -18.857143,0 0,-3 -10.017857,0 0,3 z\" />\n                        <path class=\"light\" d=\"m 32,1046.1625 0,3 -6,0 0,-3 6,0\"/>\n                    </g>\n                </svg>\n\t\t\t\t<span class=\"custom-icon closed\" v-else>{{getCustomIcon(node, 0)}}</span>\n            </span>\n            <span class=\"icon node\" style=\"cursor:pointer\"\n                v-if=\"!validNodeHandler(node[children], node)\"\n            >\n                <svg width=\"8\" height=\"8\" viewBox=\"0 0 35 35\" v-if=\"getCustomIcon == null || getCustomIcon(node ,2)===false\">\n                    <g transform=\"translate(0,-1017.3622)\">\n                        <circle cx=\"17.488264\" cy=\"1034.874\" r=\"16.003242\"/>\n                    </g>\n                </svg>\n\t\t\t\t<span class=\"custom-icon leaf\" v-else>{{getCustomIcon(node, 2)}}</span>\n            </span>\n            <label v-html=\"customLabelHandler == null ? node[labelname] : customLabelHandler(node[labelname])\"></label>\n        </div>\n        <div v-if=\"validNodeHandler(node[children], node)\"\n            class=\"children\"\n            v-show=\"isOpened(index)\"\n        >\n            <div class=\"margin\"></div>\n            <div class=\"nodes\">\n                <treeview \n\t\t\t\t\t:value=\"value\"\n\t\t\t\t\t@update:value=\"bubbleValueHandler\"\n\t\t\t\t\t@treeview_click=\"bubbleClickHandler\"\n\t\t\t\t\t:labelname=\"labelname\"\n                    :valuename=\"valuename\"\n                    :children=\"children\"\n                    :model=\"node[children]\"\n                    :parent.once=\"index\"\n\t\t\t\t\t:parentNode.once=\"node\"\n                    classname=\"inner\"\n\t\t\t\t\t:getCustomClass=\"getCustomClass\"\n\t\t\t\t\t:getCustomIcon=\"getCustomIcon\"\n\t\t\t\t\t:filterNodeHandler=\"filterNodeHandler\"\n\t\t\t\t\t:customLabelHandler=\"customLabelHandler\"\n                ></treeview>\n            </div>\n        </div>\n    </div>\n</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_treeview_TreeView;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { validNodeHandler : clsP.get_validNodeHandler};
		this.methods = { getNodeClass : clsP.getNodeClass, select : clsP.select, toggleOpen : clsP.toggleOpen, areValidNodes : clsP.areValidNodes, get_validNodeHandler : clsP.get_validNodeHandler, hasSelected : clsP.hasSelected, hasSelectedChild : clsP.hasSelectedChild, isSelected : clsP.isSelected, isOpened : clsP.isOpened, bubbleValueHandler : clsP.bubbleValueHandler, bubbleClickHandler : clsP.bubbleClickHandler};
		this.props = { customLabelHandler : { required : false, type : Function}, value : { required : false}, valuename : { required : false, "default" : "value", type : String}, classname : { required : false, type : String}, getCustomClass : { required : false, type : Function}, children : { required : false, "default" : "nodes", type : String}, parentNode : { required : false}, areValidNodesHandler : { required : false, type : Function}, getCustomIcon : { required : false, type : Function}, model : { required : true, type : Array}, filterNodeHandler : { required : false, type : Function}, labelname : { required : false, "default" : "label", type : String}, parent : { required : false, type : Number}};
	}
	,__class__: troshx_sos_vue_treeview_TreeView
});
var troshx_sos_vue_uifields_ArrayOf = function() {
	haxevx_vuex_core_VComponent.call(this);
	this["inheritAttrs"] = false;
};
$hxClasses["troshx.sos.vue.uifields.ArrayOf"] = troshx_sos_vue_uifields_ArrayOf;
troshx_sos_vue_uifields_ArrayOf.__name__ = ["troshx","sos","vue","uifields","ArrayOf"];
troshx_sos_vue_uifields_ArrayOf.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_ArrayOf.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	getKey: function(obj,i) {
		var castToIder = js_Boot.__instanceof(obj,troshx_core_IUid) ? obj : null;
		if(castToIder != null) {
			return castToIder.get_uid();
		} else if(obj["uid"] != null) {
			return obj["uid"];
		} else {
			return i;
		}
	}
	,Components: function() {
		if(troshx_sos_vue_uifields_ArrayOf.COMPONENTS != null) {
			return troshx_sos_vue_uifields_ArrayOf.COMPONENTS;
		} else {
			return troshx_sos_vue_uifields_ArrayOf.COMPONENTS = troshx_sos_vue_uifields_UI.getNewSetOfComponents(true);
		}
	}
	,Template: function() {
		return "<div>\r\n\t\t<label v-if=\"label!=null\">{{label}}:&nbsp;| {{maxLength}}</label><label v-if=\"label==null && maxLength!=null\">| {{maxLength}} </label><button v-show=\"!readonly\" :disabled=\"!(maxLength == null || current.length + 1 <= maxLength)\" v-on:click=\"pushEntry()\">+</button> &nbsp;<button  v-show=\"!readonly\" :disabled=\"!(current.length > (minLength != null ? minLength : 0))\" v-on:click=\"popEntry()\">-</button>\r\n\t\t<ul class=\"array-of\">\r\n\t\t\t<li v-for=\"(li, i) in current\" :class=\"{disabled:!(maxLength == null || i < maxLength)}\">\r\n\t\t\t\t<span :is=\"typeMap[of]\" v-bind=\"$" + "attrs\" :index=\"i\" :readonly=\"readonly\" :obj=\"current\" :prop=\"i\" :key=\"getKey(li, i)\" :class=\"{disabled:!(maxLength == null || i < maxLength)}\" :disabled=\"!(maxLength == null || i < maxLength)\"></span>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t\r\n\t\t</div>";
	}
	,pushEntry: function() {
		var arr = this.current;
		var defValue = this.defaultValue;
		var valueToUse;
		if(Reflect.isFunction(defValue)) {
			valueToUse = defValue();
		} else if((defValue instanceof Array) && defValue.__enum__ == null) {
			console.log("Warning, nested array not supported");
			valueToUse = defValue.concat([]);
		} else {
			var tt = Type["typeof"](defValue);
			if(tt[1] == 6) {
				var c = tt[2];
				valueToUse = Type.createInstance(c,[]);
			} else {
				valueToUse = defValue;
			}
		}
		arr.push(valueToUse);
	}
	,watch_maxLength: function(newValue,oldValue) {
		if(this.autoExpand && newValue > oldValue) {
			while(--newValue >= oldValue) this.pushEntry();
		}
	}
	,popEntry: function() {
		this.current.pop();
	}
	,get_current: function() {
		return this.obj[this.prop];
	}
	,get_typeMap: function() {
		return troshx_sos_vue_uifields_UI.getTypeMapToComponentNames();
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_ArrayOf;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.template = this.Template();
		this.computed = { current : clsP.get_current, typeMap : clsP.get_typeMap};
		this.methods = { getKey : clsP.getKey, pushEntry : clsP.pushEntry, watch_maxLength : clsP.watch_maxLength, popEntry : clsP.popEntry, get_current : clsP.get_current, get_typeMap : clsP.get_typeMap};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, defaultValue : { required : true}, obj : { required : true}, of : { required : true, type : String}, disabled : { required : false, "default" : false, type : Boolean}, maxLength : { required : false, type : Number}, autoExpand : { required : false, "default" : false, type : Boolean}, minLength : { required : false, "default" : 0, type : Number}, readonly : { required : false, "default" : false, type : Boolean}};
		this.watch = { maxLength : clsP.watch_maxLength};
	}
	,__class__: troshx_sos_vue_uifields_ArrayOf
});
var troshx_sos_vue_uifields_ArrayOfBits = function() {
	haxevx_vuex_core_VComponent.call(this);
	this["inheritAttrs"] = false;
};
$hxClasses["troshx.sos.vue.uifields.ArrayOfBits"] = troshx_sos_vue_uifields_ArrayOfBits;
troshx_sos_vue_uifields_ArrayOfBits.__name__ = ["troshx","sos","vue","uifields","ArrayOfBits"];
troshx_sos_vue_uifields_ArrayOfBits.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_ArrayOfBits.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		var _m_ = { };
		_m_["comp"] = new troshx_sos_vue_uifields_ArrayOf();
		return _m_;
	}
	,Mounted: function() {
	}
	,Render: function(c) {
		var props = { obj : this.obj, prop : this.prop, maxLength : this.maxLength, of : "SingleBitSelection", defaultValue : 0};
		var propsForBitSingle = { currentBitmask : this.currentBitmask, bitList : this.currentBitArray, labels : this.labels};
		var otherAttrs = this.$attrs;
		troshx_util_LibUtil.override2ndObjInto(props,otherAttrs);
		return c("comp",{ props : props, attrs : propsForBitSingle});
	}
	,get_currentBitmask: function() {
		var arr = this.currentBitArray;
		var bits = 0;
		var len = arr.length;
		if(this.maxLength != null && this.maxLength < len) {
			len = this.maxLength;
		}
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			bits |= arr[i];
		}
		return bits;
	}
	,watch_currentBitmask: function(newValue) {
		if(this.bitmaskSetObj != null && this.bitmaskSetProp != null) {
			this.bitmaskSetObj[this.bitmaskSetProp] = newValue;
		}
		var arr = this.currentBitArray;
		var len = arr.length;
		var bits = 0;
		if(this.maxLength != null && this.maxLength < len) {
			len = this.maxLength;
		}
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			if((bits & arr[i]) != 0) {
				Vue.set(arr,i,0);
				continue;
			}
			bits |= arr[i];
		}
	}
	,get_currentBitArray: function() {
		return this.obj[this.prop];
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_ArrayOfBits;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.mounted = clsP.Mounted;
		this.render = clsP.Render;
		this.computed = { currentBitmask : clsP.get_currentBitmask, currentBitArray : clsP.get_currentBitArray};
		this.methods = { get_currentBitmask : clsP.get_currentBitmask, watch_currentBitmask : clsP.watch_currentBitmask, get_currentBitArray : clsP.get_currentBitArray};
		this.props = { prop : { required : true, type : String}, obj : { required : true}, bitmaskSetObj : { required : false}, bitmaskSetProp : { required : false, type : String}, maxLength : { required : false, type : Number}, labels : { required : true, type : Array}};
		this.watch = { currentBitmask : clsP.watch_currentBitmask};
	}
	,__class__: troshx_sos_vue_uifields_ArrayOfBits
});
var troshx_sos_vue_uifields_BaseNumMixin = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.BaseNumMixin"] = troshx_sos_vue_uifields_BaseNumMixin;
troshx_sos_vue_uifields_BaseNumMixin.__name__ = ["troshx","sos","vue","uifields","BaseNumMixin"];
troshx_sos_vue_uifields_BaseNumMixin.getSampleInstance = function() {
	if(troshx_sos_vue_uifields_BaseNumMixin.INSTANCE != null) {
		return troshx_sos_vue_uifields_BaseNumMixin.INSTANCE;
	} else {
		return troshx_sos_vue_uifields_BaseNumMixin.INSTANCE = new troshx_sos_vue_uifields_BaseNumMixin();
	}
};
troshx_sos_vue_uifields_BaseNumMixin.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_BaseNumMixin.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	checkConstraints: function() {
		var theCurrent = this.current;
		var currentVal = theCurrent;
		var min = this.min;
		var max = this.max;
		if(min != null && currentVal < min) {
			currentVal = min;
		}
		if(max != null && currentVal > max) {
			currentVal = max;
		}
		if(currentVal != theCurrent) {
			this.obj[this.prop] = currentVal;
		}
	}
	,watch_min: function(newVal) {
		this.checkConstraints();
	}
	,watch_max: function(newVal) {
		this.checkConstraints();
	}
	,get_current: function() {
		return this.obj[this.prop];
	}
	,blurHandler: function(input) {
		if(input.value == "") {
			input.valueAsNumber = this.obj[this.prop];
		}
	}
	,inputHandler: function(input) {
		if(input.value == "") {
			return;
		}
		var max = this.max;
		var min = this.min;
		var result = this.floating ? input.valueAsNumber : input.valueAsNumber | 0;
		if(result == null || isNaN(result)) {
			input.valueAsNumber = this.obj[this.prop];
			return;
		}
		if(result != input.valueAsNumber) {
			input.valueAsNumber = result;
		}
		if(result > max) {
			result = max;
			input.valueAsNumber = result;
		}
		if(result < min) {
			result = min;
			input.valueAsNumber = result;
		}
		this.obj[this.prop] = result;
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_BaseNumMixin;
		var clsP = cls.prototype;
		this.computed = { current : clsP.get_current};
		this.methods = { checkConstraints : clsP.checkConstraints, watch_min : clsP.watch_min, watch_max : clsP.watch_max, get_current : clsP.get_current, blurHandler : clsP.blurHandler, inputHandler : clsP.inputHandler};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, min : { required : false, type : Number}, disabled : { required : false, "default" : false, type : Boolean}, max : { required : false, type : Number}, step : { required : false, type : Number}, floating : { required : false, "default" : true, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
		this.watch = { min : clsP.watch_min, max : clsP.watch_max};
	}
	,__class__: troshx_sos_vue_uifields_BaseNumMixin
});
var troshx_sos_vue_uifields_Bitmask = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.Bitmask"] = troshx_sos_vue_uifields_Bitmask;
troshx_sos_vue_uifields_Bitmask.__name__ = ["troshx","sos","vue","uifields","Bitmask"];
troshx_sos_vue_uifields_Bitmask.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_Bitmask.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<div class=\"troshx-uifields\" :class=\"{disabled:disabled}\">\r\n\t\t\t<label v-if=\"label\">{{ label }}:&nbsp;</label>\r\n\t\t\t<span style=\"vertical-align:top; margin-right:5px; display:inline-block\" v-for=\"(li, i) in labels\"><label><input type=\"checkbox\" v-on:click=\"checkboxHandler($" + "event.target, i)\" :checked=\"(valueAtIndex(i)&current)!=0\" :disabled=\"!(validateOptionFunc == null || validateOptionFunc(i))\"></input>{{ li }}</label></span>\r\n\t\t</div>";
	}
	,checkboxHandler: function(checkbox,i) {
		if(checkbox.checked) {
			this.obj[this.prop] |= this.values != null ? this.values[i] : 1 << i;
		} else {
			this.obj[this.prop] &= ~(this.values != null ? this.values[i] : 1 << i);
		}
	}
	,valueAtIndex: function(i) {
		if(this.values != null) {
			return this.values[i];
		} else {
			return 1 << i;
		}
	}
	,get_current: function() {
		return this.obj[this.prop];
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_Bitmask;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { current : clsP.get_current};
		this.methods = { checkboxHandler : clsP.checkboxHandler, valueAtIndex : clsP.valueAtIndex, get_current : clsP.get_current};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, values : { required : false, type : Array}, disabled : { required : false, "default" : false, type : Boolean}, validateOptionFunc : { required : false, type : Function}, labels : { required : true, type : Array}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_Bitmask
});
var troshx_sos_vue_uifields_ButtonCounter = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.ButtonCounter"] = troshx_sos_vue_uifields_ButtonCounter;
troshx_sos_vue_uifields_ButtonCounter.__name__ = ["troshx","sos","vue","uifields","ButtonCounter"];
troshx_sos_vue_uifields_ButtonCounter.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_ButtonCounter.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_showLabel: function() {
		if(this.label != null) {
			return this.label;
		} else {
			return "Add";
		}
	}
	,onClickButton: function() {
		if(!this.preventDefault) {
			this.obj[this.prop] = this.obj[this.prop] + 1;
		}
		var callbackValue = null;
		if(this.callback != null) {
			callbackValue = this.callback(this.obj,this.prop);
		}
		if(callbackValue != null) {
			this.$emit("callback",callbackValue);
		} else {
			this.$emit("callback");
		}
	}
	,Template: function() {
		return "<div class=\"button-counter-press\"><button :disabled=\"disabled\" v-on:click=\"onClickButton\">{{ showLabel }}</button><span class=\"colon\">:</span> <span class=\"num\">{{obj[prop]}}</span></div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_ButtonCounter;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { showLabel : clsP.get_showLabel};
		this.methods = { get_showLabel : clsP.get_showLabel, onClickButton : clsP.onClickButton};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, preventDefault : { required : false, "default" : false, type : Boolean}, disabled : { required : false, "default" : false, type : Boolean}, callback : { required : false, type : Function}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_ButtonCounter
});
var troshx_sos_vue_uifields_ButtonPermaPress = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.ButtonPermaPress"] = troshx_sos_vue_uifields_ButtonPermaPress;
troshx_sos_vue_uifields_ButtonPermaPress.__name__ = ["troshx","sos","vue","uifields","ButtonPermaPress"];
troshx_sos_vue_uifields_ButtonPermaPress.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_ButtonPermaPress.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_showLabel: function() {
		if(this.label != null) {
			return this.label;
		} else {
			return "Activate";
		}
	}
	,onClickButton: function() {
		if(!this.preventDefault) {
			this.obj[this.prop] = true;
		}
		var callbackValue = null;
		if(this.callback != null) {
			callbackValue = this.callback(this.obj,this.prop);
		}
		if(callbackValue != null) {
			this.$emit("callback",callbackValue);
		} else {
			this.$emit("callback");
		}
	}
	,Template: function() {
		return "<div class=\"button-perma-press\">\r\n\t\t\t<div v-if=\"description!=null && !obj[prop]\">{{description}}</div>\r\n\t\t\t<div v-if=\"descriptionDone!=null && obj[prop]\">{{descriptionDone}}</div>\r\n\t\t\t<div><button :disabled=\"disabled || obj[prop]\" v-on:click=\"onClickButton\">{{ showLabel }}</button></div>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_ButtonPermaPress;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { showLabel : clsP.get_showLabel};
		this.methods = { get_showLabel : clsP.get_showLabel, onClickButton : clsP.onClickButton};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, preventDefault : { required : false, "default" : false, type : Boolean}, disabled : { required : false, "default" : false, type : Boolean}, descriptionDone : { required : false, type : String}, callback : { required : false, type : Function}, description : { required : false, type : String}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_ButtonPermaPress
});
var troshx_sos_vue_uifields_FieldInt = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_uifields_BaseNumMixin.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.uifields.FieldInt"] = troshx_sos_vue_uifields_FieldInt;
troshx_sos_vue_uifields_FieldInt.__name__ = ["troshx","sos","vue","uifields","FieldInt"];
troshx_sos_vue_uifields_FieldInt.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_FieldInt.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<div>\r\n\t\t\t<label v-if=\"label\">{{ label }}:&nbsp;</label>\r\n\t\t\t<input type=\"number\"  :readonly=\"readonly\" number v-on:blur=\"blurHandler($" + "event.target)\" v-on:input=\"inputHandler($" + "event.target)\" :value=\"obj[prop]\" :min=\"min\" :max=\"max\" :step=\"1\"></input>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_FieldInt;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, min : { required : false, type : Number}, disabled : { required : false, "default" : false, type : Boolean}, max : { required : false, type : Number}, floating : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_FieldInt
});
var troshx_sos_vue_uifields_FieldNumber = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_uifields_BaseNumMixin.getSampleInstance()];
};
$hxClasses["troshx.sos.vue.uifields.FieldNumber"] = troshx_sos_vue_uifields_FieldNumber;
troshx_sos_vue_uifields_FieldNumber.__name__ = ["troshx","sos","vue","uifields","FieldNumber"];
troshx_sos_vue_uifields_FieldNumber.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_FieldNumber.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<div>\r\n\t\t\t<label v-if=\"label\">{{ label }}:&nbsp;</label>\r\n\t\t\t<input type=\"number\"  :readonly=\"readonly\" :disabled=\"disabled\" number v-on:blur=\"blurHandler($" + "event.target)\" v-on:input=\"inputHandler($" + "event.target)\" :value=\"obj[prop]\" :min=\"min\" :max=\"max\" :step=\"step\"></input>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_FieldNumber;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, min : { required : false, type : Number}, disabled : { required : false, "default" : false, type : Boolean}, max : { required : false, type : Number}, step : { required : false, type : Number}, floating : { required : false, "default" : true, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_FieldNumber
});
var troshx_sos_vue_uifields_FieldString = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.FieldString"] = troshx_sos_vue_uifields_FieldString;
troshx_sos_vue_uifields_FieldString.__name__ = ["troshx","sos","vue","uifields","FieldString"];
troshx_sos_vue_uifields_FieldString.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_FieldString.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<div>\r\n\t\t\t<label v-if=\"label\">{{ label }}:&nbsp;</label>\r\n\t\t\t<input type=\"text\" v-model=\"obj[prop]\" :disabled=\"disabled\" :readonly=\"readonly\"></input>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_FieldString;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, disabled : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_FieldString
});
var troshx_sos_vue_uifields_FieldTextArea = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.FieldTextArea"] = troshx_sos_vue_uifields_FieldTextArea;
troshx_sos_vue_uifields_FieldTextArea.__name__ = ["troshx","sos","vue","uifields","FieldTextArea"];
troshx_sos_vue_uifields_FieldTextArea.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_FieldTextArea.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<div>\r\n\t\t\t<label v-if=\"label\">{{ label }}:&nbsp;</label>\r\n\t\t\t<textarea v-model=\"obj[prop]\" :disabled=\"disabled\" :readonly=\"readonly\"></textarea>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_FieldTextArea;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, disabled : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_FieldTextArea
});
var troshx_sos_vue_uifields_HitLocationMultiSelector = function() {
	haxevx_vuex_core_VComponent.call(this);
	this["inheritAttrs"] = false;
};
$hxClasses["troshx.sos.vue.uifields.HitLocationMultiSelector"] = troshx_sos_vue_uifields_HitLocationMultiSelector;
troshx_sos_vue_uifields_HitLocationMultiSelector.__name__ = ["troshx","sos","vue","uifields","HitLocationMultiSelector"];
troshx_sos_vue_uifields_HitLocationMultiSelector.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_HitLocationMultiSelector.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		var _m_ = { };
		_m_["comp"] = new troshx_sos_vue_uifields_Bitmask();
		return _m_;
	}
	,get_labels: function() {
		var bd = this.body;
		var collect = [];
		var hitLocations = bd.hitLocations;
		var _g1 = 0;
		var _g = hitLocations.length;
		while(_g1 < _g) {
			var i = _g1++;
			collect.push(hitLocations[i].name);
		}
		return collect;
	}
	,Render: function(c) {
		var props = { label : this.label, obj : this.obj, prop : this.prop, labels : this.labels};
		var otherAttrs = this.$attrs;
		troshx_util_LibUtil.override2ndObjInto(props,otherAttrs);
		return c("comp",{ props : props});
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_HitLocationMultiSelector;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.render = clsP.Render;
		this.computed = { labels : clsP.get_labels};
		this.methods = { get_labels : clsP.get_labels};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, body : { required : true, type : Object}, disabled : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_HitLocationMultiSelector
});
var troshx_sos_vue_uifields_HitLocationSelector = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.HitLocationSelector"] = troshx_sos_vue_uifields_HitLocationSelector;
troshx_sos_vue_uifields_HitLocationSelector.__name__ = ["troshx","sos","vue","uifields","HitLocationSelector"];
troshx_sos_vue_uifields_HitLocationSelector.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_HitLocationSelector.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		var _m_ = { };
		_m_["comp"] = new troshx_sos_vue_uifields_SingleSelection();
		return _m_;
	}
	,get_labels: function() {
		var bd = this.body;
		var collect = [];
		var hitLocations = bd.hitLocations;
		var _g1 = 0;
		var _g = hitLocations.length;
		while(_g1 < _g) {
			var i = _g1++;
			collect.push(hitLocations[i].name);
		}
		return collect;
	}
	,Render: function(c) {
		var props = { label : this.label, obj : this.obj, prop : this.prop, labels : this.labels};
		var otherAttrs = this.$attrs;
		troshx_util_LibUtil.override2ndObjInto(props,otherAttrs);
		return c("comp",{ props : props});
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_HitLocationSelector;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.render = clsP.Render;
		this.computed = { labels : clsP.get_labels};
		this.methods = { get_labels : clsP.get_labels};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, body : { required : true, type : Object}, disabled : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_HitLocationSelector
});
var troshx_sos_vue_uifields_MoneyField = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_input_MixinInput.getInstance()];
};
$hxClasses["troshx.sos.vue.uifields.MoneyField"] = troshx_sos_vue_uifields_MoneyField;
troshx_sos_vue_uifields_MoneyField.__name__ = ["troshx","sos","vue","uifields","MoneyField"];
troshx_sos_vue_uifields_MoneyField.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_MoneyField.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_current: function() {
		return this.obj[this.prop];
	}
	,Template: function() {
		return "<div class=\"moneyfields\">\r\n\t\t\t<div>Money:</div>\r\n\t\t\t<label><InputInt :obj=\"current\" prop=\"gp\" :disabled=\"disabled\" :readonly=\"readonly\" style=\"width:70px\" />&nbsp;GP</label> &nbsp;\r\n\t\t\t<label><InputInt :obj=\"current\" prop=\"sp\" :disabled=\"disabled\" :readonly=\"readonly\" style=\"width:70px\"/>&nbsp;SP</label> &nbsp;\r\n\t\t\t<label><InputInt :obj=\"current\" prop=\"cp\" :disabled=\"disabled\" :readonly=\"readonly\"  style=\"width:70px\"/>&nbsp;CP</label> &nbsp;\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_MoneyField;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { current : clsP.get_current};
		this.methods = { get_current : clsP.get_current};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, disabled : { required : false, "default" : false, type : Boolean}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_MoneyField
});
var troshx_sos_vue_uifields_SingleBitSelection = function() {
	haxevx_vuex_core_VComponent.call(this);
	this["inheritAttrs"] = false;
};
$hxClasses["troshx.sos.vue.uifields.SingleBitSelection"] = troshx_sos_vue_uifields_SingleBitSelection;
troshx_sos_vue_uifields_SingleBitSelection.__name__ = ["troshx","sos","vue","uifields","SingleBitSelection"];
troshx_sos_vue_uifields_SingleBitSelection.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_SingleBitSelection.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		var _m_ = { };
		_m_["comp"] = new troshx_sos_vue_uifields_SingleSelection();
		return _m_;
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,isValidOptionAt: function(i) {
		var curBitmask = this.currentBitmask;
		var curValue = this.bitList[this.index];
		return (curBitmask & ~curValue & 1 << i) == 0;
	}
	,Template: function() {
		return "<comp v-bind=\"$" + "attrs\" :includeZeroOption=\"true\" :labels=\"$" + "attrs.labels\" :validateOptionFunc=\"isValidOptionAt\" :valueAtIndexFunc=\"shiftIndex\"></comp>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_SingleBitSelection;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.template = this.Template();
		this.methods = { shiftIndex : clsP.shiftIndex, isValidOptionAt : clsP.isValidOptionAt};
		this.props = { currentBitmask : { required : true, type : Number}, bitList : { required : true, type : Array}, index : { required : true, type : Number}};
	}
	,__class__: troshx_sos_vue_uifields_SingleBitSelection
});
var troshx_sos_vue_uifields_SingleSelection = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.SingleSelection"] = troshx_sos_vue_uifields_SingleSelection;
troshx_sos_vue_uifields_SingleSelection.__name__ = ["troshx","sos","vue","uifields","SingleSelection"];
troshx_sos_vue_uifields_SingleSelection.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_SingleSelection.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	valueAtIndex: function(i) {
		if(this.values != null) {
			return this.values[i];
		} else if(this.valueAtIndexFunc != null) {
			return this.valueAtIndexFunc(i);
		} else {
			return i;
		}
	}
	,Template: function() {
		return "<div :style=\"{pointerEvents:readonly ? 'none' : 'auto'}\">\r\n\t\t\t<span v-if=\"label\"><label>{{ label }}</label>:<br/></span>\r\n\t\t\t<select number v-model.number=\"obj[prop]\" :disabled=\"disabled\">\r\n\t\t\t\t<option v-if=\"includeZeroOption\" :value=\"0\">{{ zeroValueLabel }}</option> \r\n\t\t\t\t<option v-for=\"(li, i) in labels\" :value=\"valueAtIndex(i)\" :disabled=\"!(validateOptionFunc == null || validateOptionFunc(i))\">{{ li }}</option> \r\n\t\t\t</select>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_SingleSelection;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.methods = { valueAtIndex : clsP.valueAtIndex};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, values : { required : false, type : Array}, zeroValueLabel : { required : false, "default" : "", type : String}, disabled : { required : false, "default" : false, type : Boolean}, valueAtIndexFunc : { required : false, type : Function}, includeZeroOption : { required : false, "default" : false, type : Boolean}, validateOptionFunc : { required : false, type : Function}, labels : { required : true, type : Array}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_SingleSelection
});
var troshx_sos_vue_uifields_SingleSelectionStr = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.SingleSelectionStr"] = troshx_sos_vue_uifields_SingleSelectionStr;
troshx_sos_vue_uifields_SingleSelectionStr.__name__ = ["troshx","sos","vue","uifields","SingleSelectionStr"];
troshx_sos_vue_uifields_SingleSelectionStr.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_SingleSelectionStr.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	valueAtIndex: function(i) {
		if(this.values != null) {
			return this.values[i];
		} else {
			return this.labels[i];
		}
	}
	,Template: function() {
		return "<div>\r\n\t\t\t<span v-if=\"label\"><label>{{ label }}</label>:<br/></span>\r\n\t\t\t<select v-model=\"obj[prop]\" :disabled=\"disabled\">\r\n\t\t\t\t<option v-for=\"(li, i) in labels\" :value=\"valueAtIndex(i)\" :disabled=\"!(validateOptionFunc == null || validateOptionFunc(i))\">{{ li }}</option> \r\n\t\t\t</select>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_SingleSelectionStr;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.methods = { valueAtIndex : clsP.valueAtIndex};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, values : { required : false, type : Array}, disabled : { required : false, "default" : false, type : Boolean}, validateOptionFunc : { required : false, type : Function}, labels : { required : true, type : Array}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_SingleSelectionStr
});
var troshx_sos_vue_uifields_UI = function() { };
$hxClasses["troshx.sos.vue.uifields.UI"] = troshx_sos_vue_uifields_UI;
troshx_sos_vue_uifields_UI.__name__ = ["troshx","sos","vue","uifields","UI"];
troshx_sos_vue_uifields_UI.getComponents = function() {
	if(troshx_sos_vue_uifields_UI.COMPONENTS != null) {
		return troshx_sos_vue_uifields_UI.COMPONENTS;
	} else {
		return troshx_sos_vue_uifields_UI.COMPONENTS = troshx_sos_vue_uifields_UI.getNewSetOfComponents();
	}
};
troshx_sos_vue_uifields_UI.getNewSetOfComponents = function(excludeArray) {
	if(excludeArray == null) {
		excludeArray = false;
	}
	var dyn = { };
	if(!excludeArray) {
		dyn["ArrayOf"] = new troshx_sos_vue_uifields_ArrayOf();
		dyn["ArrayOfBits"] = new troshx_sos_vue_uifields_ArrayOfBits();
	}
	dyn["Bitmask"] = new troshx_sos_vue_uifields_Bitmask();
	dyn["FieldNumber"] = new troshx_sos_vue_uifields_FieldNumber();
	dyn["FieldInt"] = new troshx_sos_vue_uifields_FieldInt();
	dyn["FieldString"] = new troshx_sos_vue_uifields_FieldString();
	dyn["FieldTextArea"] = new troshx_sos_vue_uifields_FieldTextArea();
	dyn["SingleSelection"] = new troshx_sos_vue_uifields_SingleSelection();
	dyn["SingleSelectionStr"] = new troshx_sos_vue_uifields_SingleSelectionStr();
	dyn["SingleBitSelection"] = new troshx_sos_vue_uifields_SingleBitSelection();
	dyn["Money"] = new troshx_sos_vue_uifields_MoneyField();
	dyn["HitLocationSelector"] = new troshx_sos_vue_uifields_HitLocationSelector();
	dyn["HitLocationMultiSelector"] = new troshx_sos_vue_uifields_HitLocationMultiSelector();
	dyn["WealthAssetField"] = new troshx_sos_vue_uifields_WealthAssetField();
	dyn["ButtonCounter"] = new troshx_sos_vue_uifields_ButtonCounter();
	dyn["ButtonPermaPress"] = new troshx_sos_vue_uifields_ButtonPermaPress();
	return dyn;
};
troshx_sos_vue_uifields_UI.getTypeMapToComponentNames = function() {
	if(troshx_sos_vue_uifields_UI.TYPES != null) {
		return troshx_sos_vue_uifields_UI.TYPES;
	} else {
		return troshx_sos_vue_uifields_UI.TYPES = troshx_sos_vue_uifields_UI.getNewTypeMapToComponentNames();
	}
};
troshx_sos_vue_uifields_UI.getNewTypeMapToComponentNames = function() {
	return { "Array" : "ArrayOf", "ArrayOfBits" : "ArrayOfBits", "Bitmask" : "Bitmask", "Float" : "FieldNumber", "Int" : "FieldInt", "String" : "FieldString", "textarea" : "FieldTextArea", "SingleSelection" : "SingleSelection", "SingleSelectionStr" : "SingleSelectionStr", "SingleBitSelection" : "SingleBitSelection", "HitLocationSelector" : "HitLocationSelector", "HitLocationMultiSelector" : "HitLocationMultiSelector", "Money" : "Money", "WealthAssetAssign" : "WealthAssetField", "ButtonCounter" : "ButtonCounter", "ButtonPermaPress" : "ButtonPermaPress"};
};
var troshx_sos_vue_uifields_WealthAssetField = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.uifields.WealthAssetField"] = troshx_sos_vue_uifields_WealthAssetField;
troshx_sos_vue_uifields_WealthAssetField.__name__ = ["troshx","sos","vue","uifields","WealthAssetField"];
troshx_sos_vue_uifields_WealthAssetField.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_uifields_WealthAssetField.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_current: function() {
		return this.obj[this.prop];
	}
	,get_residueWealth: function() {
		var cw = this.current.worth;
		if(this.remainingWealth != null) {
			return this.remainingWealth + cw;
		} else {
			return 999;
		}
	}
	,Template: function() {
		return "<div class=\"wealth-asset-row\">\r\n\t\t\t<label>Name: <input type=\"text\" v-model=\"current.name\"></input></label>\r\n\t\t\t<label>Worth: <select :disabled=\"fixedWorth\" number v-model.number=\"current.worth\">\r\n\t\t\t\t\t<option :value=\"1\" :disabled=\"residueWealth < 1\">1W</option>\r\n\t\t\t\t\t<option :value=\"2\" :disabled=\"residueWealth < 2\">2W</option>\r\n\t\t\t\t\t<option :value=\"3\" :disabled=\"residueWealth < 3\">3W</option>\r\n\t\t\t\t</select>\r\n\t\t\t</label>\r\n\t\t\t<label v-if=\"!disableLiquidity\">Liquidate? <input type=\"checkbox\" v-model=\"current.liquidate\"></input></label>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_uifields_WealthAssetField;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { current : clsP.get_current, residueWealth : clsP.get_residueWealth};
		this.methods = { get_current : clsP.get_current, get_residueWealth : clsP.get_residueWealth};
		this.props = { label : { required : false, "default" : null, type : String}, prop : { required : true}, obj : { required : true}, disableLiquidity : { required : false, "default" : false, type : Boolean}, disabled : { required : false, "default" : false, type : Boolean}, fixedWorth : { required : false, "default" : false, type : Boolean}, remainingWealth : { required : false, type : Number}, readonly : { required : false, "default" : false, type : Boolean}};
	}
	,__class__: troshx_sos_vue_uifields_WealthAssetField
});
var troshx_sos_vue_widgets_BaseItemWidget = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.BaseItemWidget"] = troshx_sos_vue_widgets_BaseItemWidget;
troshx_sos_vue_widgets_BaseItemWidget.__name__ = ["troshx","sos","vue","widgets","BaseItemWidget"];
troshx_sos_vue_widgets_BaseItemWidget.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_BaseItemWidget.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Template: function() {
		return "<div>" + Type.getClassName(js_Boot.getClass(this)).split(".").pop() + "</div>";
	}
	,get_itemLabel: function() {
		return this.item.get_label();
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_BaseItemWidget;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { itemLabel : clsP.get_itemLabel};
		this.methods = { get_itemLabel : clsP.get_itemLabel};
		this.props = { item : { required : true, type : Object}, entryIndex : { required : false, type : Number}, parentAttr : { required : false}, entry : { required : true}};
	}
	,__class__: troshx_sos_vue_widgets_BaseItemWidget
});
var troshx_sos_vue_widgets_BoonBaneApplyDetails = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.BoonBaneApplyDetails"] = troshx_sos_vue_widgets_BoonBaneApplyDetails;
troshx_sos_vue_widgets_BoonBaneApplyDetails.__name__ = ["troshx","sos","vue","widgets","BoonBaneApplyDetails"];
troshx_sos_vue_widgets_BoonBaneApplyDetails.getSlug = function(name) {
	return "bb-detail-" + name.split(" ").join("-").toLowerCase();
};
troshx_sos_vue_widgets_BoonBaneApplyDetails.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_BoonBaneApplyDetails.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		return troshx_sos_vue_uifields_UI.getComponents();
	}
	,get_uiFields: function() {
		return this.assign.getUIFields();
	}
	,get_bb: function() {
		return this.assign.getBoonOrBane();
	}
	,get_qty: function() {
		return this.assign.getQty();
	}
	,get_cost: function() {
		return this.assign.getCost(this.assign.rank);
	}
	,get_titleheader: function() {
		return this.bb.name + (!this.ingame ? " [" + this.clampCost + (this.remainingPoints != null ? "/" + (this.remainingPoints + this.clampCost) : "") + "]" : "");
	}
	,get_clampCost: function() {
		return Math.max(this.cost,this.bb.costs[0]) | 0;
	}
	,get_locked: function() {
		return this.assign._forcePermanent;
	}
	,get_isCanceled: function() {
		return this.assign._canceled;
	}
	,get_typeMap: function() {
		return troshx_sos_vue_uifields_UI.getTypeMapToComponentNames();
	}
	,get_slug: function() {
		return "bb-detail-" + this.bb.name.split(" ").join("-").toLowerCase();
	}
	,Template: function() {
		return "\r\n\t\t\t<div class=\"bb-detail\" v-show=\"assign.__hasUIFields__ && !isCanceled\" :id=\"slug\">\r\n\t\t\t\t<h4>{{ titleheader }}</h4>\r\n\t\t\t\t<div>\t\r\n\t\t\t\t\t<div v-for=\"(li, i) in uiFields\" :is=\"typeMap[li.type]\" :obj=\"assign\" v-bind=\"li\" :key=\"li.prop\" v-on:callback=\"$" + "emit('callback', assign, li.prop, arguments[1])\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_BoonBaneApplyDetails;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.template = this.Template();
		this.computed = { uiFields : clsP.get_uiFields, bb : clsP.get_bb, qty : clsP.get_qty, cost : clsP.get_cost, titleheader : clsP.get_titleheader, clampCost : clsP.get_clampCost, locked : clsP.get_locked, isCanceled : clsP.get_isCanceled, typeMap : clsP.get_typeMap, slug : clsP.get_slug};
		this.methods = { get_uiFields : clsP.get_uiFields, get_bb : clsP.get_bb, get_qty : clsP.get_qty, get_cost : clsP.get_cost, get_titleheader : clsP.get_titleheader, get_clampCost : clsP.get_clampCost, get_locked : clsP.get_locked, get_isCanceled : clsP.get_isCanceled, get_typeMap : clsP.get_typeMap, get_slug : clsP.get_slug};
		this.props = { assign : { required : true, type : Object}, ingame : { required : true, type : Boolean}, remainingPoints : { required : false, type : Number}};
	}
	,__class__: troshx_sos_vue_widgets_BoonBaneApplyDetails
});
var troshx_sos_vue_widgets_GingkoTreeBrowser = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.GingkoTreeBrowser"] = troshx_sos_vue_widgets_GingkoTreeBrowser;
troshx_sos_vue_widgets_GingkoTreeBrowser.__name__ = ["troshx","sos","vue","widgets","GingkoTreeBrowser"];
troshx_sos_vue_widgets_GingkoTreeBrowser.get_MARKED = function() {
	return marked;
};
troshx_sos_vue_widgets_GingkoTreeBrowser.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_GingkoTreeBrowser.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		return { "treeview" : new troshx_sos_vue_treeview_TreeView()};
	}
	,Mounted: function() {
		this.loadDomain(this.defaultDomain);
	}
	,loadDomainClick: function() {
		this.loadDomain(this.requestedDomain);
	}
	,loadDomain: function(domainId) {
		this.requestEnteredDomain = domainId;
		this.isLoading = true;
		this.loadedDomain = "";
		var http = new haxe_Http("https://effuse-church.000webhostapp.com/curlgink.php").setParameter("id",domainId);
		http.onData = $bind(this,this.onDataReceived);
		http.onError = $bind(this,this.onErrorLoad);
		http.request();
	}
	,get_requestedDomain: function() {
		var dd = this.defaultDomain;
		if(this.requestEnteredDomain != "") {
			return this.requestEnteredDomain;
		} else {
			return dd;
		}
	}
	,onDataReceived: function(data) {
		this.isLoading = false;
		var gingkoData;
		try {
			gingkoData = JSON.parse(data);
		} catch( e ) {
			js_Browser.alert("Sorry, failed to parse domain!");
			return;
		}
		this.loadedDomain = this.requestedDomain;
		var _g1 = 0;
		var _g = gingkoData.length;
		while(_g1 < _g) {
			var i = _g1++;
			gingkoData[i].key = "_" + this.valueKeyCounter++;
			this.cleanNode(gingkoData[i]);
		}
		if(this.autoLoad != null) {
			var _g11 = 0;
			var _g2 = gingkoData.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				this.checkNodes(gingkoData[i1]);
			}
		}
		this.model = gingkoData;
		this.$emit("loaded-domain",this.loadedDomain);
		if(this.autoLoadNode != null) {
			Vue.nextTick($bind(this,this.attemptLoadAutoNode));
		} else if(this.autoLoad != null) {
			js_Browser.alert("Failed to find serializable node to load for ?autoload=" + this.autoLoad);
		}
	}
	,attemptLoadAutoNode: function() {
		if(this.autoLoadNode != null) {
			this.$emit("open",this.autoLoadNode.content,"(loaded from url)",$bind(this,this.disableOpenButton));
		} else {
			console.log("Missing autoload node for some reason...");
		}
		this.autoLoadNode = null;
	}
	,nodeGotContent: function(node) {
		return node.content != "";
	}
	,cleanNode: function(node) {
		if(node.children == null) {
			return;
		}
		if(node.children.length > 0) {
			node.children = node.children.filter($bind(this,this.nodeGotContent));
		}
		var _g1 = 0;
		var _g = node.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			node.children[i].key = "_" + this.valueKeyCounter++;
			this.cleanNode(node.children[i]);
		}
	}
	,checkNodes: function(node) {
		if(this.checkNode(node)) {
			return;
		}
		if(node.children == null) {
			return;
		}
		var _g1 = 0;
		var _g = node.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.checkNodes(node.children[i]);
		}
	}
	,setupNode: function(node) {
		node.key = "_" + this.valueKeyCounter++;
	}
	,checkNode: function(node) {
		if(node.children != null && node.children.length > 0 && (HxOverrides.substr(node.children[0].content,0,7) == "http://" || HxOverrides.substr(node.children[0].content,0,8) == "https://") && this.isSerializable(node)) {
			var urlParams = troshx_util_LibUtil.getURLQueryStringParams(node.children[0].content);
			if(urlParams.autoload == this.autoLoad) {
				this.autoLoadNode = node;
				return true;
			}
		}
		return false;
	}
	,cleanNodes: function(nodes) {
		return nodes.filter($bind(this,this.nodeGotContent));
	}
	,getFirstChild: function(arr) {
		return arr[0];
	}
	,onErrorLoad: function(data) {
		this.isLoading = false;
		js_Browser.alert("Failed to load domain!");
	}
	,get_curIsHeadingNode: function() {
		if(this.curSelectedNode != null && this.curSelectedNode.children != null && this.curSelectedNode.children.length != 0) {
			return this.isSerializable(this.curSelectedNode.children[0]);
		} else {
			return false;
		}
	}
	,get_curLandingNode: function() {
		if(this.curSelectedNode != null) {
			if(this.curIsHeadingNode) {
				return this.curSelectedNode.children[0];
			} else {
				return this.curSelectedNode;
			}
		} else {
			return null;
		}
	}
	,get_curLandingValue: function() {
		return this.curLandingNode.content;
	}
	,get_curSerializable: function() {
		var val = this.curSelectedNode != null ? this.curSelectedNode.content : null;
		if(val != null) {
			return this.isSerializableValue(val);
		} else {
			return false;
		}
	}
	,get_curLandingSerializable: function() {
		var val = this.curLandingNode;
		if(val != null) {
			return this.isSerializable(this.curLandingNode);
		} else {
			return false;
		}
	}
	,get_compiledMarkdown: function() {
		var val = this.curSelectedNode != null ? this.curSelectedNode.content : null;
		if(val != null && !this.curSerializable) {
			return marked(val,{ sanitize : true});
		} else {
			return "";
		}
	}
	,customLabelHandler: function(contents) {
		var lines = contents.split("\\n");
		var titleLineIndex = 0;
		var _g1 = 0;
		var _g = lines.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(StringTools.trim(lines[i]) != "") {
				break;
			}
			titleLineIndex = i;
		}
		contents = lines[titleLineIndex];
		contents = StringTools.trim(contents);
		var _this_r = new RegExp("^#*","".split("u").join(""));
		contents = contents.replace(_this_r,"");
		if(contents.length < this.maxLabelLength) {
			return contents;
		} else {
			return HxOverrides.substr(contents,0,this.maxLabelLength) + "...";
		}
	}
	,onTreeViewClick: function(node,parentNode) {
		this.curSelectedNode = node;
		this.curSelectedParentNode = parentNode;
	}
	,isSerializable: function(node) {
		return new EReg("^cy[0-9]*:","").match(node.content);
	}
	,isSerializableValue: function(content) {
		return new EReg("^cy[0-9]*:","").match(content);
	}
	,onOpenClick: function() {
		var curLandingNode = this.curLandingNode;
		if(curLandingNode == null) {
			return;
		}
		var targNodeNamer = curLandingNode != this.curSelectedNode ? this.curSelectedNode : this.curSelectedParentNode;
		this.$emit("open",curLandingNode.content,this.customLabelHandler(targNodeNamer.content),$bind(this,this.disableOpenButton));
	}
	,filterNodeHandler: function(node,parentNode) {
		if(this.availableTypes == null) {
			return true;
		}
		var chkSerializable = this.isSerializable(node);
		if(chkSerializable && this.availableTypes != null && !this.availableTypes[this.getSerializeContentType(node.content)]) {
			return false;
		}
		if(node.children == null || node.children.length > 1) {
			return true;
		}
		var c = node.children[0];
		chkSerializable = this.isSerializable(c);
		if(chkSerializable && this.availableTypes != null && !this.availableTypes[this.getSerializeContentType(c.content)]) {
			return false;
		}
		return true;
	}
	,getCustomIcon: function(node) {
		if((node.children == null || node.children.length == 0) && this.isSerializable(node)) {
			return this.getCustomIconForContent(node.content);
		} else if(node.children != null && node.children.length == 1 && this.isSerializable(node.children[0])) {
			return this.getCustomIconForContent(node.children[0].content);
		} else {
			return false;
		}
	}
	,areValidNodesHandler: function(nodes,parentNode) {
		if(nodes != null && ((nodes instanceof Array) && nodes.__enum__ == null) && (nodes.length > 1 || nodes.length == 1 && !this.isSerializable(nodes[0]))) {
			return !this.isSerializable(parentNode);
		} else {
			return false;
		}
	}
	,disableOpenButton: function() {
		var button = this.$refs.openButton;
		button.disabled = true;
	}
	,getCustomIconForContent: function(content) {
		var colonIndex = content.indexOf(":");
		var len = Std.parseInt(HxOverrides.substr(content,2,colonIndex));
		var sp = troshx_sos_vue_widgets_GingkoTreeBrowser.SERIALIZE_PREFIXES;
		var s = sp[HxOverrides.substr(content,colonIndex + 1,len)];
		if(s != null) {
			return s.icon;
		} else {
			return false;
		}
	}
	,get_curSelectedType: function() {
		if(this.curLandingNode == null) {
			return "";
		}
		var content = this.curLandingNode.content;
		var colonIndex = content.indexOf(":");
		var len = Std.parseInt(HxOverrides.substr(content,2,colonIndex));
		var sp = troshx_sos_vue_widgets_GingkoTreeBrowser.SERIALIZE_PREFIXES;
		var s = sp[HxOverrides.substr(content,colonIndex + 1,len)];
		if(s != null) {
			return s.name;
		} else {
			return "";
		}
	}
	,getSerializeContentType: function(content) {
		var colonIndex = content.indexOf(":");
		var len = Std.parseInt(HxOverrides.substr(content,2,colonIndex));
		return HxOverrides.substr(content,colonIndex + 1,len);
	}
	,onInputDomain: function(inputField) {
		if(inputField.value == "") {
			return;
		}
		this.requestEnteredDomain = inputField.value;
	}
	,get_treeviewStyle: function() {
		if(this.isLoading) {
			return { "pointer-events" : "none", "opacity" : 0.4};
		} else {
			return { };
		}
	}
	,onInputDomainBlur: function(inputField) {
	}
	,Template: function() {
		return "\r\n\t\t\t<div class=\"gingko-tree\">\r\n\t\t\t\t<div><span v-show=\"loadedDomain!=''\" ><input type=\"text\" style=\"display:inline-block;width:auto;max-width:80px;background-color:#f3f5f6\" readonly :value=\"loadedDomain\"></input> <i>loaded.</i></span><span style=\"margin-left:30px;display:inline-block\"><input type=\"text\" :disabled=\"isLoading\" :value=\"requestedDomain\" v-on:blur=\"onInputDomainBlur($" + "event.target)\" @input=\"onInputDomain($" + "event.target)\"></input><button v-on:click=\"loadDomainClick\" :disabled=\"isLoading\">Load Domain ID</button></span></div>\r\n\t\t\t\t<treeview :value.sync=\"curSelectedValue\" v-on:treeview_click=\"onTreeViewClick\" :disabled=\"isLoading\" \r\n\t\t\t\t\t:style=\"treeviewStyle\"\r\n\t\t\t\t\t\r\n\t\t\t\t\t:model=\"model\"\r\n\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\tlabelname=\"content\"\r\n\t\t\t\t\tvaluename=\"key\"\r\n\t\t\t\t\tchildren = \"children\" \r\n\t\t\t\t\t:customLabelHandler = \"customLabelHandler\"\r\n\t\t\t\t\t:filterNodeHandler = \"filterNodeHandler\"\r\n\t\t\t\t\t:getCustomIcon = \"getCustomIcon\"\r\n\t\t\t\t\t\r\n\t\t\t\t\t:areValidNodesHandler = \"areValidNodesHandler\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div class=\"markdown-view\">\r\n\t\t\t\t\t<div v-html=\"compiledMarkdown\" v-show=\"compiledMarkdown\"></div>\r\n\t\t\t\t\t<div v-show=\"curLandingSerializable\"><button v-on:click=\"onOpenClick\" ref=\"openButton\" :disabled=\"locked\">Open {{curSelectedType}}</button></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t";
	}
	,get_defaultDomain: function() {
		if(this.initialDomain != null) {
			return this.initialDomain;
		} else {
			return troshx_sos_vue_Globals.DOMAIN_INVENTORY;
		}
	}
	,Data: function() {
		return { requestEnteredDomain : "", curSelectedValue : null, curSelectedNode : null, loadedDomain : "", isLoading : false, curSelectedParentNode : null, valueKeyCounter : 0, autoLoadNode : null, model : []};
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_GingkoTreeBrowser;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.mounted = clsP.Mounted;
		this.template = this.Template();
		this.data = clsP.Data;
		this.computed = { requestedDomain : clsP.get_requestedDomain, curIsHeadingNode : clsP.get_curIsHeadingNode, curLandingNode : clsP.get_curLandingNode, curLandingValue : clsP.get_curLandingValue, curSerializable : clsP.get_curSerializable, curLandingSerializable : clsP.get_curLandingSerializable, compiledMarkdown : clsP.get_compiledMarkdown, curSelectedType : clsP.get_curSelectedType, treeviewStyle : clsP.get_treeviewStyle, defaultDomain : clsP.get_defaultDomain};
		this.methods = { loadDomainClick : clsP.loadDomainClick, loadDomain : clsP.loadDomain, get_requestedDomain : clsP.get_requestedDomain, onDataReceived : clsP.onDataReceived, attemptLoadAutoNode : clsP.attemptLoadAutoNode, nodeGotContent : clsP.nodeGotContent, cleanNode : clsP.cleanNode, checkNodes : clsP.checkNodes, setupNode : clsP.setupNode, checkNode : clsP.checkNode, cleanNodes : clsP.cleanNodes, getFirstChild : clsP.getFirstChild, onErrorLoad : clsP.onErrorLoad, get_curIsHeadingNode : clsP.get_curIsHeadingNode, get_curLandingNode : clsP.get_curLandingNode, get_curLandingValue : clsP.get_curLandingValue, get_curSerializable : clsP.get_curSerializable, get_curLandingSerializable : clsP.get_curLandingSerializable, get_compiledMarkdown : clsP.get_compiledMarkdown, customLabelHandler : clsP.customLabelHandler, onTreeViewClick : clsP.onTreeViewClick, isSerializable : clsP.isSerializable, isSerializableValue : clsP.isSerializableValue, onOpenClick : clsP.onOpenClick, filterNodeHandler : clsP.filterNodeHandler, getCustomIcon : clsP.getCustomIcon, areValidNodesHandler : clsP.areValidNodesHandler, disableOpenButton : clsP.disableOpenButton, getCustomIconForContent : clsP.getCustomIconForContent, get_curSelectedType : clsP.get_curSelectedType, getSerializeContentType : clsP.getSerializeContentType, onInputDomain : clsP.onInputDomain, get_treeviewStyle : clsP.get_treeviewStyle, onInputDomainBlur : clsP.onInputDomainBlur, get_defaultDomain : clsP.get_defaultDomain};
		this.props = { locked : { required : false, "default" : false, type : Boolean}, autoLoad : { required : false, type : String}, availableTypes : { required : false}, initialDomain : { required : false, type : String}, maxLabelLength : { required : false, "default" : 32, type : Number}};
	}
	,__class__: troshx_sos_vue_widgets_GingkoTreeBrowser
});
var troshx_sos_vue_widgets_InputName = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.InputName"] = troshx_sos_vue_widgets_InputName;
troshx_sos_vue_widgets_InputName.__name__ = ["troshx","sos","vue","widgets","InputName"];
troshx_sos_vue_widgets_InputName.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_InputName.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	emit: function(str) {
		this.$emit(str);
	}
	,get_label: function() {
		return this.item.get_label();
	}
	,Mounted: function() {
		var inputElem = this.$el;
		inputElem.value = this.item.get_label();
	}
	,setValidNameOfInput: function(inputElement) {
		var tarName = StringTools.trim(inputElement.value);
		var updated = false;
		if(tarName != "") {
			this.item.name = tarName;
			updated = true;
		}
		inputElement.value = this.label;
		if(updated) {
			this.$emit("updated");
		}
	}
	,Template: function() {
		return "<input type=\"text\" v-on:blur=\"setValidNameOfInput($event.target)\" v-on:focus=\"$event.target.value=item.name\" :value=\"label\" ></input>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_InputName;
		var clsP = cls.prototype;
		this.mounted = clsP.Mounted;
		this.template = this.Template();
		this.computed = { label : clsP.get_label};
		this.methods = { emit : clsP.emit, get_label : clsP.get_label, setValidNameOfInput : clsP.setValidNameOfInput};
		this.props = { item : { type : Object}};
	}
	,__class__: troshx_sos_vue_widgets_InputName
});
var troshx_sos_vue_widgets_InputNameQty = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.InputNameQty"] = troshx_sos_vue_widgets_InputNameQty;
troshx_sos_vue_widgets_InputNameQty.__name__ = ["troshx","sos","vue","widgets","InputNameQty"];
troshx_sos_vue_widgets_InputNameQty.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_InputNameQty.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	emit: function(str) {
		this.$emit(str);
	}
	,get_label: function() {
		var _this = this.itemQty;
		return _this.item.get_label() + (_this.attachments != null ? _this.getAttachmentsLabels() : "");
	}
	,Mounted: function() {
		var inputElem = this.$el;
		inputElem.value = this.itemQty.item.get_label();
	}
	,setValidNameOfInput: function(inputElement) {
		var tarName = StringTools.trim(inputElement.value);
		var updated = false;
		if(tarName != "" && (this.customValidateName == null || this.customValidateName(tarName,this.itemQty))) {
			this.itemQty.item.name = tarName;
			updated = true;
		}
		inputElement.value = this.label;
		if(updated) {
			this.$emit("updated");
		}
	}
	,Template: function() {
		return "<input type=\"text\" v-on:blur=\"setValidNameOfInput($event.target)\" v-on:focus=\"$event.target.value=itemQty.item.name\" ></input>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_InputNameQty;
		var clsP = cls.prototype;
		this.mounted = clsP.Mounted;
		this.template = this.Template();
		this.computed = { label : clsP.get_label};
		this.methods = { emit : clsP.emit, get_label : clsP.get_label, setValidNameOfInput : clsP.setValidNameOfInput};
		this.props = { customValidateName : { type : Function}, itemQty : { type : Object}};
	}
	,__class__: troshx_sos_vue_widgets_InputNameQty
});
var troshx_sos_vue_widgets_ModifierList = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_input_MixinInput.getInstance()];
};
$hxClasses["troshx.sos.vue.widgets.ModifierList"] = troshx_sos_vue_widgets_ModifierList;
troshx_sos_vue_widgets_ModifierList.__name__ = ["troshx","sos","vue","widgets","ModifierList"];
troshx_sos_vue_widgets_ModifierList.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_ModifierList.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		var dyn = troshx_sos_core_Modifier;
		var index = dyn[this.rowId];
		return { staticMod : troshx_sos_core_StaticModifier.create(index,"",0)};
	}
	,resetData: function() {
		var dyn = troshx_sos_core_Modifier;
		var index = dyn[this.rowId];
		this.staticMod = troshx_sos_core_StaticModifier.create(index,"",0);
	}
	,get_rowStatic: function() {
		var dyn = troshx_sos_core_Modifier;
		return this["char"].staticModifierTable[dyn[this.rowId]];
	}
	,get_rowSituational: function() {
		var dyn = troshx_sos_core_Modifier;
		return this["char"].situationalModifierTable[dyn[this.rowId]];
	}
	,get_list: function() {
		var arr = [];
		var statics = this.rowStatic;
		var situational = this.rowSituational;
		var _g1 = 0;
		var _g = statics.length;
		while(_g1 < _g) {
			var i = _g1++;
			var s = statics[i];
			if(!s.custom) {
				arr.push({ staticMod : s, name : s.name, custom : s.custom});
			}
		}
		var _g11 = 0;
		var _g2 = situational.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			arr.push({ name : situational[i1].get_name(), custom : false});
		}
		var _g12 = 0;
		var _g3 = statics.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var s1 = statics[i2];
			if(s1.custom) {
				arr.push({ staticMod : s1, name : s1.name, custom : s1.custom});
			}
		}
		return arr;
	}
	,get_enabledAddBtn: function() {
		return StringTools.trim(this.staticMod.name) != "";
	}
	,addStaticEntry: function() {
		var _this = this["char"];
		var modifier = this.staticMod;
		if(modifier != null) {
			var t = _this.staticModifierTable[modifier.index];
			t.push(modifier);
			var m = modifier.next;
			while(m != null) {
				t = _this.staticModifierTable[m.index];
				t.push(m);
				m = m.next;
			}
		}
		this.resetData();
	}
	,getStaticModStat: function(mod) {
		return (mod.multiply != 0 ? "x" + mod.multiply : "") + (mod.add != 0 ? (mod.add >= 0 ? "+" : "") + mod.add : "");
	}
	,deleteEntry: function(mod) {
		var _this = this["char"];
		var modifier = mod.staticMod;
		if(modifier != null) {
			var t = _this.staticModifierTable[modifier.index];
			var s = t.splice(t.indexOf(modifier),1);
			var m = modifier.next;
			while(m != null) {
				t = _this.staticModifierTable[m.index];
				s = t.splice(t.indexOf(m),1);
				m = m.next;
			}
		}
	}
	,Template: function() {
		return "<div>\r\n\t\t\t<ul class=\"modifiers\">\r\n\t\t\t\t<li v-for=\"(li, i) in list\" :class=\"{custom:li.custom}\">{{li.name}}<span v-if=\"li.staticMod!=null\"> ({{ getStaticModStat(li.staticMod) }})</span> <span v-if=\"li.custom\"><a href=\"javascript:;\" v-on:click=\"deleteEntry(li)\">[x]</a></span></li>\r\n\t\t\t</ul>\r\n\t\t\t<div v-if=\"editable\">\r\n\t\t\t\t<div v-if=\"staticMod != null\">\r\n\t\t\t\t\t<div><label>Name:<InputString :obj=\"staticMod\" prop=\"name\" /></label> <label>Add(+):<InputNumber :obj=\"staticMod\" prop=\"add\" /></label> <label>Multiply(x):<InputNumber :obj=\"staticMod\" prop=\"multiply\" :step=\"0.5\" /></label></div>\r\n\t\t\t\t\t<button :enabled=\"enabledAddBtn\" v-on:click=\"addStaticEntry\">Add Custom Modifier</button>\r\n\t\t\t\t<div>\r\n\t\t\t</div>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_ModifierList;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.template = this.Template();
		this.computed = { rowStatic : clsP.get_rowStatic, rowSituational : clsP.get_rowSituational, list : clsP.get_list, enabledAddBtn : clsP.get_enabledAddBtn};
		this.methods = { resetData : clsP.resetData, get_rowStatic : clsP.get_rowStatic, get_rowSituational : clsP.get_rowSituational, get_list : clsP.get_list, get_enabledAddBtn : clsP.get_enabledAddBtn, addStaticEntry : clsP.addStaticEntry, getStaticModStat : clsP.getStaticModStat, deleteEntry : clsP.deleteEntry};
		this.props = { baseCalc : { required : false, type : Number}, 'char' : { required : true, type : Object}, editable : { required : false, "default" : false, type : Boolean}, rowId : { required : true, type : String}};
	}
	,__class__: troshx_sos_vue_widgets_ModifierList
});
var troshx_sos_vue_widgets_SchoolSheetDetails = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.SchoolSheetDetails"] = troshx_sos_vue_widgets_SchoolSheetDetails;
troshx_sos_vue_widgets_SchoolSheetDetails.__name__ = ["troshx","sos","vue","widgets","SchoolSheetDetails"];
troshx_sos_vue_widgets_SchoolSheetDetails.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_SchoolSheetDetails.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Components: function() {
		return troshx_sos_vue_uifields_UI.getComponents();
	}
	,get_uiFields: function() {
		return this.bonuses.getUIFields();
	}
	,get_typeMap: function() {
		return troshx_sos_vue_uifields_UI.getTypeMapToComponentNames();
	}
	,Template: function() {
		return "\r\n\t\t\t<div class=\"school-sheet-bonuses\" v-show=\"bonuses.__hasUIFields__\">\r\n\t\t\t\t<div v-for=\"(li, i) in uiFields\" :is=\"typeMap[li.type]\" :obj=\"bonuses\" v-bind=\"li\" :key=\"li.prop\"></div>\r\n\t\t\t</div>\r\n\t\t";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_SchoolSheetDetails;
		var clsP = cls.prototype;
		this.components = this.Components();
		this.template = this.Template();
		this.computed = { uiFields : clsP.get_uiFields, typeMap : clsP.get_typeMap};
		this.methods = { get_uiFields : clsP.get_uiFields, get_typeMap : clsP.get_typeMap};
		this.props = { bonuses : { required : true, type : Object}};
	}
	,__class__: troshx_sos_vue_widgets_SchoolSheetDetails
});
var troshx_sos_vue_widgets_SelectHeld = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.SelectHeld"] = troshx_sos_vue_widgets_SelectHeld;
troshx_sos_vue_widgets_SelectHeld.__name__ = ["troshx","sos","vue","widgets","SelectHeld"];
troshx_sos_vue_widgets_SelectHeld.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_SelectHeld.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_item: function() {
		if(this.entry.weapon != null) {
			return this.entry.weapon;
		} else if(this.entry.shield != null) {
			return this.entry.shield;
		} else if(this.entry.armor != null) {
			return this.entry.armor;
		} else if(js_Boot.__instanceof(this.entry,troshx_sos_core_Armor)) {
			return this.entry;
		} else {
			return this.entry.item;
		}
	}
	,get_twoHanded: function() {
		return (this.item.flags & 1) != 0;
	}
	,holdItemHandler: function(itemEntry,held) {
		this.inventory.holdEquiped(itemEntry,held);
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,emit: function(str) {
		this.$emit(str);
	}
	,Template: function() {
		return "<select number :value=\"entry.held\" v-on:change=\"holdItemHandler(entry, $event.target.value)\"  >\r\n\t<option :value=\"0\">No</option>\r\n\t<option :value=\"1\" :disabled=\"twoHanded\">Master-hand</option>\r\n\t<option :value=\"2\" :disabled=\"twoHanded\">Off-hand</option>\r\n\t<option :value=\"3\">Both hands</option>\r\n</select>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_SelectHeld;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { item : clsP.get_item, twoHanded : clsP.get_twoHanded};
		this.methods = { get_item : clsP.get_item, get_twoHanded : clsP.get_twoHanded, holdItemHandler : clsP.holdItemHandler, shiftIndex : clsP.shiftIndex, emit : clsP.emit};
		this.props = { inventory : { type : Object}, entry : { }};
	}
	,__class__: troshx_sos_vue_widgets_SelectHeld
});
var troshx_sos_vue_widgets_SkillSubjectCreator = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.SkillSubjectCreator"] = troshx_sos_vue_widgets_SkillSubjectCreator;
troshx_sos_vue_widgets_SkillSubjectCreator.__name__ = ["troshx","sos","vue","widgets","SkillSubjectCreator"];
troshx_sos_vue_widgets_SkillSubjectCreator.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_SkillSubjectCreator.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return new troshx_sos_vue_widgets_SkillSubjectCreatorData();
	}
	,get_withinEditableScope: function() {
		var a = this.selectedSubject != "";
		var b = this.permaHash != null ? !this.permaHash[this.selectedSubject] : true;
		if(a) {
			return b;
		} else {
			return false;
		}
	}
	,onSelectSubjectChange: function() {
		if(this.editMode) {
			this.editFieldText = this.selectedSubject;
		}
		if(!(this.selectedSubject == "" || this.selectedSkill == "")) {
			if(this.skillValues[this.comboName] >= 0) {
				this.$emit("exists",this.selectedSkill,this.selectedSubject);
			}
		}
	}
	,notifyExistsIfNeeded: function() {
		if(this.selectedSubject == "" || this.selectedSkill == "") {
			return;
		}
		if(this.skillValues[this.comboName] >= 0) {
			this.$emit("exists",this.selectedSkill,this.selectedSubject);
		}
	}
	,onSelectSkillChange: function() {
		if(!(this.selectedSubject == "" || this.selectedSkill == "")) {
			if(this.skillValues[this.comboName] >= 0) {
				this.$emit("exists",this.selectedSkill,this.selectedSubject);
			}
		}
	}
	,onTouchEditField: function() {
	}
	,watch_editMode: function(editing) {
		if(!editing) {
			this.editFieldText = "";
		} else {
			this.editFieldText = this.selectedSubject;
		}
	}
	,deleteBtnClick: function() {
		var txt = this.selectedSubject;
		this.editFieldText = "";
		this.selectedSubject = "";
		var i = this.skillSubjects.indexOf(txt);
		if(i >= 0) {
			this.skillSubjects.splice(i,1);
		}
	}
	,onRenameBtnClick: function() {
		if(this.selectedSubject != this.editFieldText) {
			var txt = this.editFieldText;
			this.editFieldText = "";
			var i = this.skillSubjects.indexOf(this.selectedSubject);
			if(i >= 0) {
				Vue.set(this.skillSubjects,i,txt);
				this.selectedSubject = txt;
				var htmlSelect = this.$refs.selectSubject;
				htmlSelect.focus();
			}
		}
	}
	,onAddSkillClick: function() {
		this.$emit("addSkill",this.selectedSkill,this.selectedSubject);
	}
	,get_comboName: function() {
		return this.selectedSkill + " (" + this.selectedSubject + ")";
	}
	,onAddBtnClick: function() {
		var txt = this.editFieldText;
		this.skillSubjects.push(txt);
		this.editFieldText = "";
		this.selectedSubject = txt;
		var htmlSelect = this.$refs.selectSubject;
		htmlSelect.focus();
	}
	,get_renameButtonInvalid: function() {
		return this.isDeleteSubjectDisabled;
	}
	,get_isDeleteSubjectDisabled: function() {
		var ins = this.skillSubjectHash[this.selectedSubject];
		if(ins != null) {
			return ins.length > 0;
		} else {
			return false;
		}
	}
	,get_addButtonInvalid: function() {
		if(this.skillSubjects.indexOf(this.editFieldText) < 0) {
			return this.editFieldText == "";
		} else {
			return true;
		}
	}
	,get_isAddSkillDisabled: function() {
		var ss = this.selectedSubject;
		var skv = this.skillValues;
		if(!(this.selectedSkill == "" || ss == "")) {
			return skv[this.selectedSkill + " (" + ss + ")"] >= 0;
		} else {
			return true;
		}
	}
	,Template: function() {
		return "<div class=\"skill-subjects\">\r\n\t\t\t<div class=\"columner col-skills\">\r\n\t\t\t\t<h4>Skill: <span style=\"font-weight:normal;white-space:nowrap\">{{comboName}}</span></h4>\r\n\t\t\t\t<select size=\"5\" ref=\"selectSkill\" v-model=\"selectedSkill\" v-on:change=\"onSelectSkillChange\">\r\n\t\t\t\t\t<option v-for=\"(li, i) in skillList\" :key=\"li\" :value=\"li\">{{li}}</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<div><button :disabled=\"isAddSkillDisabled\" v-on:click=\"onAddSkillClick\">{{skillValues[comboName]>=0 ? \"Already Exists\" : \"^Add Skill Entry\"}}</button></div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"columner col-subject\">\r\n\t\t\t\t<h4>Specialisations:</h4>\r\n\t\t\t\t<select size=\"6\" ref=\"selectSubject\" v-model=\"selectedSubject\" v-on:change=\"onSelectSubjectChange\">\r\n\t\t\t\t\t<option v-for=\"(li, i) in skillSubjects\" :key=\"li\" :value=\"li\">{{li}}</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div class=\"columner col-add-subject\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4>Specialisation</h4>\r\n\t\t\t\t\t<label><input type=\"radio\" name=\"edit-mode\" :checked=\"!editMode\" v-on:click=\"editMode = false\"></input>New</label>\r\n\t\t\t\t\t<label><input type=\"radio\" name=\"edit-mode\" :checked=\"editMode\"  v-on:click=\"editMode = true\"></input>Edit</label>\r\n\t\t\t\t\t<button class=\"del\" :disabled=\"isDeleteSubjectDisabled\" v-show=\"withinEditableScope && editMode\" v-on:click=\"deleteBtnClick\">Del</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div><input type=\"text\" v-on:input=\"onTouchEditField\" v-model=\"editFieldText\" :disabled=\"editMode && !withinEditableScope\"></input></div>\r\n\t\t\t\t<div><button v-show=\"editMode && withinEditableScope\" v-on:click=\"onRenameBtnClick\" :disabled=\"renameButtonInvalid\">&lt;&lt;Rename</button><button v-show=\"!editMode\" v-on:click=\"onAddBtnClick\" :disabled=\"addButtonInvalid\">&lt;&lt;Add</button></div>\r\n\t\t\t</div>\r\n\t\t</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_SkillSubjectCreator;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.template = this.Template();
		this.computed = { withinEditableScope : clsP.get_withinEditableScope, comboName : clsP.get_comboName, renameButtonInvalid : clsP.get_renameButtonInvalid, isDeleteSubjectDisabled : clsP.get_isDeleteSubjectDisabled, addButtonInvalid : clsP.get_addButtonInvalid, isAddSkillDisabled : clsP.get_isAddSkillDisabled};
		this.methods = { get_withinEditableScope : clsP.get_withinEditableScope, onSelectSubjectChange : clsP.onSelectSubjectChange, notifyExistsIfNeeded : clsP.notifyExistsIfNeeded, onSelectSkillChange : clsP.onSelectSkillChange, onTouchEditField : clsP.onTouchEditField, watch_editMode : clsP.watch_editMode, deleteBtnClick : clsP.deleteBtnClick, onRenameBtnClick : clsP.onRenameBtnClick, onAddSkillClick : clsP.onAddSkillClick, get_comboName : clsP.get_comboName, onAddBtnClick : clsP.onAddBtnClick, get_renameButtonInvalid : clsP.get_renameButtonInvalid, get_isDeleteSubjectDisabled : clsP.get_isDeleteSubjectDisabled, get_addButtonInvalid : clsP.get_addButtonInvalid, get_isAddSkillDisabled : clsP.get_isAddSkillDisabled};
		this.props = { skillSubjects : { required : true, type : Array}, skillSubjectHash : { required : true}, permaHash : { required : false}, skillValues : { required : true}, skillList : { required : true, type : Array}};
		this.watch = { editMode : clsP.watch_editMode};
	}
	,__class__: troshx_sos_vue_widgets_SkillSubjectCreator
});
var troshx_sos_vue_widgets_SkillSubjectCreatorData = function() {
	this.selectedSkill = "";
	this.editFieldText = "";
	this.selectedSubject = "";
	this.editMode = false;
};
$hxClasses["troshx.sos.vue.widgets.SkillSubjectCreatorData"] = troshx_sos_vue_widgets_SkillSubjectCreatorData;
troshx_sos_vue_widgets_SkillSubjectCreatorData.__name__ = ["troshx","sos","vue","widgets","SkillSubjectCreatorData"];
troshx_sos_vue_widgets_SkillSubjectCreatorData.prototype = {
	__class__: troshx_sos_vue_widgets_SkillSubjectCreatorData
};
var troshx_sos_vue_widgets_WAmmoSpawner = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.WAmmoSpawner"] = troshx_sos_vue_widgets_WAmmoSpawner;
troshx_sos_vue_widgets_WAmmoSpawner.__name__ = ["troshx","sos","vue","widgets","WAmmoSpawner"];
troshx_sos_vue_widgets_WAmmoSpawner.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_WAmmoSpawner.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { ammoList : troshx_sos_core_Ammunition.getDefaultList(), arrowList : troshx_sos_core_Arrow.getDefaultList()};
	}
	,Template: function() {
		return "<div>\r\n\t<span v-for=\"(li, i) in filteredList\">{{ li.name }} <button class=\"add-btn\" v-on:click=\"addAmmo(li)\">+</button></span>\r\n</div>";
	}
	,get_combinedList: function() {
		var arr = [];
		var _g1 = 0;
		var _g = this.ammoList.length;
		while(_g1 < _g) {
			var i = _g1++;
			arr.push(this.ammoList[i]);
		}
		var _g11 = 0;
		var _g2 = this.arrowList.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			arr.push(this.arrowList[i1]);
		}
		return arr;
	}
	,get_filteredList: function() {
		var arr = [];
		var mask = this.mask;
		var list = this.combinedList;
		var _g1 = 0;
		var _g = list.length;
		while(_g1 < _g) {
			var i = _g1++;
			var w = list[i];
			if(mask == 0 || (mask & w.profs) != 0) {
				arr.push(w);
			}
		}
		return arr;
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WAmmoSpawner;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.template = this.Template();
		this.computed = { combinedList : clsP.get_combinedList, filteredList : clsP.get_filteredList};
		this.methods = { get_combinedList : clsP.get_combinedList, get_filteredList : clsP.get_filteredList};
		this.props = { mask : { required : false, "default" : 0, type : Number}, addAmmo : { required : true, type : Function}};
	}
	,__class__: troshx_sos_vue_widgets_WAmmoSpawner
});
var troshx_sos_vue_widgets_WAmmunition = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.WAmmunition"] = troshx_sos_vue_widgets_WAmmunition;
troshx_sos_vue_widgets_WAmmunition.__name__ = ["troshx","sos","vue","widgets","WAmmunition"];
troshx_sos_vue_widgets_WAmmunition.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_WAmmunition.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { list : troshx_sos_core_Ammunition.getDefaultList()};
	}
	,checkboxHandler: function(checkbox,i,targetObj,targetProp) {
		if(checkbox.checked) {
			targetObj[targetProp] |= 1 << i;
		} else {
			targetObj[targetProp] &= ~(1 << i);
		}
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,Template: function() {
		return "<div>\r\n\t<span v-for=\"(li, i) in list\" style=\"display:inline-block\" :key=\"i\">\r\n\t\t<label style=\"display:inline-block\"><input type=\"checkbox\" :value=\"shiftIndex(i)\" v-on:click=\"checkboxHandler($event.target, i, item.firearm, 'ammunitions')\" :checked=\"(shiftIndex(i)&item.firearm.ammunitions)!=0\"></input>{{li.name}}<span v-if=\"addAmmoMethod!=null\" :style=\"{visibility:(shiftIndex(i)&item.firearm.ammunitions)!=0 ?'visible':'hidden'}\">[<a href=\"javascript:;\" v-on:click.prevent.stopPropagation=\"addAmmoMethod(li)\">+</a>]</span></label>\r\n\t</span>\r\n</div>";
	}
	,get_addAmmoMethod: function() {
		if(this.addAmmo != null) {
			return this.addAmmo;
		} else {
			return this.parentAttr.addAmmo;
		}
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WAmmunition;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.template = this.Template();
		this.computed = { addAmmoMethod : clsP.get_addAmmoMethod};
		this.methods = { checkboxHandler : clsP.checkboxHandler, shiftIndex : clsP.shiftIndex, get_addAmmoMethod : clsP.get_addAmmoMethod};
		this.props = { item : { required : true, type : Object}, entryIndex : { required : false, type : Number}, parentAttr : { required : false}, entry : { required : true}, addAmmo : { required : false, type : Function}};
	}
	,__class__: troshx_sos_vue_widgets_WAmmunition
});
var troshx_sos_vue_widgets_WCoverage = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.WCoverage"] = troshx_sos_vue_widgets_WCoverage;
troshx_sos_vue_widgets_WCoverage.__name__ = ["troshx","sos","vue","widgets","WCoverage"];
troshx_sos_vue_widgets_WCoverage.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_WCoverage.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	checkboxHandler: function(checkbox,i) {
		var armor = this.armor;
		var hitLocations = this.hitLocations;
		var ider = hitLocations[i].id;
		if(checkbox.checked) {
			Vue.set(armor.coverage,ider,0);
		} else {
			Vue["delete"](armor.coverage,ider);
			if(armor.special != null) {
				armor.special.layerCoverage &= ~(1 << i);
				if(armor.special.hitModifier != null) {
					armor.special.hitModifier.locationMask &= ~(1 << i);
				}
			}
			if(armor.customise != null && armor.customise.hitLocationAllAVModifiers != null) {
				Vue["delete"](armor.customise.hitLocationAllAVModifiers,ider);
			}
		}
	}
	,get_isCustomBody: function() {
		if(this.customBody != null) {
			return this.customBody != troshx_sos_core_BodyChar.getInstance();
		} else {
			return false;
		}
	}
	,get_bodyChar: function() {
		if(!this.isCustomBody) {
			return troshx_sos_core_BodyChar.getInstance();
		} else {
			return this.customBody;
		}
	}
	,get_hitLocations: function() {
		if(!this.isCustomBody) {
			return troshx_sos_core_BodyChar.getInstance().hitLocations;
		} else {
			return this.customBody.hitLocations;
		}
	}
	,get_armor: function() {
		var obj = this.item;
		if(js_Boot.__instanceof(obj,troshx_sos_core_Armor)) {
			return obj;
		} else {
			return null;
		}
	}
	,isInnerChecked: function(i,flagIndex) {
		var hitLocations = this.hitLocations;
		return (this.armor.coverage[hitLocations[i].id] & 1 << flagIndex) != 0;
	}
	,innerCheckboxHandler: function(checkbox,i,flagIndex) {
		var armor = this.armor;
		var hitLocations = this.hitLocations;
		var ider = hitLocations[i].id;
		var curValue = armor.coverage[ider];
		if(checkbox.checked) {
			Vue.set(armor.coverage,ider,curValue | 1 << flagIndex);
		} else {
			Vue.set(armor.coverage,ider,curValue & ~(1 << flagIndex));
		}
	}
	,Template: function() {
		return "<div>\r\n\t<div class=\"coverage-list\">\r\n\t\t<div v-for=\"(li, i) in hitLocations\" :key=\"i\">\r\n\t\t\t<label><input type=\"checkbox\" v-on:click=\"checkboxHandler($event.target, i)\" :checked=\"item.coverage[li.get_uid()]!=null\"></input>{{i+1}}. {{li.name}}</label> &nbsp; <span class=\"symbols\" v-if=\"item.coverage[li.get_uid()]!=null\"><label>ϕ</label><input type=\"checkbox\" v-on:click=\"innerCheckboxHandler($event.target, i, 0)\" :checked=\"isInnerChecked(i,0)\"></input><label>*</label><input type=\"checkbox\" v-on:click=\"innerCheckboxHandler($event.target, i, 1)\" :checked=\"isInnerChecked(i,1)\"></input><label>t</label><input type=\"checkbox\" v-on:click=\"innerCheckboxHandler($event.target, i, 2)\" :checked=\"isInnerChecked(i,2)\"></input></span>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"legend\">\r\n\t\t<b>Legend:</b>\r\n\t\t<label>ϕ</label>: Weak spot,  <label>*</label>: Half base AV, <label>t</label>: Against thrusts only\r\n\t</div>\r\n</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WCoverage;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { isCustomBody : clsP.get_isCustomBody, bodyChar : clsP.get_bodyChar, hitLocations : clsP.get_hitLocations, armor : clsP.get_armor};
		this.methods = { checkboxHandler : clsP.checkboxHandler, get_isCustomBody : clsP.get_isCustomBody, get_bodyChar : clsP.get_bodyChar, get_hitLocations : clsP.get_hitLocations, get_armor : clsP.get_armor, isInnerChecked : clsP.isInnerChecked, innerCheckboxHandler : clsP.innerCheckboxHandler};
		this.props = { customBody : { required : false, type : Object}, item : { required : true, type : Object}, entryIndex : { required : false, type : Number}, parentAttr : { required : false}, entry : { required : true}};
	}
	,__class__: troshx_sos_vue_widgets_WCoverage
});
var troshx_sos_vue_widgets_WFirearmName = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.WFirearmName"] = troshx_sos_vue_widgets_WFirearmName;
troshx_sos_vue_widgets_WFirearmName.__name__ = ["troshx","sos","vue","widgets","WFirearmName"];
troshx_sos_vue_widgets_WFirearmName.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_WFirearmName.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { mechanismCache : null, selectedMechanismIndex : -1};
	}
	,Mounted: function() {
		this.selectedMechanismIndex = this.firingMechanism != null ? this.availableFiringMechanisms.indexOf(this.firingMechanism) : null;
	}
	,get_availableFiringMechanisms: function() {
		if(this.customFiringMechanisms != null) {
			return this.customFiringMechanisms.concat(troshx_sos_core_FiringMechanism.getDefaultList());
		} else {
			return troshx_sos_core_FiringMechanism.getDefaultList();
		}
	}
	,get_weapon: function() {
		var obj = this.item;
		if(js_Boot.__instanceof(obj,troshx_sos_core_Weapon)) {
			return obj;
		} else {
			return null;
		}
	}
	,get_firingMechanism: function() {
		if(this.weapon.firearm != null) {
			return this.weapon.firearm.firingMechanism;
		} else {
			return null;
		}
	}
	,watch_selectedMechanismIndex: function(newValue,oldValue) {
		var avail = this.availableFiringMechanisms;
		if(newValue >= 0) {
			this.weapon.firearm.firingMechanism = avail[newValue];
		} else {
			this.weapon.firearm.firingMechanism = null;
		}
	}
	,Template: function() {
		return "<div>\r\n\t<div v-if=\"!excludeName\"><label>Name:<input type=\"text\" v-model=\"item.name\"></input></label></div>\r\n\t<div>\r\n\t\t<label>Mechanism:</label>\r\n\t\t<br/>\r\n\t\t<select ref=\"domSelect\" number v-model=\"selectedMechanismIndex\">\r\n\t\t\t<option :value=\"-1\"></option>\r\n\t\t\t<option v-for=\"(li, i) in availableFiringMechanisms\" :value=\"i\">{{ li.name }}</option>\r\n\t\t</select>\r\n\t</div>\r\n</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WFirearmName;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.mounted = clsP.Mounted;
		this.template = this.Template();
		this.computed = { availableFiringMechanisms : clsP.get_availableFiringMechanisms, weapon : clsP.get_weapon, firingMechanism : clsP.get_firingMechanism};
		this.methods = { get_availableFiringMechanisms : clsP.get_availableFiringMechanisms, get_weapon : clsP.get_weapon, get_firingMechanism : clsP.get_firingMechanism, watch_selectedMechanismIndex : clsP.watch_selectedMechanismIndex};
		this.props = { item : { required : true, type : Object}, excludeName : { required : false, "default" : false, type : Boolean}, entryIndex : { required : false, type : Number}, customFiringMechanisms : { required : false, type : Array}, parentAttr : { required : false}, entry : { required : true}};
		this.watch = { selectedMechanismIndex : clsP.watch_selectedMechanismIndex};
	}
	,__class__: troshx_sos_vue_widgets_WFirearmName
});
var troshx_sos_vue_widgets_WMeleeAtk = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_input_MixinInput.getInstance()];
};
$hxClasses["troshx.sos.vue.widgets.WMeleeAtk"] = troshx_sos_vue_widgets_WMeleeAtk;
troshx_sos_vue_widgets_WMeleeAtk.__name__ = ["troshx","sos","vue","widgets","WMeleeAtk"];
troshx_sos_vue_widgets_WMeleeAtk.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_WMeleeAtk.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	get_damageTypeLabels: function() {
		return troshx_sos_core_DamageType.getFlagLabels();
	}
	,Template: function() {
		return "<div>\r\n\t<div style=\"width:50%;display:inline-block\">\r\n\t\t<label>TN:<br/>\r\n\t\t\t<InputInt v-if=\"!thrusting\" :obj=\"item\" prop=\"atnS\" style=\"width:100%\"/>\r\n\t\t\t<InputInt v-if=\"thrusting\" :obj=\"item\" prop=\"atnT\" style=\"width:100%\"/>\r\n\t\t</label>\r\n\t</div><div style=\"width:50%;display:inline-block\">\r\n\t\t<label>Damage:<br/>\r\n\t\t\t<InputInt v-if=\"!thrusting\" :obj=\"item\" prop=\"damageS\" style=\"width:100%\" />\r\n\t\t\t<InputInt v-if=\"thrusting\" :obj=\"item\" prop=\"damageT\" style=\"width:100%\" />\r\n\t\t</label>\r\n\t</div>\r\n\t<div>\r\n\t\t<label>Damage Type:</label>\r\n\t\t<select v-if=\"!thrusting\" number v-model.number=\"item.damageTypeS\">\r\n\t\t\t<option v-for=\"(label, index) in damageTypeLabels\" :value=\"index\" :key=\"index\">{{ label }}</option>\r\n\t\t</select>\r\n\t\t<select v-if=\"thrusting\" number v-model.number=\"item.damageTypeT\">\r\n\t\t\t<option v-for=\"(label, index) in damageTypeLabels\" :value=\"index\" :key=\"index\">{{ label }}</option>\r\n\t\t</select>\r\n\t</div>\r\n\t\r\n</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WMeleeAtk;
		var clsP = cls.prototype;
		this.template = this.Template();
		this.computed = { damageTypeLabels : clsP.get_damageTypeLabels};
		this.methods = { get_damageTypeLabels : clsP.get_damageTypeLabels};
		this.props = { item : { required : true, type : Object}, entryIndex : { required : false, type : Number}, parentAttr : { required : false}, entry : { required : true}, thrusting : { required : true, type : Boolean}};
	}
	,__class__: troshx_sos_vue_widgets_WMeleeAtk
});
var troshx_sos_vue_widgets_WMeleeDef = function() {
	troshx_sos_vue_widgets_BaseItemWidget.call(this);
	this.mixins = [troshx_sos_vue_input_MixinInput.getInstance()];
};
$hxClasses["troshx.sos.vue.widgets.WMeleeDef"] = troshx_sos_vue_widgets_WMeleeDef;
troshx_sos_vue_widgets_WMeleeDef.__name__ = ["troshx","sos","vue","widgets","WMeleeDef"];
troshx_sos_vue_widgets_WMeleeDef.__super__ = troshx_sos_vue_widgets_BaseItemWidget;
troshx_sos_vue_widgets_WMeleeDef.prototype = $extend(troshx_sos_vue_widgets_BaseItemWidget.prototype,{
	Template: function() {
		return "<div>\r\n\t<div style=\"width:50%;display:inline-block\">\r\n\t\t<label>DTN:<br/>\r\n\t\t\t<InputInt :obj=\"item\" prop=\"dtn\" style=\"width:100%\"></InputInt>\r\n\t\t</label>\r\n\t</div><div style=\"width:50%;display:inline-block\">\r\n\t\t<label>Guard:<br/>\r\n\t\t\t<InputInt :obj=\"item\" prop=\"guard\" style=\"width:100%\"></InputInt>\r\n\t\t</label>\r\n\t</div>\r\n</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WMeleeDef;
		var clsP = cls.prototype;
		troshx_sos_vue_widgets_BaseItemWidget.prototype._Init.call(this);
		this.template = this.Template();
	}
	,__class__: troshx_sos_vue_widgets_WMeleeDef
});
var troshx_sos_vue_widgets_WMissileAtk = function() {
	troshx_sos_vue_widgets_BaseItemWidget.call(this);
	this.mixins = [troshx_sos_vue_input_MixinInput.getInstance()];
};
$hxClasses["troshx.sos.vue.widgets.WMissileAtk"] = troshx_sos_vue_widgets_WMissileAtk;
troshx_sos_vue_widgets_WMissileAtk.__name__ = ["troshx","sos","vue","widgets","WMissileAtk"];
troshx_sos_vue_widgets_WMissileAtk.__super__ = troshx_sos_vue_widgets_BaseItemWidget;
troshx_sos_vue_widgets_WMissileAtk.prototype = $extend(troshx_sos_vue_widgets_BaseItemWidget.prototype,{
	get_damageTypeLabels: function() {
		return troshx_sos_core_DamageType.getFlagLabels();
	}
	,Template: function() {
		return "<div>\r\n\t<div style=\"width:50%;display:inline-block\">\r\n\t\t<label>TN:<br/>\r\n\t\t\t<InputInt :obj=\"item\" prop=\"atnM\" style=\"width:100%\"></InputInt>\r\n\t\t</label>\r\n\t</div><div style=\"width:50%;display:inline-block\">\r\n\t\t<label>Damage:<br/>\r\n\t\t\t<InputInt :obj=\"item\" prop=\"damageM\" style=\"width:100%\"></InputInt>\r\n\t\t</label>\r\n\t</div>\r\n\t<div>\r\n\t\t<label>Damage Type:</label>\r\n\t\t<select number v-model.number=\"item.damageTypeM\">\r\n\t\t\t<option v-for=\"(label, index) in damageTypeLabels\" :value=\"index\" :key=\"index\">{{ label }}</option>\r\n\t\t</select>\r\n\t</div>\r\n</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WMissileAtk;
		var clsP = cls.prototype;
		troshx_sos_vue_widgets_BaseItemWidget.prototype._Init.call(this);
		this.template = this.Template();
		haxevx_vuex_core_VxMacroUtil.dynamicSetOverwrite(this.computed != null ? this.computed : this.computed = { },{ damageTypeLabels : clsP.get_damageTypeLabels});
		haxevx_vuex_core_VxMacroUtil.dynamicSetOverwrite(this.methods != null ? this.methods : this.methods = { },{ get_damageTypeLabels : clsP.get_damageTypeLabels});
	}
	,__class__: troshx_sos_vue_widgets_WMissileAtk
});
var troshx_sos_vue_widgets_WProf = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.WProf"] = troshx_sos_vue_widgets_WProf;
troshx_sos_vue_widgets_WProf.__name__ = ["troshx","sos","vue","widgets","WProf"];
troshx_sos_vue_widgets_WProf.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_WProf.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Mounted: function() {
		var weap = this.weapon;
		if(weap.ranged) {
			this.rangedFlags = weap.profs;
			this.ranged = true;
			this.isAmmo = weap.isAmmo && weap.ranged;
		} else {
			this.meleeFlags = weap.profs;
			this.ranged = false;
		}
	}
	,get_weapon: function() {
		var obj = this.item;
		if(js_Boot.__instanceof(obj,troshx_sos_core_Weapon)) {
			return obj;
		} else {
			return null;
		}
	}
	,get_gotCustomColumn: function() {
		return this.customWidth;
	}
	,getProfsOfTypeIfAny: function(cArr,type) {
		if(cArr != null) {
			var arr = [];
			var _g1 = 0;
			var _g = cArr.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(cArr[i].type == type) {
					arr.push(cArr[i]);
				}
			}
			if(arr.length == 0) {
				return null;
			}
			return arr;
		}
		return null;
	}
	,get_meleeCustomProfs: function() {
		return this.getProfsOfTypeIfAny(this.customProfs,0);
	}
	,get_rangedCustomProfs: function() {
		return this.getProfsOfTypeIfAny(this.customProfs,1);
	}
	,get_curMeleeCustomProfs: function() {
		var hasCustom = this.weapon.profsCustom != null;
		if(hasCustom) {
			return this.getProfsOfTypeIfAny(this.weapon.profsCustom.list,0);
		} else {
			return null;
		}
	}
	,get_curRangedCustomProfs: function() {
		var hasCustom = this.weapon.profsCustom != null;
		if(hasCustom) {
			return this.getProfsOfTypeIfAny(this.weapon.profsCustom.list,1);
		} else {
			return null;
		}
	}
	,Data: function() {
		return new troshx_sos_vue_widgets_WProfData();
	}
	,Template: function() {
		return "<div style=\"vertical-align:top\" class=\"widget-prof\">\r\n\t<div style=\"width:50%;display:block;float:left\">\r\n\t\t<div :class=\"{columner:gotCustomColumn}\">\r\n\t\t\t<div><label><input type=\"radio\" :checked=\"!ranged\" v-on:click=\"ranged=false\"></input><b>Melee:</b></label></div>\r\n\t\t\t<div v-for=\"(li,i) in meleeProfs\" :key=\"i\" class=\"listitem\" :class=\"{disabled:ranged}\">\r\n\t\t\t\t<label><input type=\"checkbox\" :disabled=\"ranged\" :checked=\"(shiftIndex(i) & meleeFlags) !=0\" v-on:click=\"checkMelee($event.target,i)\"></input>{{li.name}}</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div :class=\"{columner:gotCustomColumn}\" v-if=\"gotCustomColumn && meleeCustomProfs!=null\">\r\n\t\t\t<div class=\"custom-li\" v-for=\"(li, i) in curMeleeCustomProfs\">\r\n\t\t\t\t{{ li.name }}\r\n\t\t\t\t<button v-on:click=\"deleteCustomProf(li)\">X</button>\r\n\t\t\t</div>\r\n\t\t\t<select ref=\"selectCustomMelee\" :value=\"0\" number>\r\n\t\t\t\t<option value=\"0\" style=\"font-style:italics;color:#999999\">Add custom...</option>\r\n\t\t\t\t<option v-for=\"(li, i) in meleeCustomProfs\" v-on:click=\"addCustomProf(false, i)\" >{{ li.name }}</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class=\"clear:both\" v-if=\"gotCustomColumn\"></div>\r\n\t</div><div style=\"width:50%;display:block;float:left\">\r\n\t\t<div :class=\"{columner:gotCustomColumn}\">\r\n\t\t\t<div v-if=\"gotCustomColumn && rangedCustomProfs!=null\">\r\n\t\t\t\t<div class=\"custom-li\" v-for=\"(li, i) in curRangedCustomProfs\">\r\n\t\t\t\t\t{{ li.name }}\r\n\t\t\t\t\t<button v-on:click=\"deleteCustomProf(li)\">X</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<select ref=\"selectCustomRanged\" :value=\"0\" number>\r\n\t\t\t\t\t<option value=\"0\">Add custom...</option>\r\n\t\t\t\t\t<option v-for=\"(li, i) in rangedCustomProfs\" v-on:click=\"addCustomProf(false, i)\" >{{ li.name }}</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t<div><label><input type=\"radio\" :checked=\"ranged\" v-on:click=\"ranged=true\"></input><b>Ranged:</b></label></div>\r\n\t\t\t<div v-for=\"(li,i) in rangedProfs\" :key=\"i\" class=\"listitem\" :class=\"{disabled:!ranged}\">\r\n\t\t\t\t<label><input type=\"checkbox\" :disabled=\"!ranged\" :checked=\"(shiftIndex(i) & rangedFlags) !=0\" v-on:click=\"checkRanged($event.target,i)\"></input>{{li.name}}</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div :class=\"{columner:gotCustomColumn}\">\r\n\t\t\t<div v-if=\"rangedCustomProfs !=null\">\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<hr/>\r\n\t\t\t<div class=\"listitem\" :class=\"{disabled:!ranged}\"><label>Is Ammo^<input type=\"checkbox\" v-model=\"isAmmo\"></input></label></div>\r\n\t\t\t<hr/>\r\n\t\t\t<button v-on:click=\"confirm()\" :disabled=\"confirmBtnDisabled\">Confirm<span v-show=\"showBtnArrows\"> &gt;&gt;</span></button>\r\n\t\t</div>\r\n\t\t<div class=\"clear:both\" v-if=\"gotCustomColumn\"></div>\r\n\t</div>\r\n\t<div style=\"clear:both\"></div>\r\n</div>";
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,checkMelee: function(input,index) {
		if(input.checked) {
			this.meleeFlags |= 1 << index;
		} else {
			this.meleeFlags &= ~(1 << index);
		}
	}
	,checkRanged: function(input,index) {
		if(input.checked) {
			this.rangedFlags |= 1 << index;
		} else {
			this.rangedFlags &= ~(1 << index);
		}
	}
	,deleteCustomProf: function(prof) {
		var w = this.weapon;
		if(w.profsCustom == null) {
			return false;
		}
		return w.profsCustom.splicedAgainst(prof);
	}
	,confirm: function() {
		if(this.confirmBtnDisabled) {
			return;
		}
		var weap = this.weapon;
		if(this.ranged) {
			weap.isAmmo = this.isAmmo;
			weap.profs = this.rangedFlags;
			if((weap.profs & 4) != 0) {
				if(weap.crossbow == null) {
					weap.crossbow = new troshx_sos_core_Crossbow();
				}
			}
			if((weap.profs & 8) != 0) {
				if(weap.firearm == null) {
					weap.firearm = new troshx_sos_core_Firearm();
				}
			}
		} else {
			weap.isAmmo = false;
			weap.profs = this.meleeFlags;
		}
		weap.ranged = this.ranged;
		if(this.curWidgetRequest != null) {
			this.curWidgetRequest.index = 0;
			this.curWidgetRequest.type = "";
		}
	}
	,myBowSlingMask: function() {
		return 3;
	}
	,get_showBtnArrows: function() {
		var a = this.weapon.ranged != this.ranged;
		var b = this.weapon.ranged && this.weapon.isAmmo != this.isAmmo;
		var c = false;
		var alwaysNot = this.weapon.ranged && this.isAmmo == true && this.weapon.isAmmo == this.isAmmo;
		if(this.ranged) {
			var flags1 = this.rangedFlags;
			flags1 |= (flags1 & 3) != 0 ? 3 : 0;
			var flags2 = this.weapon.profs;
			flags2 |= (flags2 & 3) != 0 ? 3 : 0;
			c = (flags1 ^ flags2) != 0;
		}
		if(a || b || c) {
			return !alwaysNot;
		} else {
			return false;
		}
	}
	,get_confirmBtnDisabled: function() {
		var meleeFlags = this.meleeFlags;
		var rangedFlags = this.rangedFlags;
		if(this.ranged) {
			return rangedFlags == 0;
		} else {
			return meleeFlags == 0;
		}
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WProf;
		var clsP = cls.prototype;
		this.mounted = clsP.Mounted;
		this.data = clsP.Data;
		this.template = this.Template();
		this.computed = { weapon : clsP.get_weapon, gotCustomColumn : clsP.get_gotCustomColumn, meleeCustomProfs : clsP.get_meleeCustomProfs, rangedCustomProfs : clsP.get_rangedCustomProfs, curMeleeCustomProfs : clsP.get_curMeleeCustomProfs, curRangedCustomProfs : clsP.get_curRangedCustomProfs, showBtnArrows : clsP.get_showBtnArrows, confirmBtnDisabled : clsP.get_confirmBtnDisabled};
		this.methods = { get_weapon : clsP.get_weapon, get_gotCustomColumn : clsP.get_gotCustomColumn, getProfsOfTypeIfAny : clsP.getProfsOfTypeIfAny, get_meleeCustomProfs : clsP.get_meleeCustomProfs, get_rangedCustomProfs : clsP.get_rangedCustomProfs, get_curMeleeCustomProfs : clsP.get_curMeleeCustomProfs, get_curRangedCustomProfs : clsP.get_curRangedCustomProfs, shiftIndex : clsP.shiftIndex, checkMelee : clsP.checkMelee, checkRanged : clsP.checkRanged, deleteCustomProf : clsP.deleteCustomProf, confirm : clsP.confirm, myBowSlingMask : clsP.myBowSlingMask, get_showBtnArrows : clsP.get_showBtnArrows, get_confirmBtnDisabled : clsP.get_confirmBtnDisabled};
		this.props = { item : { required : true, type : Object}, rangedProfs : { type : Array}, entryIndex : { required : false, type : Number}, parentAttr : { required : false}, curWidgetRequest : { required : false}, meleeProfs : { type : Array}, customWidth : { required : false, "default" : false, type : Boolean}, entry : { required : true}, customProfs : { required : false, type : Array}};
	}
	,__class__: troshx_sos_vue_widgets_WProf
});
var troshx_sos_vue_widgets_WProfData = function() {
	this.isAmmo = false;
	this.rangedFlags = 0;
	this.meleeFlags = 0;
	this.ranged = false;
};
$hxClasses["troshx.sos.vue.widgets.WProfData"] = troshx_sos_vue_widgets_WProfData;
troshx_sos_vue_widgets_WProfData.__name__ = ["troshx","sos","vue","widgets","WProfData"];
troshx_sos_vue_widgets_WProfData.prototype = {
	__class__: troshx_sos_vue_widgets_WProfData
};
var troshx_sos_vue_widgets_WSpanTools = function() {
	haxevx_vuex_core_VComponent.call(this);
};
$hxClasses["troshx.sos.vue.widgets.WSpanTools"] = troshx_sos_vue_widgets_WSpanTools;
troshx_sos_vue_widgets_WSpanTools.__name__ = ["troshx","sos","vue","widgets","WSpanTools"];
troshx_sos_vue_widgets_WSpanTools.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_WSpanTools.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { list : troshx_sos_core_SpanningTool.getDefaultList()};
	}
	,checkboxHandler: function(checkbox,i,targetObj,targetProp) {
		if(checkbox.checked) {
			targetObj[targetProp] |= 1 << i;
		} else {
			targetObj[targetProp] &= ~(1 << i);
		}
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,Template: function() {
		return "<div>\r\n\t<span v-for=\"(li, i) in list\" :key=\"i\">\r\n\t\t<label style=\"display:inline-block\"><input type=\"checkbox\" :value=\"shiftIndex(i)\" v-on:click=\"checkboxHandler($event.target, i, item.crossbow, 'spanningTools')\" :checked=\"(shiftIndex(i)&item.crossbow.spanningTools)!=0\"></input>{{li.name}}<span :style=\"{visibility:(shiftIndex(i)&item.crossbow.spanningTools)!=0 ?'visible':'hidden'}\">[<a href=\"javascript:;\" v-on:click.prevent.stopPropagation=\"\">+</a>]</span></label>\r\n\t</span>\r\n</div>";
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WSpanTools;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.template = this.Template();
		this.methods = { checkboxHandler : clsP.checkboxHandler, shiftIndex : clsP.shiftIndex};
		this.props = { item : { required : true, type : Object}, entryIndex : { required : false, type : Number}, parentAttr : { required : false}, entry : { required : true}};
	}
	,__class__: troshx_sos_vue_widgets_WSpanTools
});
var troshx_sos_vue_widgets_WTags = function() {
	haxevx_vuex_core_VComponent.call(this);
	this.mixins = [troshx_sos_vue_input_MixinInput.getInstance()];
};
$hxClasses["troshx.sos.vue.widgets.WTags"] = troshx_sos_vue_widgets_WTags;
troshx_sos_vue_widgets_WTags.__name__ = ["troshx","sos","vue","widgets","WTags"];
troshx_sos_vue_widgets_WTags.__super__ = haxevx_vuex_core_VComponent;
troshx_sos_vue_widgets_WTags.prototype = $extend(haxevx_vuex_core_VComponent.prototype,{
	Data: function() {
		return { meleeSpecialCache : null, missileSpecialCache : null, armorSpecialCache : null, armorSpecialHitModifierCache : null, customise : null, customMeleeCache : null, customiseArmor : null, restoreOriginal : false, armorWornWith : null};
	}
	,Mounted: function() {
		this.updateWeaponStates();
		this.updateArmorStates();
	}
	,updateArmorStates: function() {
		var armor = this.armor;
		if(armor != null) {
			if(armor.customise == null) {
				this.customiseArmor = new troshx_sos_core_ArmorCustomise();
				this.customiseArmor.original = armor;
			}
		}
	}
	,updateWeaponStates: function() {
		if(this.firearmAmmoCapable && this.weapon.firearm == null) {
			this.weapon.firearm = new troshx_sos_core_Firearm();
		}
		if(this.crossbowAmmoCapable && this.weapon.crossbow == null) {
			this.weapon.crossbow = new troshx_sos_core_Crossbow();
		}
		if(this.weapon != null) {
			var weap = this.weapon;
			if(weap.customise == null) {
				this.customise = new troshx_sos_core_WeaponCustomise();
				this.customise.original = weap;
			}
		}
	}
	,watch_weapon: function(newValue,oldValue) {
		this.updateWeaponStates();
	}
	,get_currentCustomise: function() {
		if(this.weapon.customise != null) {
			return this.weapon.customise;
		} else {
			return this.customise;
		}
	}
	,get_currentArmorCustomise: function() {
		if(this.armor.customise != null) {
			return this.armor.customise;
		} else {
			return this.customiseArmor;
		}
	}
	,get_isEnteredItem: function() {
		if(this.entryIndex != null) {
			return this.entryIndex >= 0;
		} else {
			return false;
		}
	}
	,doRestoreOriginal: function() {
		var origWeapon = this.weapon.customise.original;
		if(origWeapon == null) {
			throw new js__$Boot_HaxeError("Exception original weapon not found!");
		}
		this.restoreOriginal = false;
		this.entry["weapon"] = origWeapon;
	}
	,doRestoreOriginalArmor: function() {
		var origArmor = this.armor.customise.original;
		if(origArmor == null) {
			throw new js__$Boot_HaxeError("Exception original armor not found!");
		}
		this.restoreOriginal = false;
		this.entry["armor"] = origArmor;
	}
	,assignWeaponCustomisation: function() {
		var weap = this.weapon;
		weap.customise = null;
		var curCustom = this.currentCustomise;
		var serializer = new haxe_Serializer();
		serializer.serialize(weap);
		var unserializer = new haxe_Unserializer(serializer.toString());
		weap = unserializer.unserialize();
		weap.customise = curCustom;
		this.customise = null;
		this.entry["weapon"] = weap;
	}
	,assignArmorCustomisation: function() {
		var armor = this.armor;
		armor.customise = null;
		var curCustom = this.currentArmorCustomise;
		var serializer = new haxe_Serializer();
		serializer.serialize(armor);
		var unserializer = new haxe_Unserializer(serializer.toString());
		armor = unserializer.unserialize();
		armor.customise = curCustom;
		this.customiseArmor = null;
		this.entry["armor"] = armor;
	}
	,get_armorCrestLabels: function() {
		var arr = [];
		arr.push("Identifying");
		arr.push("Intimidating");
		arr.push("Ruthlessly Fashionable");
		return arr;
	}
	,shiftIndex: function(i) {
		return 1 << i;
	}
	,get_canRegisterCustomisation: function() {
		return StringTools.trim(this.currentCustomise.name) != "";
	}
	,get_canRegisterArmorCustomisation: function() {
		return StringTools.trim(this.currentArmorCustomise.name) != "";
	}
	,setCustomiseNameInput: function(inputElement) {
		var tarName = StringTools.trim(inputElement.value);
		if(tarName != "") {
			this.currentCustomise.name = tarName;
		}
		inputElement.value = this.currentCustomise.name;
	}
	,setArmorCustomiseNameInput: function(inputElement) {
		var tarName = StringTools.trim(inputElement.value);
		if(tarName != "") {
			this.armor.customise.name = tarName;
		}
		inputElement.value = this.armor.customise.name;
	}
	,withinItemFlagRange: function(i) {
		var mask = this.shield != null ? -2 : -4;
		return (1 << i & mask) != 0;
	}
	,get_hasStrap: function() {
		return (this.item.flags & 2) != 0;
	}
	,get_handInteractable: function() {
		if(this.entry.held != null) {
			return this.entry.held == 0;
		} else {
			return true;
		}
	}
	,get_firearmAmmo: function() {
		if(this.firearmAmmoCapable) {
			return this.weapon.firearm != null;
		} else {
			return false;
		}
	}
	,get_crossbowAmmo: function() {
		if(this.crossbowAmmoCapable) {
			return this.weapon.crossbow != null;
		} else {
			return false;
		}
	}
	,get_firearmAmmoCapable: function() {
		if(this.isAmmo) {
			return (this.weapon.profs & 8) != 0;
		} else {
			return false;
		}
	}
	,get_crossbowAmmoCapable: function() {
		if(this.isAmmo) {
			return (this.weapon.profs & 4) != 0;
		} else {
			return false;
		}
	}
	,get_itemFlags: function() {
		var arr = [];
		arr.push("Two-Handed");
		arr.push("Strapped");
		arr.push("Eye-Corrective");
		arr.push("Prosthetic");
		return arr;
	}
	,get_armorFlags: function() {
		var arr = [];
		arr.push("Movable");
		arr.push("Hard");
		arr.push("Mail");
		arr.push("Textile");
		arr.push("Bulletproof");
		return arr;
	}
	,get_customMeleeFlags: function() {
		var arr = [];
		arr.push("Custom Hilt");
		arr.push("Ridiculously Sharp");
		arr.push("Exquisite Decoration");
		arr.push("Bizarre Gimmick");
		return arr;
	}
	,get_customMeleeIntVars: function() {
		var arr = [];
		arr.push("customGrip");
		arr.push("fineForging");
		arr.push("integratedPistol");
		return arr;
	}
	,get_customMeleeIntVarLabels: function() {
		var arr = this.customMeleeIntVars;
		var myArr = arr.concat([]);
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			myArr[i] = troshx_sos_core_Item.labelizeCamelCase(arr[i]);
		}
		return myArr;
	}
	,get_meleeVarNames: function() {
		return troshx_sos_core_MeleeSpecial.getIntVarNames();
	}
	,get_meleeVarLabels: function() {
		return troshx_sos_core_Item.labelizeCamelCaseArr(this.meleeVarNames);
	}
	,get_missileVarNames: function() {
		return troshx_sos_core_MissileSpecial.getIntVarNames();
	}
	,get_missileVarLabels: function() {
		return troshx_sos_core_Item.labelizeCamelCaseArr(this.missileVarNames);
	}
	,get_layerCoverageFlags: function() {
		var armor = this.armor;
		if(armor == null) {
			return null;
		}
		var body = this.bodyForArmor;
		var arr = [];
		var fields = Reflect.fields(armor.coverage);
		var _g1 = 0;
		var _g = fields.length;
		while(_g1 < _g) {
			var i = _g1++;
			var f = fields[i];
			var id = body.hitLocationHash[f];
			arr.push({ label : body.hitLocations[id].name, id : body.hitLocations[id].id, value : 1 << id, index : id});
		}
		arr.sort($bind(this,this.sortCoverageFlag));
		return arr;
	}
	,get_layerCoverageBits: function() {
		var a = this.layerCoverageFlags;
		var bits = 0;
		var _g1 = 0;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			bits |= a[i].value;
		}
		return bits;
	}
	,get_targetZoneFlags: function() {
		var armor = this.armor;
		if(armor == null) {
			return null;
		}
		var body = this.bodyForArmor;
		var arr = [];
		var _g1 = 0;
		var _g = body.thrustStartIndex;
		while(_g1 < _g) {
			var i = _g1++;
			var t = body.targetZones[i];
			arr.push({ label : t.description != "" ? t.description + " to " + t.name : t.name, value : 1 << i, index : i, id : "_" + i});
		}
		return arr;
	}
	,get_targetZoneFlags2: function() {
		var armor = this.armor;
		if(armor == null) {
			return null;
		}
		var body = this.bodyForArmor;
		var arr = [];
		var _g1 = body.thrustStartIndex;
		var _g = body.targetZones.length;
		while(_g1 < _g) {
			var i = _g1++;
			var t = body.targetZones[i];
			arr.push({ label : t.description != "" ? t.description + " to " + t.name : t.name, value : 1 << i, index : i, id : "_" + i});
		}
		return arr;
	}
	,get_modifyAllSwinging: function() {
		var armor = this.armor;
		if(armor == null) {
			return null;
		}
		var body = this.bodyForArmor;
		return (armor.special.hitModifier.targetZoneMask & body.swingMask) == body.swingMask;
	}
	,get_modifyAllThrusting: function() {
		var armor = this.armor;
		if(armor == null) {
			return null;
		}
		var body = this.bodyForArmor;
		return (armor.special.hitModifier.targetZoneMask & body.thrustMask) == body.thrustMask;
	}
	,get_swingMask: function() {
		var armor = this.armor;
		if(armor == null) {
			return 0;
		}
		var body = this.bodyForArmor;
		return body.swingMask;
	}
	,get_thrustMask: function() {
		var armor = this.armor;
		if(armor == null) {
			return 0;
		}
		var body = this.bodyForArmor;
		return body.thrustMask;
	}
	,sortCoverageFlag: function(a,b) {
		if(a.value < b.value) {
			return -1;
		} else if(a.value > b.value) {
			return 1;
		}
		return 0;
	}
	,get_bodyForArmor: function() {
		if(this.armor.special != null && this.armor.special.otherBodyType != null) {
			return this.armor.special.otherBodyType;
		} else {
			return troshx_sos_core_BodyChar.getInstance();
		}
	}
	,get_hitLocationIds: function() {
		return Reflect.fields(this.bodyForArmor.hitLocationHash);
	}
	,get_hitLocationDummy: function() {
		var hitIds = this.hitLocationIds;
		var crushAVMods = this.currentArmorCustomise.hitLocationAllAVModifiers;
		var dyn = { };
		var _g1 = 0;
		var _g = hitIds.length;
		while(_g1 < _g) {
			var i = _g1++;
			var f = hitIds[i];
			dyn[f] = crushAVMods != null && crushAVMods[f] != null ? crushAVMods[f] : 0;
		}
		return dyn;
	}
	,crushAVInputHandler: function(input,li) {
		var armorCustomise = this.currentArmorCustomise;
		var result = input.valueAsNumber | 0;
		if(result == null || isNaN(result)) {
			input.valueAsNumber = this.hitLocationDummy[li.id];
			return;
		}
		if(result != 0) {
			if(armorCustomise.hitLocationAllAVModifiers == null) {
				armorCustomise.hitLocationAllAVModifiers = { };
			}
			Vue.set(armorCustomise.hitLocationAllAVModifiers,li.id,result);
		} else {
			if(armorCustomise.hitLocationAllAVModifiers == null) {
				return;
			}
			if(armorCustomise.hitLocationAllAVModifiers[li.id] != null) {
				Vue["delete"](armorCustomise.hitLocationAllAVModifiers,li.id);
			}
		}
	}
	,get_handMask: function() {
		return 3;
	}
	,get_shield: function() {
		var obj = this.item;
		if(js_Boot.__instanceof(obj,troshx_sos_core_Shield)) {
			return obj;
		} else {
			return null;
		}
	}
	,get_isMeleeWeap: function() {
		if(this.weapon != null) {
			var _this = this.weapon;
			if(!_this.ranged) {
				return !_this.isAmmo;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,get_meleeFlagDisablingMask: function() {
		if(this.entry.attached) {
			return 65536;
		} else {
			return 0;
		}
	}
	,get_missileFlagDisablingMask: function() {
		if(this.entry.attached) {
			return 16;
		} else {
			return 0;
		}
	}
	,get_meleeFlags: function() {
		return troshx_sos_core_MeleeSpecial.getFlagVarLabels();
	}
	,get_missileFlags: function() {
		return troshx_sos_core_MissileSpecial.getFlagVarLabels();
	}
	,get_weapon: function() {
		var obj = this.item;
		if(js_Boot.__instanceof(obj,troshx_sos_core_Weapon)) {
			return obj;
		} else {
			return null;
		}
	}
	,get_firearm: function() {
		var tmp;
		if(this.weapon != null) {
			var _this = this.weapon;
			var a = (_this.profs & 8) != 0;
			if(_this.ranged && a && !_this.isAmmo) {
				tmp = _this.firearm != null;
			} else {
				tmp = false;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			return this.weapon.firearm;
		} else {
			return null;
		}
	}
	,get_crossbow: function() {
		var tmp;
		if(this.weapon != null) {
			var _this = this.weapon;
			var a = (_this.profs & 4) != 0;
			if(_this.ranged && a && !_this.isAmmo) {
				tmp = _this.crossbow != null;
			} else {
				tmp = false;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			return this.weapon.crossbow;
		} else {
			return null;
		}
	}
	,get_isAmmo: function() {
		if(this.weapon != null) {
			var _this = this.weapon;
			if(_this.isAmmo) {
				return _this.ranged;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,get_armor: function() {
		var obj = this.item;
		if(js_Boot.__instanceof(obj,troshx_sos_core_Armor)) {
			return obj;
		} else {
			return null;
		}
	}
	,get_isAttachment: function() {
		if(this.weapon != null) {
			var _this = this.weapon;
			var m = (_this.meleeFlags & 65536) != 0;
			var r = (_this.missileFlags & 16) != 0;
			if(_this.ranged) {
				return r;
			} else {
				return m;
			}
		} else {
			return false;
		}
	}
	,onCustomMeleeCheck: function(cb) {
		if(cb.checked) {
			this.currentCustomise.melee = this.currentCustomise.melee != null ? this.currentCustomise.melee : this.customMeleeCache != null ? this.customMeleeCache : new troshx_sos_core_CustomMelee();
		} else {
			this.customMeleeCache = this.currentCustomise.melee;
			this.currentCustomise.melee = null;
		}
	}
	,onArmorSpecialCheck: function(cb) {
		var armor = this.armor;
		if(cb.checked) {
			armor.special = armor.special != null ? armor.special : this.armorSpecialCache != null ? this.armorSpecialCache : new troshx_sos_core_ArmorSpecial();
		} else {
			this.armorSpecialCache = armor.special;
			armor.special = null;
		}
	}
	,onArmorWornWithCheck: function(cb) {
		var armor = this.armor;
		if(cb.checked) {
			var tmp = armor.special.wornWith != null ? armor.special.wornWith : this.armorWornWith != null ? this.armorWornWith : new troshx_sos_core_WornWith();
			armor.special.wornWith = tmp;
		} else {
			this.armorWornWith = armor.special.wornWith;
			armor.special.wornWith = null;
		}
	}
	,onArmorLocationSpecificSpecialCheck: function(cb) {
		var armor = this.armor;
		if(cb.checked) {
			var tmp = armor.special.hitModifier != null ? armor.special.hitModifier : this.armorSpecialHitModifierCache != null ? this.armorSpecialHitModifierCache : new troshx_sos_core_HitModifier();
			armor.special.hitModifier = tmp;
		} else {
			this.armorSpecialHitModifierCache = armor.special.hitModifier;
			armor.special.hitModifier = null;
		}
	}
	,onWeapSpecialCheck: function(cb,ranged) {
		if(cb.checked) {
			if(ranged) {
				this.weapon.missileSpecial = this.weapon.missileSpecial != null ? this.weapon.missileSpecial : this.missileSpecialCache != null ? this.missileSpecialCache : new troshx_sos_core_MissileSpecial();
			} else {
				this.weapon.meleeSpecial = this.weapon.meleeSpecial != null ? this.weapon.meleeSpecial : this.meleeSpecialCache != null ? this.meleeSpecialCache : new troshx_sos_core_MeleeSpecial();
			}
		} else if(ranged) {
			this.missileSpecialCache = this.weapon.missileSpecial;
			this.weapon.missileSpecial = null;
		} else {
			this.meleeSpecialCache = this.weapon.meleeSpecial;
			this.weapon.meleeSpecial = null;
		}
	}
	,Template: function() {
		return "<div>\r\n\t<div v-if=\"firearm\">\r\n\t\t-Firearm-\r\n\t\t<br/>\r\n\t\t<span>\r\n\t\t\t<label><input type=\"checkbox\" v-model=\"firearm.double\"></input>Double</label>&nbsp;&nbsp;&nbsp;\r\n\t\t</span>\r\n\t\t<span>\r\n\t\t\t<label><InputInt :obj=\"firearm\" prop=\"multishot\" style=\"width:40px\" /></input>Multishot</label>&nbsp;&nbsp;&nbsp;\r\n\t\t</span>\r\n\t\t<span>\r\n\t\t\t<label><InputInt :obj=\"firearm\" prop=\"magazine\" style=\"width:40px\" />Magazine</label>&nbsp;&nbsp;&nbsp;\r\n\t\t</span>\r\n\t\t<span>\r\n\t\t\t<label><InputInt :obj=\"firearm\" prop=\"revolver\" style=\"width:40px\" />Revolver</label>&nbsp;&nbsp;&nbsp;\r\n\t\t</span>\r\n\t\t<span>\r\n\t\t\t<label><InputInt :obj=\"firearm\" prop=\"highCaliber\" style=\"width:40px\" /></input>High Caliber</label>&nbsp;&nbsp;&nbsp;\r\n\t\t</span>\r\n\t</div>\r\n\t<div>\r\n\t\t-Item:-\r\n\t\t<div>\r\n\t\t\t<label>Cost:</label><br/>\r\n\t\t\t<InputInt :step=\"1\" :min=\"0\" :obj=\"item\" prop=\"cost\" style=\"width:40%;display:inline-block\" /><select number v-model.number=\"item.costCurrency\" style=\"width:50%;display:inline-block\">\r\n\t\t\t\t<option value=\"0\">cp</option>\r\n\t\t\t\t<option value=\"1\">sp</option>\r\n\t\t\t\t<option value=\"2\">gp</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div v-if=\"!handInteractable\">\r\n\t\t\t<i>Unhold items before you can interact with hand-related flags</i>\r\n\t\t</div>\r\n\t\t<div v-for=\"(li, i) in itemFlags\" :key=\"i\" v-if=\"withinItemFlagRange(i)\" >\r\n\t\t\t<label :class=\"{disabled:!handInteractable && (shiftIndex(i)&handMask)!=0}\"><input type=\"checkbox\" :value=\"shiftIndex(i)\" :disabled=\"!handInteractable && (shiftIndex(i)&handMask)!=0\" :checked=\"(shiftIndex(i)&item.flags)!=0\" v-on:click=\"checkboxHandler($event.target, i, item, 'flags')\" ></input>{{li}}</label>\r\n\t\t</div>\r\n\t\t<hr/>\r\n\t</div>\r\n\t\t\t\r\n\t\r\n\t<div v-if=\"weapon\">\r\n\t\t-{{weapon.ranged ? 'Missile' : 'Melee'}} Flags:-\r\n\t\t<div v-if=\"!weapon.ranged\">\r\n\t\t\t<div v-for=\"(li, i) in meleeFlags\" :key=\"i\" style=\"display:inline-block;margin-right:3px\">\r\n\t\t\t\t<label :class=\"{disabled:(meleeFlagDisablingMask&shiftIndex(i))!=0}\"><input type=\"checkbox\" :checked=\"(shiftIndex(i)&item.meleeFlags)!=0\" v-on:click=\"checkboxHandler($event.target, i, item, 'meleeFlags')\" :value=\"shiftIndex(i)\" :disabled=\"(meleeFlagDisablingMask&shiftIndex(i))!=0\"></input>{{li}}</label>\r\n\t\t\t</div>\r\n\t\t\t<hr/>\r\n\t\t\t<label><input type=\"checkbox\" v-on:click=\"onWeapSpecialCheck($event.target, false)\" :checked=\"weapon.meleeSpecial!=null\"><i>MeleeSpecial?</i></input></label>\r\n\t\t\t<div v-if=\"item.meleeSpecial\">\r\n\t\t\t\t<div v-for=\"(li, i) in meleeVarLabels\" :key=\"i\">\r\n\t\t\t\t\t<label style=\"width:50%; float:left;display:block;\">{{ li }}: </label><InputInt style=\"width:50%;float:left;display:block;max-width:40px\" :min=\"0\" :obj=\"item.meleeSpecial\" :prop=\"meleeVarNames[i]\" />\r\n\t\t\t\t\t<div style=\"clear:both\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr/>\r\n\t\t</div>\r\n\t\t<div v-if=\"weapon.ranged\">\r\n\t\t\t<div v-for=\"(li, i) in missileFlags\" :key=\"i\"  style=\"display:inline-block;margin-right:3px\">\r\n\t\t\t\t<label class=\"{disabled:(missileFlagDisablingMask&shiftIndex(i))!=0}\"><input type=\"checkbox\" :checked=\"(shiftIndex(i)&item.missileFlags)!=0\"  v-on:click=\"checkboxHandler($event.target, i, item, 'missileFlags')\" :value=\"shiftIndex(i)\"  :disabled=\"(missileFlagDisablingMask&shiftIndex(i))!=0\"></input>{{li}}</label>\r\n\t\t\t</div>\r\n\t\t\t<hr/>\r\n\t\t\t<label><input type=\"checkbox\" v-on:click=\"onWeapSpecialCheck($event.target, true)\" :checked=\"weapon.missileSpecial!=null\"><i>MissileSpecial?</i></input></label>\r\n\t\t\t<div v-if=\"item.missileSpecial\">\r\n\t\t\t\t<div v-for=\"(li, i) in missileVarLabels\" :key=\"i\">\r\n\t\t\t\t\t<label style=\"width:50%; float:left;display:block;\">{{ li }}: </label><InputInt style=\"width:50%;float:left;display:block;max-width:40px\" :min=\"0\" :obj=\"item.missileSpecial\" :prop=\"missileVarNames[i]\" />\r\n\t\t\t\t\t<div style=\"clear:both\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<hr/>\r\n\t</div>\r\n\t<div v-if=\"shield\">\r\n\t\t<div v-show=\"hasStrap\">\r\n\t\t\t<label>Shield Strap: </label><select number v-model.number=\"shield.strapType\" style=\"width:auto\">\r\n\t\t\t\t<option value=\"0\">Arm</option>\r\n\t\t\t\t<option value=\"1\">Shoulder</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<hr/>\r\n\t</div>\r\n\t\t\t\t\t\r\n\t<div v-if=\"isAmmo\">\r\n\t\t<div v-if=\"firearmAmmo\">\r\n\t\t\t-Firearm Ammo Modifiers-\r\n\t\t\t<div>\r\n\t\t\t\t<label><InputInt :obj=\"weapon.firearm\" prop=\"load\" />Load</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div v-if=\"crossbowAmmo\">\r\n\t\t\t-Crossbow Ammo Modifiers-\r\n\t\t\t<div>\r\n\t\t\t\t<label><InputInt :obj=\"weapon.crossbow\" prop=\"span\" />Span</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<hr/>\r\n\t</div>\r\n\t\t\t\t\t\r\n\t<div v-if=\"weapon!=null && currentCustomise!=null\">\r\n\t\t<div v-if=\"!isEnteredItem\">\r\n\t\t\t<div>-Weapon Personalisation?-</div>\r\n\t\t\t<i>Have current item inserted into list first before being able to register a new customisation.</i>\r\n\t\t</div>\r\n\t\t<div v-else>\r\n\t\t\t<div>-Weapon Personalisation-</div>\r\n\t\t\t\r\n\t\t\t<div v-if=\"customise != null\">\r\n\t\t\t\t<label>Customisation Name:</label><input type=\"text\" v-model=\"currentCustomise.name\"></input>\r\n\t\t\t</div>\r\n\t\t\t<div v-else>\r\n\t\t\t\t<label>Name:</label><input type=\"text\" v-on:blur=\"setCustomiseNameInput($event.target)\" :value=\"currentCustomise.name\"></input>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div v-if=\"isMeleeWeap\">\r\n\t\t\t\t<div>-Melee Customisations</div>\r\n\t\t\t\t<div v-for=\"(li, i) in customMeleeFlags\" :key=\"i\"  style=\"display:inline-block;margin-right:3px\">\r\n\t\t\t\t\t<label><input type=\"checkbox\" :checked=\"(shiftIndex(i)&currentCustomise.meleeFlags)!=0\"  v-on:click=\"checkboxHandler($event.target, i, currentCustomise, 'meleeFlags')\" :value=\"shiftIndex(i)\"></input>{{li}}</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"customise != null || currentCustomise.melee == null\"><label><input type=\"checkbox\" v-on:click=\"onCustomMeleeCheck($event.target)\" :checked=\"currentCustomise.melee!=null\"><i>more...</i></input></label></div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t<div v-if=\"currentCustomise.melee != null\">\r\n\t\t\t\t\t<div v-for=\"(li, i) in customMeleeIntVarLabels\" :key=\"i\">\r\n\t\t\t\t\t\t<label style=\"width:50%; float:left;display:block;\">{{ li }}: </label><InputInt style=\"width:50%;float:left;display:block;max-width:40px\" :min=\"0\" :obj=\"currentCustomise.melee\" :prop=\"customMeleeIntVars[i]\" />\r\n\t\t\t\t\t\t<div style=\"clear:both\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-show=\"currentCustomise.melee.integratedPistol >=1\">\r\n\t\t\t\t\t\t<div>Integrated Pistol: {{ currentCustomise.melee.integratedPistol == 1 ? \"Pistol\" : \"Dragon\" }}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-show=\"currentCustomise.hasBizarreGimmick()\">\r\n\t\t\t\t\t\t<label style=\"display:block;\">Bizaare Gimmick: </label><input style=\"display:block;width:90%\"  v-model=\"currentCustomise.melee.bizarreGimmickDesc\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-show=\"currentCustomise.hasExquisiteDecoration()\">\r\n\t\t\t\t\t\t<label style=\"display:block;\">Exquisite Decoration: </label><input style=\"display:block;width:90%\"  v-model=\"currentCustomise.melee.exquisiteDecorDesc\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-show=\"currentCustomise.isRidiculouslySharp()\">\r\n\t\t\t\t\t\t<label>Sharpened?</label>\r\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"currentCustomise.melee.sharpened\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div v-if=\"customise != null\">\r\n\t\t\t\t<button v-on:click=\"assignWeaponCustomisation()\" :disabled=\"!canRegisterCustomisation\">Register Customisation &gt;&gt;</button>\r\n\t\t\t</div>\t\r\n\t\t\t<div v-else>\r\n\t\t\t\t<i>Weapon has been customised.</i>\r\n\t\t\t\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label><i>Restore original?</i></label><input type=\"checkbox\" v-model=\"restoreOriginal\"></input><br/><br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"restoreOriginal\" >\r\n\t\t\t\t\t<button v-on:click=\"doRestoreOriginal()\">Confirm Restore Original</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<hr/>\r\n\t</div>\r\n\t\t\t\t\t\t\r\n\t<div v-if=\"armor!=null\">\r\n\t\t<div>-Headgear-related:-</div>\r\n\t\t<div><label>Perception Penalty (PP): <InputInt :obj=\"item\" :min=\"0\" prop=\"pp\" /></label></div>\r\n\t\t<hr/>\r\n\t\t<div>-Armor Flags:-</div>\r\n\t\t<div v-for=\"(li, i) in armorFlags\" :key=\"i\" style=\"display:inline-block;margin-right:3px\">\r\n\t\t\t<label><input type=\"checkbox\" :checked=\"(shiftIndex(i)&item.specialFlags)!=0\" v-on:click=\"checkboxHandler($event.target, i, item, 'specialFlags')\" :value=\"shiftIndex(i)\"></input>{{li}}</label>\r\n\t\t</div>\r\n\t\t<hr/>\r\n\t\t<div><label><input type=\"checkbox\" v-on:click=\"onArmorSpecialCheck($event.target)\" :checked=\"item.special!=null\"></input><i>ArmorSpecial?</i></label></div>\r\n\t\t<div v-if=\"item.special\">\r\n\t\t\t<div><label>Layer: <InputInt :obj=\"item.special\" prop=\"layer\" :min=\"0\"  /></label></div>\r\n\t\t\t<div v-if=\"item.special.layer > 0 && layerCoverageFlags.length > 0\">\r\n\t\t\t\t<label>Layer coverages: <i>(leave blank for all)</i> {{layerCoverageBits}}</label>\r\n\t\t\t\t<div><label  v-for=\"li in layerCoverageFlags\" :key=\"li.value\"><input type=\"checkbox\" v-on:click=\"checkboxHandler($event.target, li.index, item.special, 'layerCoverage')\" :checked=\"(li.value&item.special.layerCoverage)!=0\"></input>{{li.index+1}}:{{li.label}}</label></div>\r\n\t\t\t</div>\r\n\t\t\t<div><label>Restricts breathing: <InputInt :obj=\"item.special\" prop=\"restrictsBreathing\" :min=\"0\" /></label></div>\r\n\t\t\t<br/>\r\n\t\t\t<div><label><input type=\"checkbox\" v-on:click=\"onArmorWornWithCheck($event.target)\" :checked=\"item.special.wornWith!=null\"></input>Worn With modifer?</label></div>\r\n\t\t\t<div v-if=\"item.special.wornWith!=null\">\r\n\t\t\t\t<div><label>Other Armor Name: <input type=\"text\" v-model=\"item.special.wornWith.name\"></input></label></div>\r\n\t\t\t\t<div>Layer: <i>(\"0\" for AV Self, \"-1\" for AV Other)</i></div>\r\n\t\t\t\t<div><label>Layer: <InputInt :min=\"-1\" :obj=\"item.special.wornWith\" prop=\"layer\" /></label></div>\r\n\t\t\t</div>\r\n\t\t\t<div><label><input type=\"checkbox\" v-on:click=\"onArmorLocationSpecificSpecialCheck($event.target)\" :checked=\"item.special.hitModifier!=null\"></input>Location/Zone-specific modifier?<i v-show=\"item.special.hitModifier != null\"> Provides...</i></label></div>\r\n\t\t\t<div v-if=\"item.special.hitModifier!=null\">\r\n\t\t\t\t<div><label>Multiplied of AV: <InputNumber :step=\"0.5\" :min=\"0\" :obj=\"item.special.hitModifier\" prop=\"multiplyAV\" /></label></div>\r\n\t\t\t\t<div><label>Added/Subtracted AV: <InputInt :obj=\"item.special.hitModifier\" prop=\"addAV\" /></label></div>\r\n\t\t\t\t<div><label :class=\"{active:item.special.hitModifier.locationMask!=0}\"><b>Hit Locations:</b> </label>{{layerCoverageFlags.length!=0 ? \"\" : \" - \"}}<label v-for=\"li in layerCoverageFlags\" :key=\"li.id\"><input type=\"checkbox\" v-on:click=\"checkboxHandler($event.target, li.index, item.special.hitModifier, 'locationMask')\" :checked=\"(li.value&item.special.hitModifier.locationMask)!=0\"></input>{{li.index+1}}:{{li.label}}</label></div>\r\n\t\t\t\t<div><label :class=\"{active:item.special.hitModifier.targetZoneMask!=0}\"><b>Target Zones:</b> </label></div>\r\n\t\t\t\t<div class=\"label\" :class=\"{active:modifyAllSwinging}\"><label></label>Swinging Target Zones: <label><i>All?</i><input type=\"checkbox\"  v-on:click=\"checkboxMaskHandler($event.target, swingMask, item.special.hitModifier, 'targetZoneMask')\" :checked=\"modifyAllSwinging\"></input></label></div>\r\n\t\t\t\t<div><label v-for=\"li in targetZoneFlags\" :key=\"li.id\"><input type=\"checkbox\" v-on:click=\"checkboxHandler($event.target, li.index, item.special.hitModifier, 'targetZoneMask')\" :checked=\"(li.value&item.special.hitModifier.targetZoneMask)!=0\"></input>{{li.index+1}}:{{li.label}}</label></div>\r\n\t\t\t\t<div class=\"label\" :class=\"{active:modifyAllThrusting}\">Thrusting Target Zones: <label><i>All?</i><input type=\"checkbox\" v-on:click=\"checkboxMaskHandler($event.target, thrustMask, item.special.hitModifier, 'targetZoneMask')\" :checked=\"modifyAllThrusting\"></input></label></div>\r\n\t\t\t\t<div><label v-for=\"li in targetZoneFlags2\" :key=\"li.id\"><input type=\"checkbox\" v-on:click=\"checkboxHandler($event.target, li.index, item.special.hitModifier, 'targetZoneMask')\" :checked=\"(li.value&item.special.hitModifier.targetZoneMask)!=0\"></input>{{li.index+1}}:{{li.label}}</label></div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t\t<hr/>\t\r\n\t\t<div v-if=\"currentArmorCustomise!=null\">\r\n\t\t\t<div v-if=\"!isEnteredItem\">\r\n\t\t\t\t<div>-Armor State/Customisation-</div>\r\n\t\t\t\t<i>Have current item inserted into list first before being able to register a new customisation.</i>\r\n\t\t\t</div>\r\n\t\t\t<div v-else>\r\n\t\t\t\t<div>-Armor State/Customisation-</div>\r\n\t\t\t\t<div v-if=\"customiseArmor != null\">\r\n\t\t\t\t\t<label>State/Customisation Name:</label><input type=\"text\" v-model=\"currentArmorCustomise.name\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-else>\r\n\t\t\t\t\t<label>Name:</label><input type=\"text\" v-on:blur=\"setArmorCustomiseNameInput($event.target)\" :value=\"currentArmorCustomise.name\"></input>\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div v-if=\"isEnteredItem\">\r\n\t\t\t\t<div><label>Crest: <select number v-model.number=\"currentArmorCustomise.crest\"><option :value=\"0\"></option><option v-for=\"(li,i) in armorCrestLabels\" :key=\"i+1\" :value=\"i+1\">{{li}}</option></select></label></div>\r\n\t\t\t\t<div v-if=\"layerCoverageFlags.length!=0\"><label><i>Reduced/Crushed AVs:</i></label></div>\r\n\t\t\t\t<div><label  v-for=\"li in layerCoverageFlags\" :key=\"li.id\"><InputInt v-on:input.native=\"crushAVInputHandler($event.target, li)\" :max=\"0\" :obj=\"hitLocationDummy\" :prop=\"li.id\" /> {{li.index+1}}:{{li.label}}</label></div>\r\n\t\t\t\t<div v-if=\"customiseArmor != null\">\t\t\r\n\t\t\t\t\t<button v-on:click=\"assignArmorCustomisation()\" :disabled=\"!canRegisterArmorCustomisation\">Register Customisation &gt;&gt;</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-else>\t\r\n\t\t\t\t\t<i>Armor has been altered.</i>\r\n\t\t\t\t\t<br/>\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label><i>Restore original?</i></label><input type=\"checkbox\" v-model=\"restoreOriginal\"></input><br/><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"restoreOriginal\" >\r\n\t\t\t\t\t\t<button v-on:click=\"doRestoreOriginalArmor()\">Confirm Restore Original</button>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\t\r\n\t\t</div>\r\n\t\t\t\t\r\n\t\t<hr/>\r\n\t\t\t\r\n\t</div>\r\n</div>";
	}
	,checkboxHandler: function(checkbox,i,targetObj,targetProp) {
		if(checkbox.checked) {
			targetObj[targetProp] |= 1 << i;
		} else {
			targetObj[targetProp] &= ~(1 << i);
		}
	}
	,checkboxMaskHandler: function(checkbox,mask,targetObj,targetProp) {
		if(checkbox.checked) {
			targetObj[targetProp] |= mask;
		} else {
			targetObj[targetProp] &= ~mask;
		}
	}
	,_Init: function() {
		var cls = troshx_sos_vue_widgets_WTags;
		var clsP = cls.prototype;
		this.data = clsP.Data;
		this.mounted = clsP.Mounted;
		this.template = this.Template();
		this.computed = { currentCustomise : clsP.get_currentCustomise, currentArmorCustomise : clsP.get_currentArmorCustomise, isEnteredItem : clsP.get_isEnteredItem, armorCrestLabels : clsP.get_armorCrestLabels, canRegisterCustomisation : clsP.get_canRegisterCustomisation, canRegisterArmorCustomisation : clsP.get_canRegisterArmorCustomisation, hasStrap : clsP.get_hasStrap, handInteractable : clsP.get_handInteractable, firearmAmmo : clsP.get_firearmAmmo, crossbowAmmo : clsP.get_crossbowAmmo, firearmAmmoCapable : clsP.get_firearmAmmoCapable, crossbowAmmoCapable : clsP.get_crossbowAmmoCapable, itemFlags : clsP.get_itemFlags, armorFlags : clsP.get_armorFlags, customMeleeFlags : clsP.get_customMeleeFlags, customMeleeIntVars : clsP.get_customMeleeIntVars, customMeleeIntVarLabels : clsP.get_customMeleeIntVarLabels, meleeVarNames : clsP.get_meleeVarNames, meleeVarLabels : clsP.get_meleeVarLabels, missileVarNames : clsP.get_missileVarNames, missileVarLabels : clsP.get_missileVarLabels, layerCoverageFlags : clsP.get_layerCoverageFlags, layerCoverageBits : clsP.get_layerCoverageBits, targetZoneFlags : clsP.get_targetZoneFlags, targetZoneFlags2 : clsP.get_targetZoneFlags2, modifyAllSwinging : clsP.get_modifyAllSwinging, modifyAllThrusting : clsP.get_modifyAllThrusting, swingMask : clsP.get_swingMask, thrustMask : clsP.get_thrustMask, bodyForArmor : clsP.get_bodyForArmor, hitLocationIds : clsP.get_hitLocationIds, hitLocationDummy : clsP.get_hitLocationDummy, handMask : clsP.get_handMask, shield : clsP.get_shield, isMeleeWeap : clsP.get_isMeleeWeap, meleeFlagDisablingMask : clsP.get_meleeFlagDisablingMask, missileFlagDisablingMask : clsP.get_missileFlagDisablingMask, meleeFlags : clsP.get_meleeFlags, missileFlags : clsP.get_missileFlags, weapon : clsP.get_weapon, firearm : clsP.get_firearm, crossbow : clsP.get_crossbow, isAmmo : clsP.get_isAmmo, armor : clsP.get_armor, isAttachment : clsP.get_isAttachment};
		this.methods = { updateArmorStates : clsP.updateArmorStates, updateWeaponStates : clsP.updateWeaponStates, watch_weapon : clsP.watch_weapon, get_currentCustomise : clsP.get_currentCustomise, get_currentArmorCustomise : clsP.get_currentArmorCustomise, get_isEnteredItem : clsP.get_isEnteredItem, doRestoreOriginal : clsP.doRestoreOriginal, doRestoreOriginalArmor : clsP.doRestoreOriginalArmor, assignWeaponCustomisation : clsP.assignWeaponCustomisation, assignArmorCustomisation : clsP.assignArmorCustomisation, get_armorCrestLabels : clsP.get_armorCrestLabels, shiftIndex : clsP.shiftIndex, get_canRegisterCustomisation : clsP.get_canRegisterCustomisation, get_canRegisterArmorCustomisation : clsP.get_canRegisterArmorCustomisation, setCustomiseNameInput : clsP.setCustomiseNameInput, setArmorCustomiseNameInput : clsP.setArmorCustomiseNameInput, withinItemFlagRange : clsP.withinItemFlagRange, get_hasStrap : clsP.get_hasStrap, get_handInteractable : clsP.get_handInteractable, get_firearmAmmo : clsP.get_firearmAmmo, get_crossbowAmmo : clsP.get_crossbowAmmo, get_firearmAmmoCapable : clsP.get_firearmAmmoCapable, get_crossbowAmmoCapable : clsP.get_crossbowAmmoCapable, get_itemFlags : clsP.get_itemFlags, get_armorFlags : clsP.get_armorFlags, get_customMeleeFlags : clsP.get_customMeleeFlags, get_customMeleeIntVars : clsP.get_customMeleeIntVars, get_customMeleeIntVarLabels : clsP.get_customMeleeIntVarLabels, get_meleeVarNames : clsP.get_meleeVarNames, get_meleeVarLabels : clsP.get_meleeVarLabels, get_missileVarNames : clsP.get_missileVarNames, get_missileVarLabels : clsP.get_missileVarLabels, get_layerCoverageFlags : clsP.get_layerCoverageFlags, get_layerCoverageBits : clsP.get_layerCoverageBits, get_targetZoneFlags : clsP.get_targetZoneFlags, get_targetZoneFlags2 : clsP.get_targetZoneFlags2, get_modifyAllSwinging : clsP.get_modifyAllSwinging, get_modifyAllThrusting : clsP.get_modifyAllThrusting, get_swingMask : clsP.get_swingMask, get_thrustMask : clsP.get_thrustMask, sortCoverageFlag : clsP.sortCoverageFlag, get_bodyForArmor : clsP.get_bodyForArmor, get_hitLocationIds : clsP.get_hitLocationIds, get_hitLocationDummy : clsP.get_hitLocationDummy, crushAVInputHandler : clsP.crushAVInputHandler, get_handMask : clsP.get_handMask, get_shield : clsP.get_shield, get_isMeleeWeap : clsP.get_isMeleeWeap, get_meleeFlagDisablingMask : clsP.get_meleeFlagDisablingMask, get_missileFlagDisablingMask : clsP.get_missileFlagDisablingMask, get_meleeFlags : clsP.get_meleeFlags, get_missileFlags : clsP.get_missileFlags, get_weapon : clsP.get_weapon, get_firearm : clsP.get_firearm, get_crossbow : clsP.get_crossbow, get_isAmmo : clsP.get_isAmmo, get_armor : clsP.get_armor, get_isAttachment : clsP.get_isAttachment, onCustomMeleeCheck : clsP.onCustomMeleeCheck, onArmorSpecialCheck : clsP.onArmorSpecialCheck, onArmorWornWithCheck : clsP.onArmorWornWithCheck, onArmorLocationSpecificSpecialCheck : clsP.onArmorLocationSpecificSpecialCheck, onWeapSpecialCheck : clsP.onWeapSpecialCheck, checkboxHandler : clsP.checkboxHandler, checkboxMaskHandler : clsP.checkboxMaskHandler};
		this.props = { item : { required : true, type : Object}, entryIndex : { required : false, type : Number}, parentAttr : { required : false}, entry : { required : true}};
		this.watch = { weapon : clsP.watch_weapon};
	}
	,__class__: troshx_sos_vue_widgets_WTags
});
var troshx_util_LibUtil = function() { };
$hxClasses["troshx.util.LibUtil"] = troshx_util_LibUtil;
troshx_util_LibUtil.__name__ = ["troshx","util","LibUtil"];
troshx_util_LibUtil.validInt = function(val) {
	if(val != null) {
		return !isNaN(val);
	} else {
		return false;
	}
};
troshx_util_LibUtil["as"] = function(obj,type) {
	if(js_Boot.__instanceof(obj,type)) {
		return obj;
	} else {
		return null;
	}
};
troshx_util_LibUtil.asNoInline = function(obj,type) {
	if(js_Boot.__instanceof(obj,type)) {
		return obj;
	} else {
		return null;
	}
};
troshx_util_LibUtil.tryParseFloat = function(val) {
	return parseFloat(val);
};
troshx_util_LibUtil.tryParseInt = function(val) {
	return Std.parseInt(val);
};
troshx_util_LibUtil.sortAlphabetically = function(aStr,bStr) {
	aStr = aStr.toLowerCase();
	bStr = bStr.toLowerCase();
	if(aStr < bStr) {
		return -1;
	}
	if(aStr > bStr) {
		return 1;
	}
	return 0;
};
troshx_util_LibUtil.setArrayLength = function(of,len) {
	of.splice(len,of.length - len);
};
troshx_util_LibUtil.field = function(of,field) {
	return of[field];
};
troshx_util_LibUtil.setField = function(of,field,value) {
	of[field] = value;
};
troshx_util_LibUtil.override2ndObjInto = function(into,obj2) {
	var _g = 0;
	var _g1 = Reflect.fields(obj2);
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		into[p] = obj2[p];
	}
	return into;
};
troshx_util_LibUtil.setFieldChain = function(of,field,value) {
	of[field] = value;
	return value;
};
troshx_util_LibUtil.arrayToList = function(arr) {
	var list = new List();
	var _g = 0;
	while(_g < arr.length) {
		var val = arr[_g];
		++_g;
		list.add(val);
	}
	return list;
};
troshx_util_LibUtil.getArrayItemAtIndex = function(arr,index) {
	return arr[index];
};
troshx_util_LibUtil.getListItemAtIndex = function(list,index) {
	if(index < 0 || index >= list.length) {
		return null;
	}
	var iter_head = list.h;
	var _g1 = 0;
	var _g = index;
	while(_g1 < _g) {
		var i = _g1++;
		var val = iter_head.item;
		iter_head = iter_head.next;
	}
	var val1 = iter_head.item;
	iter_head = iter_head.next;
	return val1;
};
troshx_util_LibUtil.clearArray = function(arr) {
	arr.length = 0;
};
troshx_util_LibUtil.truncateArray = function(arr,fromIndex) {
	arr.length = fromIndex;
};
troshx_util_LibUtil.findForList = function(list,f) {
	var _g_head = list.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var i = val;
		if(f(i)) {
			return i;
		}
	}
	return null;
};
troshx_util_LibUtil.minI = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
troshx_util_LibUtil.maxI = function(a,b) {
	if(a >= b) {
		return a;
	} else {
		return b;
	}
};
troshx_util_LibUtil.minI_ = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
troshx_util_LibUtil.maxI_ = function(a,b) {
	if(a >= b) {
		return a;
	} else {
		return b;
	}
};
troshx_util_LibUtil.removeArrayItemAtIndex = function(arr,index) {
	arr.splice(index,1);
};
troshx_util_LibUtil.toFixed = function(value,digits) {
	return value.toFixed(digits);
};
troshx_util_LibUtil.getURLQueryStringParams = function(url) {
	var get = url.split("?").pop();
	var params = { };
	var _g = 0;
	var _g1 = new EReg("[&;]","g").split(get);
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		var pl = p.split("=");
		if(pl.length < 2) {
			continue;
		}
		var name = pl.shift();
		var field = decodeURIComponent(name.split("+").join(" "));
		var s = pl.join("=");
		params[field] = decodeURIComponent(s.split("+").join(" "));
	}
	return params;
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
msignal_SlotList.NIL = new msignal_SlotList(null,null);
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_ds_ObjectMap.count = 0;
haxevx_vuex_core_ModuleStack.stack = [];
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
troshx_sos_core_BoonBane.__GOOD_EYES__BAD_EYES = 1;
troshx_sos_core_BoonBane.__GOOD_EARS_BAD_EARS = 2;
troshx_sos_core_BoonBane.__GOOD_EARS_BAD_NOSE = 4;
troshx_sos_core_BoonBane.__RICH__POOR = 8;
troshx_sos_core_BoonBane.__TRUE_GRIT_SHELTERED = 16;
troshx_sos_core_BoonBane.__ROBUST_FRAIL = 32;
troshx_sos_core_BoonBane.__ONE_EYED = 64;
troshx_sos_core_BoonBane.__CRAVEN__HONORABLE = 128;
troshx_sos_core_BoonBane.__HONORABLE__COMPLETE_MONSTER = 256;
troshx_sos_core_BoonBane.__TALL__SHORT = 512;
troshx_sos_core_BoonBane.CHARACTER_CREATION_ONLY = 1;
troshx_sos_core_BoonBane.CANNOT_BE_REMOVED = 2;
troshx_sos_core_BoonBane.TIMES_INFINITE = -1;
troshx_sos_core_BoonBane.TIMES_VARYING = -2;
troshx_sos_core_BoonBane.COSTLESS_ARRAY = [0];
troshx_sos_bnb_Allies.COST_1 = 1;
troshx_sos_bnb_Allies.COST_2 = 5;
troshx_sos_bnb_Allies.COST_3 = 10;
troshx_sos_core_BaneAssign.MAX_BANE_EARNABLE = 15;
troshx_sos_bnb_Wanted.ALIVE = 1;
troshx_sos_bnb_Wanted.DEAD = 2;
troshx_sos_bnb_Wanted.ALIVE_ALIVE = 3;
troshx_sos_bnb_BrokenLimbAssign.LEFT_ARM = 1;
troshx_sos_bnb_BrokenLimbAssign.RIGHT_ARM = 2;
troshx_sos_bnb_BrokenLimbAssign.LEFT_LEG = 4;
troshx_sos_bnb_BrokenLimbAssign.RIGHT_LEG = 8;
troshx_sos_bnb_BrokenLimbAssign.BOTH_LEGS = 12;
troshx_sos_bnb_CrippledLimbAssign.LEFT_ARM = 1;
troshx_sos_bnb_CrippledLimbAssign.RIGHT_ARM = 2;
troshx_sos_bnb_CrippledLimbAssign.LEFT_LEG = 4;
troshx_sos_bnb_CrippledLimbAssign.RIGHT_LEG = 8;
troshx_sos_bnb_CrippledLimbAssign.BOTH_LEGS = 12;
troshx_sos_bnb_CrippledLimbAssign.BOTH_ARMS = 3;
troshx_sos_bnb_Debt.CASH_MULTIPLIERS = [1,1.5,2];
troshx_sos_bnb_DirePast.BONUS_POINTS = 10;
troshx_sos_bnb_Estate.WEALTH_PER_QTY = 2;
troshx_sos_bnb_Estate.COST_PER_ESTATE = 10;
troshx_sos_bnb_EstateAssign.COUNT = 0;
troshx_sos_bnb_Favor.COST_1 = 1;
troshx_sos_bnb_Favor.COST_2 = 3;
troshx_sos_bnb_ImpressiveVoice.COST = 2;
troshx_sos_bnb_ImpressiveVoiceAssign.POWERFUL = 1;
troshx_sos_bnb_ImpressiveVoiceAssign.GRATING = 2;
troshx_sos_bnb_ImpressiveVoiceAssign.SOOTHING = 4;
troshx_sos_bnb_Language.COST_SINGLE = 1;
troshx_sos_bnb_Language.COST_2 = 2;
troshx_sos_bnb_Language.COST_3 = 3;
troshx_sos_bnb_LastingPain.COST_MINOR = 4;
troshx_sos_bnb_LastingPain.COST_MAJOR = 8;
troshx_sos_bnb_SeveredLimb.COST_3 = 18;
troshx_sos_bnb_SeveredLimb.COST_2 = 15;
troshx_sos_bnb_SeveredLimb.COST_1 = 10;
troshx_sos_bnb_SeveredLimbAssign.HAND = 131072;
troshx_sos_bnb_SeveredLimbAssign.LOWER_ARM = 196608;
troshx_sos_bnb_SeveredLimbAssign.FULL_ARM = 245776;
troshx_sos_bnb_SeveredLimbAssign.FOOT = 8192;
troshx_sos_bnb_SeveredLimbAssign.LOWER_LEG = 12288;
troshx_sos_bnb_SeveredLimbAssign.FULL_LEG = 15360;
troshx_sos_bnb_SeveredLimbAssign.LEVEL_1_AREAS = 139264;
troshx_sos_bnb_SeveredLimbAssign.LEVEL_2_AREAS = 208896;
troshx_sos_bnb_SeveredLimbAssign.LEVEL_3_AREAS = 261136;
troshx_sos_chargen_CharGenData.INT_MAX = 2147483647;
troshx_sos_chargen_CharGenData.CATEGORY_RACE = 0;
troshx_sos_chargen_CharGenData.CATEGORY_ATTRIBUTES = 1;
troshx_sos_chargen_CharGenData.CATEGORY_BNB = 2;
troshx_sos_chargen_CharGenData.CATEGORY_SKILLS = 3;
troshx_sos_chargen_CharGenData.CATEGORY_SOCIAL_WEALTH = 4;
troshx_sos_chargen_CharGenData.CATEGORY_PROFECIENCIES = 5;
troshx_sos_chargen_CharGenData.ATTRIBUTE_START_MAX = 8;
troshx_sos_chargen_CharGenData.MORTAL_MAX = 12;
troshx_sos_chargen_CharGenData.PCP_COLUMN_ATTRIBUTES = [22,23,24,27,31,35,40,45,50,56];
troshx_sos_chargen_CharGenData.MAX_PACKET_SKILL_LEVEL = 5;
troshx_sos_core_Item.UID_COUNT = 0;
troshx_sos_core_Item.FLAG_TWO_HANDED = 1;
troshx_sos_core_Item.FLAG_STRAPPED = 2;
troshx_sos_core_Item.EYE_CORRECTIVE = 4;
troshx_sos_core_Item.PROSTHETIC = 8;
troshx_sos_core_Item.MASK_HANDED = 3;
troshx_sos_core_Item.CP = 0;
troshx_sos_core_Item.SP = 1;
troshx_sos_core_Item.GP = 2;
troshx_sos_core_Armor.WEAK_SPOT = 1;
troshx_sos_core_Armor.HALF = 2;
troshx_sos_core_Armor.THRUST_ONLY = 4;
troshx_sos_core_Armor.HALF_SYMBOL = "*";
troshx_sos_core_Armor.WEAK_SPOT_SYMBOL = "ϕ";
troshx_sos_core_Armor.THRUST_ONLY_SYMBOL = "t";
troshx_sos_core_Armor.SUPERSCRIPT_MINUS = "⁻";
troshx_sos_core_Armor.SUPERSCRIPT_PLUS = "⁺";
troshx_sos_core_Armor.SUPERSCRIPT_NUMBERS = "⁰¹²³⁴⁵⁶⁷⁸⁹";
troshx_sos_core_ArmorCustomise.CREST_IDENTIFYING = 1;
troshx_sos_core_ArmorCustomise.CREST_INTIMIDATING = 2;
troshx_sos_core_ArmorCustomise.CREST_RUTHLESSLY_FASHIONABLE = 3;
troshx_sos_core_ArmorSpecial.MOVABLE = 1;
troshx_sos_core_ArmorSpecial.HARD = 2;
troshx_sos_core_ArmorSpecial.MAIL = 4;
troshx_sos_core_ArmorSpecial.TEXTILE = 8;
troshx_sos_core_ArmorSpecial.BULLETPROOF = 16;
troshx_sos_core_WornWith.USE_AV_SELF = 0;
troshx_sos_core_WornWith.USE_AV_OTHER = -1;
troshx_sos_core_Weapon.REACH_HA = 1;
troshx_sos_core_Weapon.REACH_H = 2;
troshx_sos_core_Weapon.REACH_S = 3;
troshx_sos_core_Weapon.REACH_M = 4;
troshx_sos_core_Weapon.REACH_L = 5;
troshx_sos_core_Weapon.REACH_VL = 6;
troshx_sos_core_Weapon.REACH_EL = 7;
troshx_sos_core_Weapon.REACH_LL = 8;
troshx_sos_core_Arrow.BODKIN = 0;
troshx_sos_core_Arrow.BARBED_BROADHEAD = 1;
troshx_sos_core_Arrow.BLUDGEON_STUN = 2;
troshx_sos_core_Arrow.BROADHEAD = 3;
troshx_sos_core_Arrow.FIRE_ARROW = 4;
troshx_sos_core_Arrow.HEAVY_BROADHEAD = 5;
troshx_sos_core_Arrow.LOZENGE_HEAD = 6;
troshx_sos_core_Arrow.SWALLOWTAIL = 7;
troshx_sos_core_Humanoid.SWING_DOWNWARD_HEAD = 0;
troshx_sos_core_Humanoid.SWING_UPWARD_HEAD = 1;
troshx_sos_core_Humanoid.SWING_NECK = 2;
troshx_sos_core_Humanoid.SWING_TORSO = 3;
troshx_sos_core_Humanoid.SWING_UPPER_ARM = 4;
troshx_sos_core_Humanoid.SWING_LOWER_ARM = 5;
troshx_sos_core_Humanoid.SWING_UPPER_LEG = 6;
troshx_sos_core_Humanoid.SWING_LOWER_LEG = 7;
troshx_sos_core_Humanoid.SWING_GROIN = 8;
troshx_sos_core_Humanoid.thrustStartIndex = 9;
troshx_sos_core_Humanoid.THRUST_HEAD = 9;
troshx_sos_core_Humanoid.THRUST_NECK = 10;
troshx_sos_core_Humanoid.THRUST_CHEST = 11;
troshx_sos_core_Humanoid.THRUST_BELLY = 12;
troshx_sos_core_Humanoid.THRUST_UPPER_ARM = 13;
troshx_sos_core_Humanoid.THRUST_LOWER_ARM = 14;
troshx_sos_core_Humanoid.THRUST_GROIN = 15;
troshx_sos_core_Humanoid.THRUST_UPPER_LEG = 16;
troshx_sos_core_Humanoid.THRUST_LOWER_LEG = 17;
troshx_sos_core_Humanoid.UPPER_HEAD = 0;
troshx_sos_core_Humanoid.FACE = 1;
troshx_sos_core_Humanoid.LOWER_HEAD = 2;
troshx_sos_core_Humanoid.NECK = 3;
troshx_sos_core_Humanoid.SHOULDER = 4;
troshx_sos_core_Humanoid.CHEST = 5;
troshx_sos_core_Humanoid.SIDE = 6;
troshx_sos_core_Humanoid.BELLY = 7;
troshx_sos_core_Humanoid.HIP = 8;
troshx_sos_core_Humanoid.GROIN = 9;
troshx_sos_core_Humanoid.THIGH = 10;
troshx_sos_core_Humanoid.KNEE = 11;
troshx_sos_core_Humanoid.SHIN = 12;
troshx_sos_core_Humanoid.FOOT = 13;
troshx_sos_core_Humanoid.UPPER_ARM = 14;
troshx_sos_core_Humanoid.ELBOW = 15;
troshx_sos_core_Humanoid.FOREARM = 16;
troshx_sos_core_Humanoid.HAND = 17;
troshx_sos_core_Humanoid.rearStartIndex = 18;
troshx_sos_core_Humanoid.UPPER_BACK = 18;
troshx_sos_core_Humanoid.LOWER_BACK = 19;
troshx_sos_core_Humanoid.FULL_HEAD = 7;
troshx_sos_core_Humanoid.FULL_TORSO = 480;
troshx_sos_core_Humanoid.FULL_LEG = 15360;
troshx_sos_core_Humanoid.FULL_ARM = 245776;
troshx_sos_core_SpanningTool.HAND = 0;
troshx_sos_core_SpanningTool.LEVER = 1;
troshx_sos_core_SpanningTool.SCREW = 2;
troshx_sos_core_SpanningTool.STIRRUP = 3;
troshx_sos_core_SpanningTool.WINDLASS = 4;
troshx_sos_core_SpanningTool.WINCH = 5;
troshx_sos_core_SpanningTool.CRANK = 6;
troshx_sos_core_DamageType.CUTTING = 0;
troshx_sos_core_DamageType.PIERCING = 1;
troshx_sos_core_DamageType.BLUDGEONING = 2;
troshx_sos_core_DamageType.UNARMED = 3;
troshx_sos_core_DamageType.FALLING = 4;
troshx_sos_core_DamageType.BURN = 5;
troshx_sos_core_DamageType.ELECTRICAL = 6;
troshx_sos_core_DamageType.COLD = 7;
troshx_sos_core_FiringMechanism.CAPLOCK = 0;
troshx_sos_core_FiringMechanism.FIRELOCK = 1;
troshx_sos_core_FiringMechanism.FLINTLOCK = 2;
troshx_sos_core_FiringMechanism.MATCHLOCK = 3;
troshx_sos_core_FiringMechanism.NEEDLEFIRE = 4;
troshx_sos_core_FiringMechanism.SNAPLOCK = 5;
troshx_sos_core_FiringMechanism.WHEELOCK = 6;
troshx_sos_core_Ammunition.BALL = 0;
troshx_sos_core_Ammunition.BUCK_AND_BALL = 1;
troshx_sos_core_Ammunition.HEAVY_SHOT = 2;
troshx_sos_core_Ammunition.RIFLE_BALL = 3;
troshx_sos_core_Ammunition.SHOT = 4;
troshx_sos_core_Ammunition.SPIKE = 5;
troshx_sos_core_LoadingMechanism.MANUAL = 0;
troshx_sos_core_LoadingMechanism.BRASS_CATRIDGE = 1;
troshx_sos_core_LoadingMechanism.PAPER_CATRIDGE = 2;
troshx_sos_core_LoadingMechanism.PAPER_MACHE_CATRIDGE = 3;
troshx_sos_core_Money.SP_TO_GP = 0.05;
troshx_sos_core_Money.GP_TO_SP = 20;
troshx_sos_core_Money.CP_TO_SP = 0.083333333333333329;
troshx_sos_core_Money.SP_TO_CP = 12;
troshx_sos_core_Money.CP_TO_GP = 0.0041666666666666666;
troshx_sos_core_Money.GP_TO_CP = 240;
troshx_sos_core_Money.ZERO = new troshx_sos_core_Money();
troshx_sos_core_Money.TEMP = new troshx_sos_core_Money();
troshx_sos_core_Inventory.HELD_MASTER = 1;
troshx_sos_core_Inventory.HELD_OFF = 2;
troshx_sos_core_Inventory.HELD_BOTH = 3;
troshx_sos_core_Inventory.UNHELD_UNSPECIFIED = 0;
troshx_sos_core_Inventory.UNHELD_SHEATH_HOLSTER = 1;
troshx_sos_core_Inventory.UNHELD_STRAPPED_ARM = 2;
troshx_sos_core_Inventory.UNHELD_STRAPPED_SHOULDER = 3;
troshx_sos_core_Inventory.UNHELD_BACK = 4;
troshx_sos_core_Inventory.UNHELD_CONCEALED = 5;
troshx_sos_core_Inventory.UNHELD_FORCE_DISABLED = 6;
troshx_sos_core_Inventory.PREFER_UNHELD_PACKED = 1;
troshx_sos_core_Inventory.PREFER_UNHELD_DROPPED = 2;
troshx_sos_core_Inventory.PREFER_UNHELD_EQUIPPED = 4;
troshx_sos_core_Inventory.UID_COUNT = 0;
troshx_sos_core_Inventory.MONEY_CALC_CACHE = [0,0,0];
troshx_sos_core_Inventory.MONEY_REF = new troshx_sos_core_Money();
troshx_sos_core_MeleeSpecial.BRACE = 1;
troshx_sos_core_MeleeSpecial.CALVARY_SWORD = 2;
troshx_sos_core_MeleeSpecial.COMPANION_WEAPON = 4;
troshx_sos_core_MeleeSpecial.COUCHED_CHARGE = 8;
troshx_sos_core_MeleeSpecial.FLUID_THRUSTS = 16;
troshx_sos_core_MeleeSpecial.FORWARD_SWEPT = 32;
troshx_sos_core_MeleeSpecial.FREAKISHLY_LARGE = 64;
troshx_sos_core_MeleeSpecial.HAND_OFF = 128;
troshx_sos_core_MeleeSpecial.HEAVY_WEAPON = 256;
troshx_sos_core_MeleeSpecial.HOOK = 512;
troshx_sos_core_MeleeSpecial.LIGHT_BLADE = 1024;
troshx_sos_core_MeleeSpecial.PARRYING_TEETH = 2048;
troshx_sos_core_MeleeSpecial.SWINGING_SLOT = 4096;
troshx_sos_core_MeleeSpecial.THIN_BLADE = 8192;
troshx_sos_core_MeleeSpecial.THRUSTING_SLOT = 16384;
troshx_sos_core_MeleeSpecial.TIGHT_GRIP = 32768;
troshx_sos_core_MeleeSpecial.WEAPON_ATTACHMENT = 65536;
troshx_sos_core_MeleeSpecial.TOTAL_FLAGS = 17;
troshx_sos_core_MissileSpecial.BLUDGEON = 1;
troshx_sos_core_MissileSpecial.NARROW = 2;
troshx_sos_core_MissileSpecial.SHIELD_STICK = 4;
troshx_sos_core_MissileSpecial.AP_FIRST_HIT_ONLY = 8;
troshx_sos_core_MissileSpecial.CHEAT_ATTACHMENT = 16;
troshx_sos_core_MissileSpecial.TOTAL_FLAGS = 5;
troshx_sos_core_Modifier.ATTR_STR = 0;
troshx_sos_core_Modifier.ATTR_AGI = 1;
troshx_sos_core_Modifier.ATTR_END = 2;
troshx_sos_core_Modifier.ATTR_HLT = 3;
troshx_sos_core_Modifier.ATTR_WIL = 4;
troshx_sos_core_Modifier.ATTR_WIT = 5;
troshx_sos_core_Modifier.ATTR_INT = 6;
troshx_sos_core_Modifier.ATTR_PER = 7;
troshx_sos_core_Modifier.CMP_ADR = 8;
troshx_sos_core_Modifier.CMP_MOB = 9;
troshx_sos_core_Modifier.CMP_CAR = 10;
troshx_sos_core_Modifier.CMP_CHA = 11;
troshx_sos_core_Modifier.CMP_TOU = 12;
troshx_sos_core_Modifier.CP = 13;
troshx_sos_core_Modifier.REACH = 14;
troshx_sos_core_Modifier.MP = 15;
troshx_sos_core_Modifier.CAR_END = 16;
troshx_sos_core_Modifier.FATIQUE_END = 17;
troshx_sos_core_Modifier.STARTING_WEALTH = 18;
troshx_sos_core_Modifier.STARTING_MONEY = 19;
troshx_sos_core_Modifier.STARTING_GRIT = 20;
troshx_sos_core_Modifier.TOTAL_SLOTS = 21;
troshx_sos_core_Profeciency.TYPE_MELEE = 0;
troshx_sos_core_Profeciency.TYPE_RANGED = 1;
troshx_sos_core_Profeciency.MASK_ALL = 2147483647;
troshx_sos_core_Profeciency.M_1H_SWORD = 0;
troshx_sos_core_Profeciency.M_1H_BLUNT = 1;
troshx_sos_core_Profeciency.M_2H_BLUNT = 2;
troshx_sos_core_Profeciency.M_2H_SWORD = 3;
troshx_sos_core_Profeciency.M_SPEAR = 4;
troshx_sos_core_Profeciency.M_POLEARM = 5;
troshx_sos_core_Profeciency.M_DAGGER = 6;
troshx_sos_core_Profeciency.M_WRESTLING = 7;
troshx_sos_core_Profeciency.M_PUGILISM = 8;
troshx_sos_core_Profeciency.TOTAL_M = 9;
troshx_sos_core_Profeciency.R_BOW = 0;
troshx_sos_core_Profeciency.R_SLING = 1;
troshx_sos_core_Profeciency.R_CROSSBOW = 2;
troshx_sos_core_Profeciency.R_FIREARM = 3;
troshx_sos_core_Profeciency.R_THROWING = 4;
troshx_sos_core_Profeciency.TOTAL_R = 5;
troshx_sos_core_Profeciency.SEPERATOR = "_$_";
troshx_sos_core_School.MAX_LEVELS = 20;
troshx_sos_core_School.MASTERY_LEVEL = 20;
troshx_sos_core_Shield.SIZE_SMALL = 0;
troshx_sos_core_Shield.SIZE_MEDIUM = 1;
troshx_sos_core_Shield.SIZE_LARGE = 2;
troshx_sos_core_Shield.STRAP_ARM = 0;
troshx_sos_core_Shield.STRAP_SHOULDER = 1;
troshx_sos_core_Shield.POSITION_LOW = 0;
troshx_sos_core_Shield.POSITION_HIGH = 1;
troshx_sos_core_Skill.STR = 1;
troshx_sos_core_Skill.AGI = 2;
troshx_sos_core_Skill.END = 4;
troshx_sos_core_Skill.HLT = 8;
troshx_sos_core_Skill.WIP = 16;
troshx_sos_core_Skill.WIT = 32;
troshx_sos_core_Skill.INT = 64;
troshx_sos_core_Skill.PER = 128;
troshx_sos_core_Skill.CHA = 256;
troshx_sos_core_Skill.TRAINED = 1;
troshx_sos_core_Skill.TEACHER = 4;
troshx_sos_core_Skill.MASTERY = 10;
troshx_sos_core_Skill.CHARS_SPECIAL_OPEN = " (";
troshx_sos_core_Skill.CHARS_SPECIAL_CLOSE = ")";
troshx_sos_core_CustomMelee.PISTOL = 1;
troshx_sos_core_CustomMelee.DRAGON = 2;
troshx_sos_core_CustomMelee.CUSTOM_HILT = 1;
troshx_sos_core_CustomMelee.RIDICULOUSLY_SHARP = 2;
troshx_sos_core_CustomMelee.EXQUISITE_DECORATION = 4;
troshx_sos_core_CustomMelee.BIZARRE_GIMMICK = 8;
troshx_sos_core_Wound.STAUNCHED = 1;
troshx_sos_core_Wound.TREATED = 2;
troshx_sos_core_Wound.MASK_OPENWOUND = 3;
troshx_sos_core_Wound.UNIQUE_COUNT = 0;
troshx_sos_races_Races.PCP_FOR_TIERS = [1,2,4,6,8];
troshx_sos_schools_EsotericSchoolBonuses.SIMPLICITY = 1;
troshx_sos_schools_EsotericSchoolBonuses.FLOWING_WATER = 2;
troshx_sos_schools_EsotericSchoolBonuses.RAGING_FLAME = 4;
troshx_sos_schools_EsotericSchoolBonuses.BITING_WIND = 8;
troshx_sos_schools_EsotericSchoolBonuses.STOIC_EARTH = 16;
troshx_sos_schools_OfficerBonuses.PROTECT_THE_BANNER = "Protect the Banner!";
troshx_sos_schools_OfficerBonuses.RIDE_TO_RUIN = "Ride to Ruin!";
troshx_sos_sheets_CharSheet.GENDER_MALE = 0;
troshx_sos_sheets_CharSheet.GENDER_FEMALE = 1;
troshx_sos_sheets_CharSheet.VERSION = 2;
troshx_sos_sheets_CharSheet.LIQUIDATE_ASSET_BASE = 6;
troshx_sos_vue_CharVueMixin.CROSS_SWORDS = "⚔";
troshx_sos_vue_CharVueMixin.BULLS_EYE = "◎";
troshx_sos_vue_Globals.DOMAIN_INVENTORY = "sos-weapons-and-armour";
troshx_sos_vue_Globals.DOMAIN_CHARACTER = "sos-sample-characters";
troshx_sos_vue_InventoryVue.LABEL_YOUR = "Your";
troshx_sos_vue_InventoryVue.SAMPLE_AV = { avc : 0, avp : 0, avb : 0};
troshx_sos_vue_TDHands.NAME = "td-hands";
troshx_sos_vue_TDUnheld.NAME = "td-unheld";
troshx_sos_vue_TDWeapProfSelect.NAME = "td-prof";
troshx_sos_vue_TDWidgetHolder.NAME = "td-widget";
troshx_sos_vue_input_InputInt.NAME = "InputInt";
troshx_sos_vue_input_InputNumber.NAME = "InputNumber";
troshx_sos_vue_input_InputString.NAME = "InputString";
troshx_sos_vue_inputs_NumericInput.TEMPLATE = "<input type=\"number\" number :disabled=\"disabled\" :value=\"obj[prop]\" :readonly=\"readonly\" v-on:blur=\"blurHandler($" + "event.target)\" v-on:input=\"inputHandler($" + "event.target)\" :class=\"{invalid:!valid}\" :min=\"min\" :max=\"max\"></input>";
troshx_sos_vue_inputs_impl_AttributeInput.NAME = "AttributeInput";
troshx_sos_vue_inputs_impl_BoonBaneInput.NAME = "BoonBaneInput";
troshx_sos_vue_inputs_impl_CategoryPCPInput.NAME = "CategoryPCPInput";
troshx_sos_vue_inputs_impl_InputNameLabel.NAME = "InputNameLabel";
troshx_sos_vue_inputs_impl_SchoolLevelInput.NAME = "SchoolLevelInput";
troshx_sos_vue_inputs_impl_SkillLibInput.NAME = "SkillLibInput";
troshx_sos_vue_inputs_impl_SkillPacketInput.NAME = "SkillPacketInput";
troshx_sos_vue_treeview_TreeView.UID_COUNT = 0;
troshx_sos_vue_treeview_TreeView.ICON_CLOSED = 0;
troshx_sos_vue_treeview_TreeView.ICON_OPENED = 1;
troshx_sos_vue_treeview_TreeView.ICON_LEAF = 2;
troshx_sos_vue_treeview_TreeView.EVENT_CLICK = "treeview_click";
troshx_sos_vue_uifields_ArrayOf.NAME = "ArrayOf";
troshx_sos_vue_uifields_ArrayOfBits.NAME = "ArrayOfBits";
troshx_sos_vue_uifields_Bitmask.NAME = "Bitmask";
troshx_sos_vue_uifields_ButtonCounter.NAME = "ButtonCounter";
troshx_sos_vue_uifields_ButtonPermaPress.NAME = "ButtonPermaPress";
troshx_sos_vue_uifields_FieldInt.NAME = "FieldInt";
troshx_sos_vue_uifields_FieldNumber.NAME = "FieldNumber";
troshx_sos_vue_uifields_FieldString.NAME = "FieldString";
troshx_sos_vue_uifields_FieldTextArea.NAME = "FieldTextArea";
troshx_sos_vue_uifields_HitLocationMultiSelector.NAME = "HitLocationMultiSelector";
troshx_sos_vue_uifields_HitLocationSelector.NAME = "HitLocationSelector";
troshx_sos_vue_uifields_MoneyField.NAME = "Money";
troshx_sos_vue_uifields_SingleBitSelection.NAME = "SingleBitSelection";
troshx_sos_vue_uifields_SingleSelection.NAME = "SingleSelection";
troshx_sos_vue_uifields_SingleSelectionStr.NAME = "SingleSelectionStr";
troshx_sos_vue_uifields_WealthAssetField.NAME = "WealthAssetField";
troshx_sos_vue_widgets_BoonBaneApplyDetails.NAME = "bb-apply";
troshx_sos_vue_widgets_GingkoTreeBrowser.EVENT_OPEN = "open";
troshx_sos_vue_widgets_GingkoTreeBrowser.EVENT_LOADED_DOMAIN = "loaded-domain";
troshx_sos_vue_widgets_GingkoTreeBrowser.SERIALIZE_PREFIXES = { "troshx.sos.core.Inventory" : { name : "Inventory", icon : "❐"}};
troshx_sos_vue_widgets_InputName.NAME = "input-name";
troshx_sos_vue_widgets_InputNameQty.NAME = "input-name-qty";
troshx_sos_vue_widgets_ModifierList.NAME = "ModifierList";
troshx_sos_vue_widgets_SchoolSheetDetails.NAME = "SchoolSheetDetails";
troshx_sos_vue_widgets_SelectHeld.NAME = "select-held";
troshx_sos_vue_widgets_SkillSubjectCreator.NAME = "SkillSubjectCreator";
troshx_sos_vue_widgets_WAmmoSpawner.NAME = "w-ammo-spawner";
troshx_sos_vue_widgets_WAmmunition.NAME = "w-ammunition";
troshx_sos_vue_widgets_WCoverage.NAME = "w-coverage";
troshx_sos_vue_widgets_WFirearmName.NAME = "w-firearm-name";
troshx_sos_vue_widgets_WMeleeAtk.NAME = "w-melee-atk";
troshx_sos_vue_widgets_WMeleeDef.NAME = "w-melee-def";
troshx_sos_vue_widgets_WMissileAtk.NAME = "w-missile-atk";
troshx_sos_vue_widgets_WProf.NAME = "w-prof";
troshx_sos_vue_widgets_WSpanTools.NAME = "w-span-tools";
troshx_sos_vue_widgets_WTags.NAME = "w-tags";
MainSOS.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
